/**
 * Kestra EE
 * All API operations, except for Superadmin-only endpoints, require a tenant identifier in the HTTP path.<br/> Endpoints designated as Superadmin-only are not tenant-scoped.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CrudEventType from './CrudEventType';
import Permission from './Permission';

/**
 * The AuditLogControllerFindRequest model module.
 * @module model/AuditLogControllerFindRequest
 * @version v0.24.1
 */
class AuditLogControllerFindRequest {
    /**
     * Constructs a new <code>AuditLogControllerFindRequest</code>.
     * @alias module:model/AuditLogControllerFindRequest
     */
    constructor() { 
        
        AuditLogControllerFindRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AuditLogControllerFindRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AuditLogControllerFindRequest} obj Optional instance to populate.
     * @return {module:model/AuditLogControllerFindRequest} The populated <code>AuditLogControllerFindRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AuditLogControllerFindRequest();

            if (data.hasOwnProperty('permission')) {
                obj['permission'] = Permission.constructFromObject(data['permission']);
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], CrudEventType);
            }
            if (data.hasOwnProperty('detail')) {
                obj['detail'] = ApiClient.convertToType(data['detail'], {'String': Object});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AuditLogControllerFindRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AuditLogControllerFindRequest</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * @member {module:model/Permission} permission
 */
AuditLogControllerFindRequest.prototype['permission'] = undefined;

/**
 * @member {module:model/CrudEventType} type
 */
AuditLogControllerFindRequest.prototype['type'] = undefined;

/**
 * @member {Object.<String, Object>} detail
 */
AuditLogControllerFindRequest.prototype['detail'] = undefined;






export default AuditLogControllerFindRequest;

