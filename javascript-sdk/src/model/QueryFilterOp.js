/**
 * Kestra EE
 * All API operations allow an optional tenant identifier in the HTTP path, if you don't use multi-tenancy you must omit the tenant identifier.<br/> This means that, for example, when trying to access the Flows API, instead of using <code>/api/v1/{tenant}/flows</code> you must use <code>/api/v1/flows</code>.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
/**
* Enum class QueryFilterOp.
* @enum {}
* @readonly
*/
export default class QueryFilterOp {
    
        /**
         * value: "EQUALS"
         * @const
         */
        "EQUALS" = "EQUALS";

    
        /**
         * value: "NOT_EQUALS"
         * @const
         */
        "NOT_EQUALS" = "NOT_EQUALS";

    
        /**
         * value: "GREATER_THAN"
         * @const
         */
        "GREATER_THAN" = "GREATER_THAN";

    
        /**
         * value: "LESS_THAN"
         * @const
         */
        "LESS_THAN" = "LESS_THAN";

    
        /**
         * value: "GREATER_THAN_OR_EQUAL_TO"
         * @const
         */
        "GREATER_THAN_OR_EQUAL_TO" = "GREATER_THAN_OR_EQUAL_TO";

    
        /**
         * value: "LESS_THAN_OR_EQUAL_TO"
         * @const
         */
        "LESS_THAN_OR_EQUAL_TO" = "LESS_THAN_OR_EQUAL_TO";

    
        /**
         * value: "IN"
         * @const
         */
        "IN" = "IN";

    
        /**
         * value: "NOT_IN"
         * @const
         */
        "NOT_IN" = "NOT_IN";

    
        /**
         * value: "STARTS_WITH"
         * @const
         */
        "STARTS_WITH" = "STARTS_WITH";

    
        /**
         * value: "ENDS_WITH"
         * @const
         */
        "ENDS_WITH" = "ENDS_WITH";

    
        /**
         * value: "CONTAINS"
         * @const
         */
        "CONTAINS" = "CONTAINS";

    
        /**
         * value: "REGEX"
         * @const
         */
        "REGEX" = "REGEX";

    
        /**
         * value: "PREFIX"
         * @const
         */
        "PREFIX" = "PREFIX";

    

    /**
    * Returns a <code>QueryFilterOp</code> enum value from a Javascript object name.
    * @param {Object} data The plain JavaScript object containing the name of the enum value.
    * @return {module:model/QueryFilterOp} The enum <code>QueryFilterOp</code> value.
    */
    static constructFromObject(object) {
        return object;
    }
}

