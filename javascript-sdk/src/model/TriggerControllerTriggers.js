/**
 * Kestra EE
 * All API operations, except for Superadmin-only endpoints, require a tenant identifier in the HTTP path.<br/> Endpoints designated as Superadmin-only are not tenant-scoped.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AbstractTrigger from './AbstractTrigger';
import Trigger from './Trigger';

/**
 * The TriggerControllerTriggers model module.
 * @module model/TriggerControllerTriggers
 * @version v1.0.5
 */
class TriggerControllerTriggers {
    /**
     * Constructs a new <code>TriggerControllerTriggers</code>.
     * @alias module:model/TriggerControllerTriggers
     */
    constructor() { 
        
        TriggerControllerTriggers.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TriggerControllerTriggers</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TriggerControllerTriggers} obj Optional instance to populate.
     * @return {module:model/TriggerControllerTriggers} The populated <code>TriggerControllerTriggers</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TriggerControllerTriggers();

            if (data.hasOwnProperty('abstractTrigger')) {
                obj['abstractTrigger'] = AbstractTrigger.constructFromObject(data['abstractTrigger']);
            }
            if (data.hasOwnProperty('triggerContext')) {
                obj['triggerContext'] = Trigger.constructFromObject(data['triggerContext']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TriggerControllerTriggers</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TriggerControllerTriggers</code>.
     */
    static validateJSON(data) {
        // validate the optional field `abstractTrigger`
        if (data['abstractTrigger']) { // data not null
          AbstractTrigger.validateJSON(data['abstractTrigger']);
        }
        // validate the optional field `triggerContext`
        if (data['triggerContext']) { // data not null
          Trigger.validateJSON(data['triggerContext']);
        }

        return true;
    }


}



/**
 * @member {module:model/AbstractTrigger} abstractTrigger
 */
TriggerControllerTriggers.prototype['abstractTrigger'] = undefined;

/**
 * @member {module:model/Trigger} triggerContext
 */
TriggerControllerTriggers.prototype['triggerContext'] = undefined;






export default TriggerControllerTriggers;

