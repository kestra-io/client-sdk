/**
 * Kestra EE
 * All API operations allow an optional tenant identifier in the HTTP path, if you don't use multi-tenancy you must omit the tenant identifier.<br/> This means that, for example, when trying to access the Flows API, instead of using <code>/api/v1/{tenant}/flows</code> you must use <code>/api/v1/flows</code>.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ClusterControllerApiPluginListRequest model module.
 * @module model/ClusterControllerApiPluginListRequest
 * @version v1
 */
class ClusterControllerApiPluginListRequest {
    /**
     * Constructs a new <code>ClusterControllerApiPluginListRequest</code>.
     * @alias module:model/ClusterControllerApiPluginListRequest
     */
    constructor() { 
        
        ClusterControllerApiPluginListRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ClusterControllerApiPluginListRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ClusterControllerApiPluginListRequest} obj Optional instance to populate.
     * @return {module:model/ClusterControllerApiPluginListRequest} The populated <code>ClusterControllerApiPluginListRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ClusterControllerApiPluginListRequest();

            if (data.hasOwnProperty('plugins')) {
                obj['plugins'] = ApiClient.convertToType(data['plugins'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ClusterControllerApiPluginListRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ClusterControllerApiPluginListRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['plugins'])) {
            throw new Error("Expected the field `plugins` to be an array in the JSON data but got " + data['plugins']);
        }

        return true;
    }


}



/**
 * @member {Array.<String>} plugins
 */
ClusterControllerApiPluginListRequest.prototype['plugins'] = undefined;






export default ClusterControllerApiPluginListRequest;

