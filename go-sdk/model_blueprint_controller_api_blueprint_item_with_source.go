/*
Kestra EE

All API operations, except for Superadmin-only endpoints, require a tenant identifier in the HTTP path.<br/> Endpoints designated as Superadmin-only are not tenant-scoped.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kestra_api_client

import (
	"encoding/json"
	"fmt"
	"time"
)

// checks if the BlueprintControllerApiBlueprintItemWithSource type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BlueprintControllerApiBlueprintItemWithSource{}

// BlueprintControllerApiBlueprintItemWithSource struct for BlueprintControllerApiBlueprintItemWithSource
type BlueprintControllerApiBlueprintItemWithSource struct {
	Id                   string                   `json:"id"`
	Title                string                   `json:"title"`
	Description          string                   `json:"description"`
	IncludedTasks        []string                 `json:"includedTasks"`
	Tags                 []string                 `json:"tags"`
	PublishedAt          time.Time                `json:"publishedAt"`
	Source               *string                  `json:"source,omitempty"`
	Kind                 *BlueprintControllerKind `json:"kind,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _BlueprintControllerApiBlueprintItemWithSource BlueprintControllerApiBlueprintItemWithSource

// NewBlueprintControllerApiBlueprintItemWithSource instantiates a new BlueprintControllerApiBlueprintItemWithSource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBlueprintControllerApiBlueprintItemWithSource(id string, title string, description string, includedTasks []string, tags []string, publishedAt time.Time) *BlueprintControllerApiBlueprintItemWithSource {
	this := BlueprintControllerApiBlueprintItemWithSource{}
	this.Id = id
	this.Title = title
	this.Description = description
	this.IncludedTasks = includedTasks
	this.Tags = tags
	this.PublishedAt = publishedAt
	return &this
}

// NewBlueprintControllerApiBlueprintItemWithSourceWithDefaults instantiates a new BlueprintControllerApiBlueprintItemWithSource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBlueprintControllerApiBlueprintItemWithSourceWithDefaults() *BlueprintControllerApiBlueprintItemWithSource {
	this := BlueprintControllerApiBlueprintItemWithSource{}
	return &this
}

// GetId returns the Id field value
func (o *BlueprintControllerApiBlueprintItemWithSource) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *BlueprintControllerApiBlueprintItemWithSource) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *BlueprintControllerApiBlueprintItemWithSource) SetId(v string) {
	o.Id = v
}

// GetTitle returns the Title field value
func (o *BlueprintControllerApiBlueprintItemWithSource) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *BlueprintControllerApiBlueprintItemWithSource) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *BlueprintControllerApiBlueprintItemWithSource) SetTitle(v string) {
	o.Title = v
}

// GetDescription returns the Description field value
func (o *BlueprintControllerApiBlueprintItemWithSource) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *BlueprintControllerApiBlueprintItemWithSource) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *BlueprintControllerApiBlueprintItemWithSource) SetDescription(v string) {
	o.Description = v
}

// GetIncludedTasks returns the IncludedTasks field value
func (o *BlueprintControllerApiBlueprintItemWithSource) GetIncludedTasks() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.IncludedTasks
}

// GetIncludedTasksOk returns a tuple with the IncludedTasks field value
// and a boolean to check if the value has been set.
func (o *BlueprintControllerApiBlueprintItemWithSource) GetIncludedTasksOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IncludedTasks, true
}

// SetIncludedTasks sets field value
func (o *BlueprintControllerApiBlueprintItemWithSource) SetIncludedTasks(v []string) {
	o.IncludedTasks = v
}

// GetTags returns the Tags field value
func (o *BlueprintControllerApiBlueprintItemWithSource) GetTags() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value
// and a boolean to check if the value has been set.
func (o *BlueprintControllerApiBlueprintItemWithSource) GetTagsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Tags, true
}

// SetTags sets field value
func (o *BlueprintControllerApiBlueprintItemWithSource) SetTags(v []string) {
	o.Tags = v
}

// GetPublishedAt returns the PublishedAt field value
func (o *BlueprintControllerApiBlueprintItemWithSource) GetPublishedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.PublishedAt
}

// GetPublishedAtOk returns a tuple with the PublishedAt field value
// and a boolean to check if the value has been set.
func (o *BlueprintControllerApiBlueprintItemWithSource) GetPublishedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PublishedAt, true
}

// SetPublishedAt sets field value
func (o *BlueprintControllerApiBlueprintItemWithSource) SetPublishedAt(v time.Time) {
	o.PublishedAt = v
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *BlueprintControllerApiBlueprintItemWithSource) GetSource() string {
	if o == nil || IsNil(o.Source) {
		var ret string
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlueprintControllerApiBlueprintItemWithSource) GetSourceOk() (*string, bool) {
	if o == nil || IsNil(o.Source) {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *BlueprintControllerApiBlueprintItemWithSource) HasSource() bool {
	if o != nil && !IsNil(o.Source) {
		return true
	}

	return false
}

// SetSource gets a reference to the given string and assigns it to the Source field.
func (o *BlueprintControllerApiBlueprintItemWithSource) SetSource(v string) {
	o.Source = &v
}

// GetKind returns the Kind field value if set, zero value otherwise.
func (o *BlueprintControllerApiBlueprintItemWithSource) GetKind() BlueprintControllerKind {
	if o == nil || IsNil(o.Kind) {
		var ret BlueprintControllerKind
		return ret
	}
	return *o.Kind
}

// GetKindOk returns a tuple with the Kind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlueprintControllerApiBlueprintItemWithSource) GetKindOk() (*BlueprintControllerKind, bool) {
	if o == nil || IsNil(o.Kind) {
		return nil, false
	}
	return o.Kind, true
}

// HasKind returns a boolean if a field has been set.
func (o *BlueprintControllerApiBlueprintItemWithSource) HasKind() bool {
	if o != nil && !IsNil(o.Kind) {
		return true
	}

	return false
}

// SetKind gets a reference to the given BlueprintControllerKind and assigns it to the Kind field.
func (o *BlueprintControllerApiBlueprintItemWithSource) SetKind(v BlueprintControllerKind) {
	o.Kind = &v
}

func (o BlueprintControllerApiBlueprintItemWithSource) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BlueprintControllerApiBlueprintItemWithSource) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["title"] = o.Title
	toSerialize["description"] = o.Description
	toSerialize["includedTasks"] = o.IncludedTasks
	toSerialize["tags"] = o.Tags
	toSerialize["publishedAt"] = o.PublishedAt
	if !IsNil(o.Source) {
		toSerialize["source"] = o.Source
	}
	if !IsNil(o.Kind) {
		toSerialize["kind"] = o.Kind
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *BlueprintControllerApiBlueprintItemWithSource) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"title",
		"description",
		"includedTasks",
		"tags",
		"publishedAt",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBlueprintControllerApiBlueprintItemWithSource := _BlueprintControllerApiBlueprintItemWithSource{}

	err = json.Unmarshal(data, &varBlueprintControllerApiBlueprintItemWithSource)

	if err != nil {
		return err
	}

	*o = BlueprintControllerApiBlueprintItemWithSource(varBlueprintControllerApiBlueprintItemWithSource)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "title")
		delete(additionalProperties, "description")
		delete(additionalProperties, "includedTasks")
		delete(additionalProperties, "tags")
		delete(additionalProperties, "publishedAt")
		delete(additionalProperties, "source")
		delete(additionalProperties, "kind")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBlueprintControllerApiBlueprintItemWithSource struct {
	value *BlueprintControllerApiBlueprintItemWithSource
	isSet bool
}

func (v NullableBlueprintControllerApiBlueprintItemWithSource) Get() *BlueprintControllerApiBlueprintItemWithSource {
	return v.value
}

func (v *NullableBlueprintControllerApiBlueprintItemWithSource) Set(val *BlueprintControllerApiBlueprintItemWithSource) {
	v.value = val
	v.isSet = true
}

func (v NullableBlueprintControllerApiBlueprintItemWithSource) IsSet() bool {
	return v.isSet
}

func (v *NullableBlueprintControllerApiBlueprintItemWithSource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBlueprintControllerApiBlueprintItemWithSource(val *BlueprintControllerApiBlueprintItemWithSource) *NullableBlueprintControllerApiBlueprintItemWithSource {
	return &NullableBlueprintControllerApiBlueprintItemWithSource{value: val, isSet: true}
}

func (v NullableBlueprintControllerApiBlueprintItemWithSource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBlueprintControllerApiBlueprintItemWithSource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
