/*
Kestra EE

All API operations, except for Superadmin-only endpoints, require a tenant identifier in the HTTP path.<br/> Endpoints designated as Superadmin-only are not tenant-scoped.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kestra_api_client

import (
	"encoding/json"
	"fmt"
	"time"
)

// checks if the BlueprintControllerApiBlueprintTagItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BlueprintControllerApiBlueprintTagItem{}

// BlueprintControllerApiBlueprintTagItem struct for BlueprintControllerApiBlueprintTagItem
type BlueprintControllerApiBlueprintTagItem struct {
	Id                   string    `json:"id"`
	Name                 string    `json:"name"`
	PublishedAt          time.Time `json:"publishedAt"`
	AdditionalProperties map[string]interface{}
}

type _BlueprintControllerApiBlueprintTagItem BlueprintControllerApiBlueprintTagItem

// NewBlueprintControllerApiBlueprintTagItem instantiates a new BlueprintControllerApiBlueprintTagItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBlueprintControllerApiBlueprintTagItem(id string, name string, publishedAt time.Time) *BlueprintControllerApiBlueprintTagItem {
	this := BlueprintControllerApiBlueprintTagItem{}
	this.Id = id
	this.Name = name
	this.PublishedAt = publishedAt
	return &this
}

// NewBlueprintControllerApiBlueprintTagItemWithDefaults instantiates a new BlueprintControllerApiBlueprintTagItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBlueprintControllerApiBlueprintTagItemWithDefaults() *BlueprintControllerApiBlueprintTagItem {
	this := BlueprintControllerApiBlueprintTagItem{}
	return &this
}

// GetId returns the Id field value
func (o *BlueprintControllerApiBlueprintTagItem) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *BlueprintControllerApiBlueprintTagItem) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *BlueprintControllerApiBlueprintTagItem) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *BlueprintControllerApiBlueprintTagItem) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *BlueprintControllerApiBlueprintTagItem) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *BlueprintControllerApiBlueprintTagItem) SetName(v string) {
	o.Name = v
}

// GetPublishedAt returns the PublishedAt field value
func (o *BlueprintControllerApiBlueprintTagItem) GetPublishedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.PublishedAt
}

// GetPublishedAtOk returns a tuple with the PublishedAt field value
// and a boolean to check if the value has been set.
func (o *BlueprintControllerApiBlueprintTagItem) GetPublishedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PublishedAt, true
}

// SetPublishedAt sets field value
func (o *BlueprintControllerApiBlueprintTagItem) SetPublishedAt(v time.Time) {
	o.PublishedAt = v
}

func (o BlueprintControllerApiBlueprintTagItem) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BlueprintControllerApiBlueprintTagItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	toSerialize["publishedAt"] = o.PublishedAt

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *BlueprintControllerApiBlueprintTagItem) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"name",
		"publishedAt",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBlueprintControllerApiBlueprintTagItem := _BlueprintControllerApiBlueprintTagItem{}

	err = json.Unmarshal(data, &varBlueprintControllerApiBlueprintTagItem)

	if err != nil {
		return err
	}

	*o = BlueprintControllerApiBlueprintTagItem(varBlueprintControllerApiBlueprintTagItem)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "name")
		delete(additionalProperties, "publishedAt")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBlueprintControllerApiBlueprintTagItem struct {
	value *BlueprintControllerApiBlueprintTagItem
	isSet bool
}

func (v NullableBlueprintControllerApiBlueprintTagItem) Get() *BlueprintControllerApiBlueprintTagItem {
	return v.value
}

func (v *NullableBlueprintControllerApiBlueprintTagItem) Set(val *BlueprintControllerApiBlueprintTagItem) {
	v.value = val
	v.isSet = true
}

func (v NullableBlueprintControllerApiBlueprintTagItem) IsSet() bool {
	return v.isSet
}

func (v *NullableBlueprintControllerApiBlueprintTagItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBlueprintControllerApiBlueprintTagItem(val *BlueprintControllerApiBlueprintTagItem) *NullableBlueprintControllerApiBlueprintTagItem {
	return &NullableBlueprintControllerApiBlueprintTagItem{value: val, isSet: true}
}

func (v NullableBlueprintControllerApiBlueprintTagItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBlueprintControllerApiBlueprintTagItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
