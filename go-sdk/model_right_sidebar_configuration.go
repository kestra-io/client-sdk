/*
Kestra EE

All API operations, except for Superadmin-only endpoints, require a tenant identifier in the HTTP path.<br/> Endpoints designated as Superadmin-only are not tenant-scoped.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kestra_api_client

import (
	"encoding/json"
)

// checks if the RightSidebarConfiguration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RightSidebarConfiguration{}

// RightSidebarConfiguration struct for RightSidebarConfiguration
type RightSidebarConfiguration struct {
	CustomLinks          *map[string]RightSidebarConfigurationCustomLink `json:"customLinks,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _RightSidebarConfiguration RightSidebarConfiguration

// NewRightSidebarConfiguration instantiates a new RightSidebarConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRightSidebarConfiguration() *RightSidebarConfiguration {
	this := RightSidebarConfiguration{}
	return &this
}

// NewRightSidebarConfigurationWithDefaults instantiates a new RightSidebarConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRightSidebarConfigurationWithDefaults() *RightSidebarConfiguration {
	this := RightSidebarConfiguration{}
	return &this
}

// GetCustomLinks returns the CustomLinks field value if set, zero value otherwise.
func (o *RightSidebarConfiguration) GetCustomLinks() map[string]RightSidebarConfigurationCustomLink {
	if o == nil || IsNil(o.CustomLinks) {
		var ret map[string]RightSidebarConfigurationCustomLink
		return ret
	}
	return *o.CustomLinks
}

// GetCustomLinksOk returns a tuple with the CustomLinks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RightSidebarConfiguration) GetCustomLinksOk() (*map[string]RightSidebarConfigurationCustomLink, bool) {
	if o == nil || IsNil(o.CustomLinks) {
		return nil, false
	}
	return o.CustomLinks, true
}

// HasCustomLinks returns a boolean if a field has been set.
func (o *RightSidebarConfiguration) HasCustomLinks() bool {
	if o != nil && !IsNil(o.CustomLinks) {
		return true
	}

	return false
}

// SetCustomLinks gets a reference to the given map[string]RightSidebarConfigurationCustomLink and assigns it to the CustomLinks field.
func (o *RightSidebarConfiguration) SetCustomLinks(v map[string]RightSidebarConfigurationCustomLink) {
	o.CustomLinks = &v
}

func (o RightSidebarConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RightSidebarConfiguration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CustomLinks) {
		toSerialize["customLinks"] = o.CustomLinks
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *RightSidebarConfiguration) UnmarshalJSON(data []byte) (err error) {
	varRightSidebarConfiguration := _RightSidebarConfiguration{}

	err = json.Unmarshal(data, &varRightSidebarConfiguration)

	if err != nil {
		return err
	}

	*o = RightSidebarConfiguration(varRightSidebarConfiguration)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "customLinks")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableRightSidebarConfiguration struct {
	value *RightSidebarConfiguration
	isSet bool
}

func (v NullableRightSidebarConfiguration) Get() *RightSidebarConfiguration {
	return v.value
}

func (v *NullableRightSidebarConfiguration) Set(val *RightSidebarConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableRightSidebarConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableRightSidebarConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRightSidebarConfiguration(val *RightSidebarConfiguration) *NullableRightSidebarConfiguration {
	return &NullableRightSidebarConfiguration{value: val, isSet: true}
}

func (v NullableRightSidebarConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRightSidebarConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
