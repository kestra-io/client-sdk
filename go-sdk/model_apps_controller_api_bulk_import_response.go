/*
Kestra EE

All API operations, except for Superadmin-only endpoints, require a tenant identifier in the HTTP path.<br/> Endpoints designated as Superadmin-only are not tenant-scoped.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kestra_api_client

import (
	"encoding/json"
	"fmt"
)

// checks if the AppsControllerApiBulkImportResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AppsControllerApiBulkImportResponse{}

// AppsControllerApiBulkImportResponse struct for AppsControllerApiBulkImportResponse
type AppsControllerApiBulkImportResponse struct {
	Success              []string                                   `json:"success"`
	Errors               []AppsControllerApiBulkImportResponseError `json:"errors"`
	AdditionalProperties map[string]interface{}
}

type _AppsControllerApiBulkImportResponse AppsControllerApiBulkImportResponse

// NewAppsControllerApiBulkImportResponse instantiates a new AppsControllerApiBulkImportResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppsControllerApiBulkImportResponse(success []string, errors []AppsControllerApiBulkImportResponseError) *AppsControllerApiBulkImportResponse {
	this := AppsControllerApiBulkImportResponse{}
	this.Success = success
	this.Errors = errors
	return &this
}

// NewAppsControllerApiBulkImportResponseWithDefaults instantiates a new AppsControllerApiBulkImportResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppsControllerApiBulkImportResponseWithDefaults() *AppsControllerApiBulkImportResponse {
	this := AppsControllerApiBulkImportResponse{}
	return &this
}

// GetSuccess returns the Success field value
func (o *AppsControllerApiBulkImportResponse) GetSuccess() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Success
}

// GetSuccessOk returns a tuple with the Success field value
// and a boolean to check if the value has been set.
func (o *AppsControllerApiBulkImportResponse) GetSuccessOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Success, true
}

// SetSuccess sets field value
func (o *AppsControllerApiBulkImportResponse) SetSuccess(v []string) {
	o.Success = v
}

// GetErrors returns the Errors field value
func (o *AppsControllerApiBulkImportResponse) GetErrors() []AppsControllerApiBulkImportResponseError {
	if o == nil {
		var ret []AppsControllerApiBulkImportResponseError
		return ret
	}

	return o.Errors
}

// GetErrorsOk returns a tuple with the Errors field value
// and a boolean to check if the value has been set.
func (o *AppsControllerApiBulkImportResponse) GetErrorsOk() ([]AppsControllerApiBulkImportResponseError, bool) {
	if o == nil {
		return nil, false
	}
	return o.Errors, true
}

// SetErrors sets field value
func (o *AppsControllerApiBulkImportResponse) SetErrors(v []AppsControllerApiBulkImportResponseError) {
	o.Errors = v
}

func (o AppsControllerApiBulkImportResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AppsControllerApiBulkImportResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["success"] = o.Success
	toSerialize["errors"] = o.Errors

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AppsControllerApiBulkImportResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"success",
		"errors",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAppsControllerApiBulkImportResponse := _AppsControllerApiBulkImportResponse{}

	err = json.Unmarshal(data, &varAppsControllerApiBulkImportResponse)

	if err != nil {
		return err
	}

	*o = AppsControllerApiBulkImportResponse(varAppsControllerApiBulkImportResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "success")
		delete(additionalProperties, "errors")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAppsControllerApiBulkImportResponse struct {
	value *AppsControllerApiBulkImportResponse
	isSet bool
}

func (v NullableAppsControllerApiBulkImportResponse) Get() *AppsControllerApiBulkImportResponse {
	return v.value
}

func (v *NullableAppsControllerApiBulkImportResponse) Set(val *AppsControllerApiBulkImportResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAppsControllerApiBulkImportResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAppsControllerApiBulkImportResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppsControllerApiBulkImportResponse(val *AppsControllerApiBulkImportResponse) *NullableAppsControllerApiBulkImportResponse {
	return &NullableAppsControllerApiBulkImportResponse{value: val, isSet: true}
}

func (v NullableAppsControllerApiBulkImportResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppsControllerApiBulkImportResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
