/*
Kestra EE

All API operations, except for Superadmin-only endpoints, require a tenant identifier in the HTTP path.<br/> Endpoints designated as Superadmin-only are not tenant-scoped.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kestra_api_client

import (
	"encoding/json"
)

// checks if the RightSidebarConfigurationCustomLink type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RightSidebarConfigurationCustomLink{}

// RightSidebarConfigurationCustomLink struct for RightSidebarConfigurationCustomLink
type RightSidebarConfigurationCustomLink struct {
	Title                *string `json:"title,omitempty"`
	Url                  *string `json:"url,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _RightSidebarConfigurationCustomLink RightSidebarConfigurationCustomLink

// NewRightSidebarConfigurationCustomLink instantiates a new RightSidebarConfigurationCustomLink object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRightSidebarConfigurationCustomLink() *RightSidebarConfigurationCustomLink {
	this := RightSidebarConfigurationCustomLink{}
	return &this
}

// NewRightSidebarConfigurationCustomLinkWithDefaults instantiates a new RightSidebarConfigurationCustomLink object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRightSidebarConfigurationCustomLinkWithDefaults() *RightSidebarConfigurationCustomLink {
	this := RightSidebarConfigurationCustomLink{}
	return &this
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *RightSidebarConfigurationCustomLink) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RightSidebarConfigurationCustomLink) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *RightSidebarConfigurationCustomLink) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *RightSidebarConfigurationCustomLink) SetTitle(v string) {
	o.Title = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *RightSidebarConfigurationCustomLink) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RightSidebarConfigurationCustomLink) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *RightSidebarConfigurationCustomLink) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *RightSidebarConfigurationCustomLink) SetUrl(v string) {
	o.Url = &v
}

func (o RightSidebarConfigurationCustomLink) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RightSidebarConfigurationCustomLink) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *RightSidebarConfigurationCustomLink) UnmarshalJSON(data []byte) (err error) {
	varRightSidebarConfigurationCustomLink := _RightSidebarConfigurationCustomLink{}

	err = json.Unmarshal(data, &varRightSidebarConfigurationCustomLink)

	if err != nil {
		return err
	}

	*o = RightSidebarConfigurationCustomLink(varRightSidebarConfigurationCustomLink)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "title")
		delete(additionalProperties, "url")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableRightSidebarConfigurationCustomLink struct {
	value *RightSidebarConfigurationCustomLink
	isSet bool
}

func (v NullableRightSidebarConfigurationCustomLink) Get() *RightSidebarConfigurationCustomLink {
	return v.value
}

func (v *NullableRightSidebarConfigurationCustomLink) Set(val *RightSidebarConfigurationCustomLink) {
	v.value = val
	v.isSet = true
}

func (v NullableRightSidebarConfigurationCustomLink) IsSet() bool {
	return v.isSet
}

func (v *NullableRightSidebarConfigurationCustomLink) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRightSidebarConfigurationCustomLink(val *RightSidebarConfigurationCustomLink) *NullableRightSidebarConfigurationCustomLink {
	return &NullableRightSidebarConfigurationCustomLink{value: val, isSet: true}
}

func (v NullableRightSidebarConfigurationCustomLink) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRightSidebarConfigurationCustomLink) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
