/*
Kestra EE

All API operations allow an optional tenant identifier in the HTTP path, if you don't use multi-tenancy you must omit the tenant identifier.<br/> This means that, for example, when trying to access the Flows API, instead of using <code>/api/v1/{tenant}/flows</code> you must use <code>/api/v1/flows</code>.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kestra_api_client

import (
	"encoding/json"
)

// checks if the ClusterControllerApiWorkerGroupList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClusterControllerApiWorkerGroupList{}

// ClusterControllerApiWorkerGroupList ApiWorkerGroupList.
type ClusterControllerApiWorkerGroupList struct {
	// The list of worker groups.
	WorkerGroups []ClusterControllerApiWorkerGroupItem `json:"workerGroups,omitempty"`
}

// NewClusterControllerApiWorkerGroupList instantiates a new ClusterControllerApiWorkerGroupList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterControllerApiWorkerGroupList() *ClusterControllerApiWorkerGroupList {
	this := ClusterControllerApiWorkerGroupList{}
	return &this
}

// NewClusterControllerApiWorkerGroupListWithDefaults instantiates a new ClusterControllerApiWorkerGroupList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterControllerApiWorkerGroupListWithDefaults() *ClusterControllerApiWorkerGroupList {
	this := ClusterControllerApiWorkerGroupList{}
	return &this
}

// GetWorkerGroups returns the WorkerGroups field value if set, zero value otherwise.
func (o *ClusterControllerApiWorkerGroupList) GetWorkerGroups() []ClusterControllerApiWorkerGroupItem {
	if o == nil || IsNil(o.WorkerGroups) {
		var ret []ClusterControllerApiWorkerGroupItem
		return ret
	}
	return o.WorkerGroups
}

// GetWorkerGroupsOk returns a tuple with the WorkerGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterControllerApiWorkerGroupList) GetWorkerGroupsOk() ([]ClusterControllerApiWorkerGroupItem, bool) {
	if o == nil || IsNil(o.WorkerGroups) {
		return nil, false
	}
	return o.WorkerGroups, true
}

// HasWorkerGroups returns a boolean if a field has been set.
func (o *ClusterControllerApiWorkerGroupList) HasWorkerGroups() bool {
	if o != nil && !IsNil(o.WorkerGroups) {
		return true
	}

	return false
}

// SetWorkerGroups gets a reference to the given []ClusterControllerApiWorkerGroupItem and assigns it to the WorkerGroups field.
func (o *ClusterControllerApiWorkerGroupList) SetWorkerGroups(v []ClusterControllerApiWorkerGroupItem) {
	o.WorkerGroups = v
}

func (o ClusterControllerApiWorkerGroupList) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClusterControllerApiWorkerGroupList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.WorkerGroups) {
		toSerialize["workerGroups"] = o.WorkerGroups
	}
	return toSerialize, nil
}

type NullableClusterControllerApiWorkerGroupList struct {
	value *ClusterControllerApiWorkerGroupList
	isSet bool
}

func (v NullableClusterControllerApiWorkerGroupList) Get() *ClusterControllerApiWorkerGroupList {
	return v.value
}

func (v *NullableClusterControllerApiWorkerGroupList) Set(val *ClusterControllerApiWorkerGroupList) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterControllerApiWorkerGroupList) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterControllerApiWorkerGroupList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterControllerApiWorkerGroupList(val *ClusterControllerApiWorkerGroupList) *NullableClusterControllerApiWorkerGroupList {
	return &NullableClusterControllerApiWorkerGroupList{value: val, isSet: true}
}

func (v NullableClusterControllerApiWorkerGroupList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterControllerApiWorkerGroupList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
