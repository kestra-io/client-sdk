/*
Kestra EE

All API operations allow an optional tenant identifier in the HTTP path, if you don't use multi-tenancy you must omit the tenant identifier.<br/> This means that, for example, when trying to access the Flows API, instead of using <code>/api/v1/{tenant}/flows</code> you must use <code>/api/v1/flows</code>.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kestra_api_client

import (
	"encoding/json"
	"time"
)

// checks if the ExecutionMetadata type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExecutionMetadata{}

// ExecutionMetadata struct for ExecutionMetadata
type ExecutionMetadata struct {
	AttemptNumber       *int32     `json:"attemptNumber,omitempty"`
	OriginalCreatedDate *time.Time `json:"originalCreatedDate,omitempty"`
}

// NewExecutionMetadata instantiates a new ExecutionMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExecutionMetadata() *ExecutionMetadata {
	this := ExecutionMetadata{}
	return &this
}

// NewExecutionMetadataWithDefaults instantiates a new ExecutionMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExecutionMetadataWithDefaults() *ExecutionMetadata {
	this := ExecutionMetadata{}
	return &this
}

// GetAttemptNumber returns the AttemptNumber field value if set, zero value otherwise.
func (o *ExecutionMetadata) GetAttemptNumber() int32 {
	if o == nil || IsNil(o.AttemptNumber) {
		var ret int32
		return ret
	}
	return *o.AttemptNumber
}

// GetAttemptNumberOk returns a tuple with the AttemptNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExecutionMetadata) GetAttemptNumberOk() (*int32, bool) {
	if o == nil || IsNil(o.AttemptNumber) {
		return nil, false
	}
	return o.AttemptNumber, true
}

// HasAttemptNumber returns a boolean if a field has been set.
func (o *ExecutionMetadata) HasAttemptNumber() bool {
	if o != nil && !IsNil(o.AttemptNumber) {
		return true
	}

	return false
}

// SetAttemptNumber gets a reference to the given int32 and assigns it to the AttemptNumber field.
func (o *ExecutionMetadata) SetAttemptNumber(v int32) {
	o.AttemptNumber = &v
}

// GetOriginalCreatedDate returns the OriginalCreatedDate field value if set, zero value otherwise.
func (o *ExecutionMetadata) GetOriginalCreatedDate() time.Time {
	if o == nil || IsNil(o.OriginalCreatedDate) {
		var ret time.Time
		return ret
	}
	return *o.OriginalCreatedDate
}

// GetOriginalCreatedDateOk returns a tuple with the OriginalCreatedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExecutionMetadata) GetOriginalCreatedDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.OriginalCreatedDate) {
		return nil, false
	}
	return o.OriginalCreatedDate, true
}

// HasOriginalCreatedDate returns a boolean if a field has been set.
func (o *ExecutionMetadata) HasOriginalCreatedDate() bool {
	if o != nil && !IsNil(o.OriginalCreatedDate) {
		return true
	}

	return false
}

// SetOriginalCreatedDate gets a reference to the given time.Time and assigns it to the OriginalCreatedDate field.
func (o *ExecutionMetadata) SetOriginalCreatedDate(v time.Time) {
	o.OriginalCreatedDate = &v
}

func (o ExecutionMetadata) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExecutionMetadata) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AttemptNumber) {
		toSerialize["attemptNumber"] = o.AttemptNumber
	}
	if !IsNil(o.OriginalCreatedDate) {
		toSerialize["originalCreatedDate"] = o.OriginalCreatedDate
	}
	return toSerialize, nil
}

type NullableExecutionMetadata struct {
	value *ExecutionMetadata
	isSet bool
}

func (v NullableExecutionMetadata) Get() *ExecutionMetadata {
	return v.value
}

func (v *NullableExecutionMetadata) Set(val *ExecutionMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableExecutionMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableExecutionMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExecutionMetadata(val *ExecutionMetadata) *NullableExecutionMetadata {
	return &NullableExecutionMetadata{value: val, isSet: true}
}

func (v NullableExecutionMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExecutionMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
