/*
Kestra EE

All API operations, except for Superadmin-only endpoints, require a tenant identifier in the HTTP path.<br/> Endpoints designated as Superadmin-only are not tenant-scoped.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kestra_api_client

import (
	"encoding/json"
	"fmt"
)

// checks if the IdentityProvider type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IdentityProvider{}

// IdentityProvider struct for IdentityProvider
type IdentityProvider struct {
	Attributes              map[string]interface{} `json:"attributes"`
	ExternalId              string                 `json:"externalId"`
	SecurityIntegrationId   string                 `json:"securityIntegrationId"`
	SecurityIntegrationName string                 `json:"securityIntegrationName"`
	AdditionalProperties    map[string]interface{}
}

type _IdentityProvider IdentityProvider

// NewIdentityProvider instantiates a new IdentityProvider object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityProvider(attributes map[string]interface{}, externalId string, securityIntegrationId string, securityIntegrationName string) *IdentityProvider {
	this := IdentityProvider{}
	this.Attributes = attributes
	this.ExternalId = externalId
	this.SecurityIntegrationId = securityIntegrationId
	this.SecurityIntegrationName = securityIntegrationName
	return &this
}

// NewIdentityProviderWithDefaults instantiates a new IdentityProvider object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityProviderWithDefaults() *IdentityProvider {
	this := IdentityProvider{}
	return &this
}

// GetAttributes returns the Attributes field value
func (o *IdentityProvider) GetAttributes() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value
// and a boolean to check if the value has been set.
func (o *IdentityProvider) GetAttributesOk() (map[string]interface{}, bool) {
	if o == nil {
		return map[string]interface{}{}, false
	}
	return o.Attributes, true
}

// SetAttributes sets field value
func (o *IdentityProvider) SetAttributes(v map[string]interface{}) {
	o.Attributes = v
}

// GetExternalId returns the ExternalId field value
func (o *IdentityProvider) GetExternalId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ExternalId
}

// GetExternalIdOk returns a tuple with the ExternalId field value
// and a boolean to check if the value has been set.
func (o *IdentityProvider) GetExternalIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExternalId, true
}

// SetExternalId sets field value
func (o *IdentityProvider) SetExternalId(v string) {
	o.ExternalId = v
}

// GetSecurityIntegrationId returns the SecurityIntegrationId field value
func (o *IdentityProvider) GetSecurityIntegrationId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SecurityIntegrationId
}

// GetSecurityIntegrationIdOk returns a tuple with the SecurityIntegrationId field value
// and a boolean to check if the value has been set.
func (o *IdentityProvider) GetSecurityIntegrationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SecurityIntegrationId, true
}

// SetSecurityIntegrationId sets field value
func (o *IdentityProvider) SetSecurityIntegrationId(v string) {
	o.SecurityIntegrationId = v
}

// GetSecurityIntegrationName returns the SecurityIntegrationName field value
func (o *IdentityProvider) GetSecurityIntegrationName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SecurityIntegrationName
}

// GetSecurityIntegrationNameOk returns a tuple with the SecurityIntegrationName field value
// and a boolean to check if the value has been set.
func (o *IdentityProvider) GetSecurityIntegrationNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SecurityIntegrationName, true
}

// SetSecurityIntegrationName sets field value
func (o *IdentityProvider) SetSecurityIntegrationName(v string) {
	o.SecurityIntegrationName = v
}

func (o IdentityProvider) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IdentityProvider) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["attributes"] = o.Attributes
	toSerialize["externalId"] = o.ExternalId
	toSerialize["securityIntegrationId"] = o.SecurityIntegrationId
	toSerialize["securityIntegrationName"] = o.SecurityIntegrationName

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *IdentityProvider) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"attributes",
		"externalId",
		"securityIntegrationId",
		"securityIntegrationName",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varIdentityProvider := _IdentityProvider{}

	err = json.Unmarshal(data, &varIdentityProvider)

	if err != nil {
		return err
	}

	*o = IdentityProvider(varIdentityProvider)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "attributes")
		delete(additionalProperties, "externalId")
		delete(additionalProperties, "securityIntegrationId")
		delete(additionalProperties, "securityIntegrationName")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableIdentityProvider struct {
	value *IdentityProvider
	isSet bool
}

func (v NullableIdentityProvider) Get() *IdentityProvider {
	return v.value
}

func (v *NullableIdentityProvider) Set(val *IdentityProvider) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityProvider) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityProvider) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityProvider(val *IdentityProvider) *NullableIdentityProvider {
	return &NullableIdentityProvider{value: val, isSet: true}
}

func (v NullableIdentityProvider) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityProvider) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
