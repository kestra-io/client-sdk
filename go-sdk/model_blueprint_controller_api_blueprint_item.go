/*
Kestra EE

All API operations, except for Superadmin-only endpoints, require a tenant identifier in the HTTP path.<br/> Endpoints designated as Superadmin-only are not tenant-scoped.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kestra_api_client

import (
	"encoding/json"
	"fmt"
	"time"
)

// checks if the BlueprintControllerApiBlueprintItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BlueprintControllerApiBlueprintItem{}

// BlueprintControllerApiBlueprintItem struct for BlueprintControllerApiBlueprintItem
type BlueprintControllerApiBlueprintItem struct {
	Id                   string    `json:"id"`
	Title                string    `json:"title"`
	Description          string    `json:"description"`
	IncludedTasks        []string  `json:"includedTasks"`
	Tags                 []string  `json:"tags"`
	PublishedAt          time.Time `json:"publishedAt"`
	AdditionalProperties map[string]interface{}
}

type _BlueprintControllerApiBlueprintItem BlueprintControllerApiBlueprintItem

// NewBlueprintControllerApiBlueprintItem instantiates a new BlueprintControllerApiBlueprintItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBlueprintControllerApiBlueprintItem(id string, title string, description string, includedTasks []string, tags []string, publishedAt time.Time) *BlueprintControllerApiBlueprintItem {
	this := BlueprintControllerApiBlueprintItem{}
	this.Id = id
	this.Title = title
	this.Description = description
	this.IncludedTasks = includedTasks
	this.Tags = tags
	this.PublishedAt = publishedAt
	return &this
}

// NewBlueprintControllerApiBlueprintItemWithDefaults instantiates a new BlueprintControllerApiBlueprintItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBlueprintControllerApiBlueprintItemWithDefaults() *BlueprintControllerApiBlueprintItem {
	this := BlueprintControllerApiBlueprintItem{}
	return &this
}

// GetId returns the Id field value
func (o *BlueprintControllerApiBlueprintItem) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *BlueprintControllerApiBlueprintItem) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *BlueprintControllerApiBlueprintItem) SetId(v string) {
	o.Id = v
}

// GetTitle returns the Title field value
func (o *BlueprintControllerApiBlueprintItem) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *BlueprintControllerApiBlueprintItem) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *BlueprintControllerApiBlueprintItem) SetTitle(v string) {
	o.Title = v
}

// GetDescription returns the Description field value
func (o *BlueprintControllerApiBlueprintItem) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *BlueprintControllerApiBlueprintItem) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *BlueprintControllerApiBlueprintItem) SetDescription(v string) {
	o.Description = v
}

// GetIncludedTasks returns the IncludedTasks field value
func (o *BlueprintControllerApiBlueprintItem) GetIncludedTasks() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.IncludedTasks
}

// GetIncludedTasksOk returns a tuple with the IncludedTasks field value
// and a boolean to check if the value has been set.
func (o *BlueprintControllerApiBlueprintItem) GetIncludedTasksOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IncludedTasks, true
}

// SetIncludedTasks sets field value
func (o *BlueprintControllerApiBlueprintItem) SetIncludedTasks(v []string) {
	o.IncludedTasks = v
}

// GetTags returns the Tags field value
func (o *BlueprintControllerApiBlueprintItem) GetTags() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value
// and a boolean to check if the value has been set.
func (o *BlueprintControllerApiBlueprintItem) GetTagsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Tags, true
}

// SetTags sets field value
func (o *BlueprintControllerApiBlueprintItem) SetTags(v []string) {
	o.Tags = v
}

// GetPublishedAt returns the PublishedAt field value
func (o *BlueprintControllerApiBlueprintItem) GetPublishedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.PublishedAt
}

// GetPublishedAtOk returns a tuple with the PublishedAt field value
// and a boolean to check if the value has been set.
func (o *BlueprintControllerApiBlueprintItem) GetPublishedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PublishedAt, true
}

// SetPublishedAt sets field value
func (o *BlueprintControllerApiBlueprintItem) SetPublishedAt(v time.Time) {
	o.PublishedAt = v
}

func (o BlueprintControllerApiBlueprintItem) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BlueprintControllerApiBlueprintItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["title"] = o.Title
	toSerialize["description"] = o.Description
	toSerialize["includedTasks"] = o.IncludedTasks
	toSerialize["tags"] = o.Tags
	toSerialize["publishedAt"] = o.PublishedAt

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *BlueprintControllerApiBlueprintItem) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"title",
		"description",
		"includedTasks",
		"tags",
		"publishedAt",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBlueprintControllerApiBlueprintItem := _BlueprintControllerApiBlueprintItem{}

	err = json.Unmarshal(data, &varBlueprintControllerApiBlueprintItem)

	if err != nil {
		return err
	}

	*o = BlueprintControllerApiBlueprintItem(varBlueprintControllerApiBlueprintItem)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "title")
		delete(additionalProperties, "description")
		delete(additionalProperties, "includedTasks")
		delete(additionalProperties, "tags")
		delete(additionalProperties, "publishedAt")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBlueprintControllerApiBlueprintItem struct {
	value *BlueprintControllerApiBlueprintItem
	isSet bool
}

func (v NullableBlueprintControllerApiBlueprintItem) Get() *BlueprintControllerApiBlueprintItem {
	return v.value
}

func (v *NullableBlueprintControllerApiBlueprintItem) Set(val *BlueprintControllerApiBlueprintItem) {
	v.value = val
	v.isSet = true
}

func (v NullableBlueprintControllerApiBlueprintItem) IsSet() bool {
	return v.isSet
}

func (v *NullableBlueprintControllerApiBlueprintItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBlueprintControllerApiBlueprintItem(val *BlueprintControllerApiBlueprintItem) *NullableBlueprintControllerApiBlueprintItem {
	return &NullableBlueprintControllerApiBlueprintItem{value: val, isSet: true}
}

func (v NullableBlueprintControllerApiBlueprintItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBlueprintControllerApiBlueprintItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
