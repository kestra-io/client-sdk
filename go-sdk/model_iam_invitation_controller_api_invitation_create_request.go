/*
Kestra EE

All API operations, except for Superadmin-only endpoints, require a tenant identifier in the HTTP path.<br/> Endpoints designated as Superadmin-only are not tenant-scoped.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kestra_api_client

import (
	"encoding/json"
	"fmt"
)

// checks if the IAMInvitationControllerApiInvitationCreateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IAMInvitationControllerApiInvitationCreateRequest{}

// IAMInvitationControllerApiInvitationCreateRequest struct for IAMInvitationControllerApiInvitationCreateRequest
type IAMInvitationControllerApiInvitationCreateRequest struct {
	CreateUserIfNotExist bool                                       `json:"createUserIfNotExist"`
	SuperAdmin           bool                                       `json:"superAdmin"`
	Roles                []IAMInvitationControllerApiInvitationRole `json:"roles"`
	Groups               []string                                   `json:"groups"`
	Email                string                                     `json:"email"`
	AdditionalProperties map[string]interface{}
}

type _IAMInvitationControllerApiInvitationCreateRequest IAMInvitationControllerApiInvitationCreateRequest

// NewIAMInvitationControllerApiInvitationCreateRequest instantiates a new IAMInvitationControllerApiInvitationCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIAMInvitationControllerApiInvitationCreateRequest(createUserIfNotExist bool, superAdmin bool, roles []IAMInvitationControllerApiInvitationRole, groups []string, email string) *IAMInvitationControllerApiInvitationCreateRequest {
	this := IAMInvitationControllerApiInvitationCreateRequest{}
	this.CreateUserIfNotExist = createUserIfNotExist
	this.SuperAdmin = superAdmin
	this.Roles = roles
	this.Groups = groups
	this.Email = email
	return &this
}

// NewIAMInvitationControllerApiInvitationCreateRequestWithDefaults instantiates a new IAMInvitationControllerApiInvitationCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIAMInvitationControllerApiInvitationCreateRequestWithDefaults() *IAMInvitationControllerApiInvitationCreateRequest {
	this := IAMInvitationControllerApiInvitationCreateRequest{}
	return &this
}

// GetCreateUserIfNotExist returns the CreateUserIfNotExist field value
func (o *IAMInvitationControllerApiInvitationCreateRequest) GetCreateUserIfNotExist() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.CreateUserIfNotExist
}

// GetCreateUserIfNotExistOk returns a tuple with the CreateUserIfNotExist field value
// and a boolean to check if the value has been set.
func (o *IAMInvitationControllerApiInvitationCreateRequest) GetCreateUserIfNotExistOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreateUserIfNotExist, true
}

// SetCreateUserIfNotExist sets field value
func (o *IAMInvitationControllerApiInvitationCreateRequest) SetCreateUserIfNotExist(v bool) {
	o.CreateUserIfNotExist = v
}

// GetSuperAdmin returns the SuperAdmin field value
func (o *IAMInvitationControllerApiInvitationCreateRequest) GetSuperAdmin() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.SuperAdmin
}

// GetSuperAdminOk returns a tuple with the SuperAdmin field value
// and a boolean to check if the value has been set.
func (o *IAMInvitationControllerApiInvitationCreateRequest) GetSuperAdminOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SuperAdmin, true
}

// SetSuperAdmin sets field value
func (o *IAMInvitationControllerApiInvitationCreateRequest) SetSuperAdmin(v bool) {
	o.SuperAdmin = v
}

// GetRoles returns the Roles field value
func (o *IAMInvitationControllerApiInvitationCreateRequest) GetRoles() []IAMInvitationControllerApiInvitationRole {
	if o == nil {
		var ret []IAMInvitationControllerApiInvitationRole
		return ret
	}

	return o.Roles
}

// GetRolesOk returns a tuple with the Roles field value
// and a boolean to check if the value has been set.
func (o *IAMInvitationControllerApiInvitationCreateRequest) GetRolesOk() ([]IAMInvitationControllerApiInvitationRole, bool) {
	if o == nil {
		return nil, false
	}
	return o.Roles, true
}

// SetRoles sets field value
func (o *IAMInvitationControllerApiInvitationCreateRequest) SetRoles(v []IAMInvitationControllerApiInvitationRole) {
	o.Roles = v
}

// GetGroups returns the Groups field value
func (o *IAMInvitationControllerApiInvitationCreateRequest) GetGroups() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Groups
}

// GetGroupsOk returns a tuple with the Groups field value
// and a boolean to check if the value has been set.
func (o *IAMInvitationControllerApiInvitationCreateRequest) GetGroupsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Groups, true
}

// SetGroups sets field value
func (o *IAMInvitationControllerApiInvitationCreateRequest) SetGroups(v []string) {
	o.Groups = v
}

// GetEmail returns the Email field value
func (o *IAMInvitationControllerApiInvitationCreateRequest) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *IAMInvitationControllerApiInvitationCreateRequest) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *IAMInvitationControllerApiInvitationCreateRequest) SetEmail(v string) {
	o.Email = v
}

func (o IAMInvitationControllerApiInvitationCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IAMInvitationControllerApiInvitationCreateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["createUserIfNotExist"] = o.CreateUserIfNotExist
	toSerialize["superAdmin"] = o.SuperAdmin
	toSerialize["roles"] = o.Roles
	toSerialize["groups"] = o.Groups
	toSerialize["email"] = o.Email

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *IAMInvitationControllerApiInvitationCreateRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"createUserIfNotExist",
		"superAdmin",
		"roles",
		"groups",
		"email",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varIAMInvitationControllerApiInvitationCreateRequest := _IAMInvitationControllerApiInvitationCreateRequest{}

	err = json.Unmarshal(data, &varIAMInvitationControllerApiInvitationCreateRequest)

	if err != nil {
		return err
	}

	*o = IAMInvitationControllerApiInvitationCreateRequest(varIAMInvitationControllerApiInvitationCreateRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "createUserIfNotExist")
		delete(additionalProperties, "superAdmin")
		delete(additionalProperties, "roles")
		delete(additionalProperties, "groups")
		delete(additionalProperties, "email")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableIAMInvitationControllerApiInvitationCreateRequest struct {
	value *IAMInvitationControllerApiInvitationCreateRequest
	isSet bool
}

func (v NullableIAMInvitationControllerApiInvitationCreateRequest) Get() *IAMInvitationControllerApiInvitationCreateRequest {
	return v.value
}

func (v *NullableIAMInvitationControllerApiInvitationCreateRequest) Set(val *IAMInvitationControllerApiInvitationCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableIAMInvitationControllerApiInvitationCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableIAMInvitationControllerApiInvitationCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIAMInvitationControllerApiInvitationCreateRequest(val *IAMInvitationControllerApiInvitationCreateRequest) *NullableIAMInvitationControllerApiInvitationCreateRequest {
	return &NullableIAMInvitationControllerApiInvitationCreateRequest{value: val, isSet: true}
}

func (v NullableIAMInvitationControllerApiInvitationCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIAMInvitationControllerApiInvitationCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
