/*
Kestra EE

All API operations, except for Superadmin-only endpoints, require a tenant identifier in the HTTP path.<br/> Endpoints designated as Superadmin-only are not tenant-scoped.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kestra_api_client

import (
	"encoding/json"
	"fmt"
	"time"
)

// checks if the IAMInvitationControllerApiInvitationDetail type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IAMInvitationControllerApiInvitationDetail{}

// IAMInvitationControllerApiInvitationDetail struct for IAMInvitationControllerApiInvitationDetail
type IAMInvitationControllerApiInvitationDetail struct {
	Id                   string                     `json:"id"`
	Roles                []ApiRoleSummary           `json:"roles"`
	Groups               []ApiGroupSummary          `json:"groups"`
	TenantId             string                     `json:"tenantId"`
	Email                string                     `json:"email"`
	Status               InvitationInvitationStatus `json:"status"`
	SentAt               time.Time                  `json:"sentAt"`
	ExpiredAt            time.Time                  `json:"expiredAt"`
	AcceptedAt           time.Time                  `json:"acceptedAt"`
	SuperAdmin           bool                       `json:"superAdmin"`
	Link                 string                     `json:"link"`
	AdditionalProperties map[string]interface{}
}

type _IAMInvitationControllerApiInvitationDetail IAMInvitationControllerApiInvitationDetail

// NewIAMInvitationControllerApiInvitationDetail instantiates a new IAMInvitationControllerApiInvitationDetail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIAMInvitationControllerApiInvitationDetail(id string, roles []ApiRoleSummary, groups []ApiGroupSummary, tenantId string, email string, status InvitationInvitationStatus, sentAt time.Time, expiredAt time.Time, acceptedAt time.Time, superAdmin bool, link string) *IAMInvitationControllerApiInvitationDetail {
	this := IAMInvitationControllerApiInvitationDetail{}
	this.Id = id
	this.Roles = roles
	this.Groups = groups
	this.TenantId = tenantId
	this.Email = email
	this.Status = status
	this.SentAt = sentAt
	this.ExpiredAt = expiredAt
	this.AcceptedAt = acceptedAt
	this.SuperAdmin = superAdmin
	this.Link = link
	return &this
}

// NewIAMInvitationControllerApiInvitationDetailWithDefaults instantiates a new IAMInvitationControllerApiInvitationDetail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIAMInvitationControllerApiInvitationDetailWithDefaults() *IAMInvitationControllerApiInvitationDetail {
	this := IAMInvitationControllerApiInvitationDetail{}
	return &this
}

// GetId returns the Id field value
func (o *IAMInvitationControllerApiInvitationDetail) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *IAMInvitationControllerApiInvitationDetail) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *IAMInvitationControllerApiInvitationDetail) SetId(v string) {
	o.Id = v
}

// GetRoles returns the Roles field value
func (o *IAMInvitationControllerApiInvitationDetail) GetRoles() []ApiRoleSummary {
	if o == nil {
		var ret []ApiRoleSummary
		return ret
	}

	return o.Roles
}

// GetRolesOk returns a tuple with the Roles field value
// and a boolean to check if the value has been set.
func (o *IAMInvitationControllerApiInvitationDetail) GetRolesOk() ([]ApiRoleSummary, bool) {
	if o == nil {
		return nil, false
	}
	return o.Roles, true
}

// SetRoles sets field value
func (o *IAMInvitationControllerApiInvitationDetail) SetRoles(v []ApiRoleSummary) {
	o.Roles = v
}

// GetGroups returns the Groups field value
func (o *IAMInvitationControllerApiInvitationDetail) GetGroups() []ApiGroupSummary {
	if o == nil {
		var ret []ApiGroupSummary
		return ret
	}

	return o.Groups
}

// GetGroupsOk returns a tuple with the Groups field value
// and a boolean to check if the value has been set.
func (o *IAMInvitationControllerApiInvitationDetail) GetGroupsOk() ([]ApiGroupSummary, bool) {
	if o == nil {
		return nil, false
	}
	return o.Groups, true
}

// SetGroups sets field value
func (o *IAMInvitationControllerApiInvitationDetail) SetGroups(v []ApiGroupSummary) {
	o.Groups = v
}

// GetTenantId returns the TenantId field value
func (o *IAMInvitationControllerApiInvitationDetail) GetTenantId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value
// and a boolean to check if the value has been set.
func (o *IAMInvitationControllerApiInvitationDetail) GetTenantIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TenantId, true
}

// SetTenantId sets field value
func (o *IAMInvitationControllerApiInvitationDetail) SetTenantId(v string) {
	o.TenantId = v
}

// GetEmail returns the Email field value
func (o *IAMInvitationControllerApiInvitationDetail) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *IAMInvitationControllerApiInvitationDetail) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *IAMInvitationControllerApiInvitationDetail) SetEmail(v string) {
	o.Email = v
}

// GetStatus returns the Status field value
func (o *IAMInvitationControllerApiInvitationDetail) GetStatus() InvitationInvitationStatus {
	if o == nil {
		var ret InvitationInvitationStatus
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *IAMInvitationControllerApiInvitationDetail) GetStatusOk() (*InvitationInvitationStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *IAMInvitationControllerApiInvitationDetail) SetStatus(v InvitationInvitationStatus) {
	o.Status = v
}

// GetSentAt returns the SentAt field value
func (o *IAMInvitationControllerApiInvitationDetail) GetSentAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.SentAt
}

// GetSentAtOk returns a tuple with the SentAt field value
// and a boolean to check if the value has been set.
func (o *IAMInvitationControllerApiInvitationDetail) GetSentAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SentAt, true
}

// SetSentAt sets field value
func (o *IAMInvitationControllerApiInvitationDetail) SetSentAt(v time.Time) {
	o.SentAt = v
}

// GetExpiredAt returns the ExpiredAt field value
func (o *IAMInvitationControllerApiInvitationDetail) GetExpiredAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.ExpiredAt
}

// GetExpiredAtOk returns a tuple with the ExpiredAt field value
// and a boolean to check if the value has been set.
func (o *IAMInvitationControllerApiInvitationDetail) GetExpiredAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExpiredAt, true
}

// SetExpiredAt sets field value
func (o *IAMInvitationControllerApiInvitationDetail) SetExpiredAt(v time.Time) {
	o.ExpiredAt = v
}

// GetAcceptedAt returns the AcceptedAt field value
func (o *IAMInvitationControllerApiInvitationDetail) GetAcceptedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.AcceptedAt
}

// GetAcceptedAtOk returns a tuple with the AcceptedAt field value
// and a boolean to check if the value has been set.
func (o *IAMInvitationControllerApiInvitationDetail) GetAcceptedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AcceptedAt, true
}

// SetAcceptedAt sets field value
func (o *IAMInvitationControllerApiInvitationDetail) SetAcceptedAt(v time.Time) {
	o.AcceptedAt = v
}

// GetSuperAdmin returns the SuperAdmin field value
func (o *IAMInvitationControllerApiInvitationDetail) GetSuperAdmin() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.SuperAdmin
}

// GetSuperAdminOk returns a tuple with the SuperAdmin field value
// and a boolean to check if the value has been set.
func (o *IAMInvitationControllerApiInvitationDetail) GetSuperAdminOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SuperAdmin, true
}

// SetSuperAdmin sets field value
func (o *IAMInvitationControllerApiInvitationDetail) SetSuperAdmin(v bool) {
	o.SuperAdmin = v
}

// GetLink returns the Link field value
func (o *IAMInvitationControllerApiInvitationDetail) GetLink() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Link
}

// GetLinkOk returns a tuple with the Link field value
// and a boolean to check if the value has been set.
func (o *IAMInvitationControllerApiInvitationDetail) GetLinkOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Link, true
}

// SetLink sets field value
func (o *IAMInvitationControllerApiInvitationDetail) SetLink(v string) {
	o.Link = v
}

func (o IAMInvitationControllerApiInvitationDetail) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IAMInvitationControllerApiInvitationDetail) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["roles"] = o.Roles
	toSerialize["groups"] = o.Groups
	toSerialize["tenantId"] = o.TenantId
	toSerialize["email"] = o.Email
	toSerialize["status"] = o.Status
	toSerialize["sentAt"] = o.SentAt
	toSerialize["expiredAt"] = o.ExpiredAt
	toSerialize["acceptedAt"] = o.AcceptedAt
	toSerialize["superAdmin"] = o.SuperAdmin
	toSerialize["link"] = o.Link

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *IAMInvitationControllerApiInvitationDetail) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"roles",
		"groups",
		"tenantId",
		"email",
		"status",
		"sentAt",
		"expiredAt",
		"acceptedAt",
		"superAdmin",
		"link",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varIAMInvitationControllerApiInvitationDetail := _IAMInvitationControllerApiInvitationDetail{}

	err = json.Unmarshal(data, &varIAMInvitationControllerApiInvitationDetail)

	if err != nil {
		return err
	}

	*o = IAMInvitationControllerApiInvitationDetail(varIAMInvitationControllerApiInvitationDetail)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "roles")
		delete(additionalProperties, "groups")
		delete(additionalProperties, "tenantId")
		delete(additionalProperties, "email")
		delete(additionalProperties, "status")
		delete(additionalProperties, "sentAt")
		delete(additionalProperties, "expiredAt")
		delete(additionalProperties, "acceptedAt")
		delete(additionalProperties, "superAdmin")
		delete(additionalProperties, "link")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableIAMInvitationControllerApiInvitationDetail struct {
	value *IAMInvitationControllerApiInvitationDetail
	isSet bool
}

func (v NullableIAMInvitationControllerApiInvitationDetail) Get() *IAMInvitationControllerApiInvitationDetail {
	return v.value
}

func (v *NullableIAMInvitationControllerApiInvitationDetail) Set(val *IAMInvitationControllerApiInvitationDetail) {
	v.value = val
	v.isSet = true
}

func (v NullableIAMInvitationControllerApiInvitationDetail) IsSet() bool {
	return v.isSet
}

func (v *NullableIAMInvitationControllerApiInvitationDetail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIAMInvitationControllerApiInvitationDetail(val *IAMInvitationControllerApiInvitationDetail) *NullableIAMInvitationControllerApiInvitationDetail {
	return &NullableIAMInvitationControllerApiInvitationDetail{value: val, isSet: true}
}

func (v NullableIAMInvitationControllerApiInvitationDetail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIAMInvitationControllerApiInvitationDetail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
