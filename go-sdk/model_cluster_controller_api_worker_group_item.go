/*
Kestra EE

All API operations allow an optional tenant identifier in the HTTP path, if you don't use multi-tenancy you must omit the tenant identifier.<br/> This means that, for example, when trying to access the Flows API, instead of using <code>/api/v1/{tenant}/flows</code> you must use <code>/api/v1/flows</code>.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kestra_api_client

import (
	"encoding/json"
)

// checks if the ClusterControllerApiWorkerGroupItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClusterControllerApiWorkerGroupItem{}

// ClusterControllerApiWorkerGroupItem ApiWorkerGroup.
type ClusterControllerApiWorkerGroupItem struct {
	// The ID of worker group.
	Id *string `json:"id,omitempty"`
	// The key of the worker group.
	Key *string `json:"key,omitempty"`
	// The description of the worker group.
	Description *string `json:"description,omitempty"`
	// The number of active workers for the group.
	ActiveWorkers *int32 `json:"activeWorkers,omitempty"`
}

// NewClusterControllerApiWorkerGroupItem instantiates a new ClusterControllerApiWorkerGroupItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterControllerApiWorkerGroupItem() *ClusterControllerApiWorkerGroupItem {
	this := ClusterControllerApiWorkerGroupItem{}
	return &this
}

// NewClusterControllerApiWorkerGroupItemWithDefaults instantiates a new ClusterControllerApiWorkerGroupItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterControllerApiWorkerGroupItemWithDefaults() *ClusterControllerApiWorkerGroupItem {
	this := ClusterControllerApiWorkerGroupItem{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ClusterControllerApiWorkerGroupItem) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterControllerApiWorkerGroupItem) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ClusterControllerApiWorkerGroupItem) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ClusterControllerApiWorkerGroupItem) SetId(v string) {
	o.Id = &v
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *ClusterControllerApiWorkerGroupItem) GetKey() string {
	if o == nil || IsNil(o.Key) {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterControllerApiWorkerGroupItem) GetKeyOk() (*string, bool) {
	if o == nil || IsNil(o.Key) {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *ClusterControllerApiWorkerGroupItem) HasKey() bool {
	if o != nil && !IsNil(o.Key) {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *ClusterControllerApiWorkerGroupItem) SetKey(v string) {
	o.Key = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ClusterControllerApiWorkerGroupItem) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterControllerApiWorkerGroupItem) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ClusterControllerApiWorkerGroupItem) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ClusterControllerApiWorkerGroupItem) SetDescription(v string) {
	o.Description = &v
}

// GetActiveWorkers returns the ActiveWorkers field value if set, zero value otherwise.
func (o *ClusterControllerApiWorkerGroupItem) GetActiveWorkers() int32 {
	if o == nil || IsNil(o.ActiveWorkers) {
		var ret int32
		return ret
	}
	return *o.ActiveWorkers
}

// GetActiveWorkersOk returns a tuple with the ActiveWorkers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterControllerApiWorkerGroupItem) GetActiveWorkersOk() (*int32, bool) {
	if o == nil || IsNil(o.ActiveWorkers) {
		return nil, false
	}
	return o.ActiveWorkers, true
}

// HasActiveWorkers returns a boolean if a field has been set.
func (o *ClusterControllerApiWorkerGroupItem) HasActiveWorkers() bool {
	if o != nil && !IsNil(o.ActiveWorkers) {
		return true
	}

	return false
}

// SetActiveWorkers gets a reference to the given int32 and assigns it to the ActiveWorkers field.
func (o *ClusterControllerApiWorkerGroupItem) SetActiveWorkers(v int32) {
	o.ActiveWorkers = &v
}

func (o ClusterControllerApiWorkerGroupItem) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClusterControllerApiWorkerGroupItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Key) {
		toSerialize["key"] = o.Key
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.ActiveWorkers) {
		toSerialize["activeWorkers"] = o.ActiveWorkers
	}
	return toSerialize, nil
}

type NullableClusterControllerApiWorkerGroupItem struct {
	value *ClusterControllerApiWorkerGroupItem
	isSet bool
}

func (v NullableClusterControllerApiWorkerGroupItem) Get() *ClusterControllerApiWorkerGroupItem {
	return v.value
}

func (v *NullableClusterControllerApiWorkerGroupItem) Set(val *ClusterControllerApiWorkerGroupItem) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterControllerApiWorkerGroupItem) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterControllerApiWorkerGroupItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterControllerApiWorkerGroupItem(val *ClusterControllerApiWorkerGroupItem) *NullableClusterControllerApiWorkerGroupItem {
	return &NullableClusterControllerApiWorkerGroupItem{value: val, isSet: true}
}

func (v NullableClusterControllerApiWorkerGroupItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterControllerApiWorkerGroupItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
