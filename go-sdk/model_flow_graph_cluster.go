/*
Kestra EE

All API operations, except for Superadmin-only endpoints, require a tenant identifier in the HTTP path.<br/> Endpoints designated as Superadmin-only are not tenant-scoped.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kestra_api_client

import (
	"encoding/json"
	"fmt"
)

// checks if the FlowGraphCluster type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FlowGraphCluster{}

// FlowGraphCluster struct for FlowGraphCluster
type FlowGraphCluster struct {
	Cluster              AbstractGraph `json:"cluster"`
	Nodes                []string      `json:"nodes"`
	Parents              []string      `json:"parents"`
	Start                string        `json:"start"`
	End                  string        `json:"end"`
	AdditionalProperties map[string]interface{}
}

type _FlowGraphCluster FlowGraphCluster

// NewFlowGraphCluster instantiates a new FlowGraphCluster object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFlowGraphCluster(cluster AbstractGraph, nodes []string, parents []string, start string, end string) *FlowGraphCluster {
	this := FlowGraphCluster{}
	this.Cluster = cluster
	this.Nodes = nodes
	this.Parents = parents
	this.Start = start
	this.End = end
	return &this
}

// NewFlowGraphClusterWithDefaults instantiates a new FlowGraphCluster object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFlowGraphClusterWithDefaults() *FlowGraphCluster {
	this := FlowGraphCluster{}
	return &this
}

// GetCluster returns the Cluster field value
func (o *FlowGraphCluster) GetCluster() AbstractGraph {
	if o == nil {
		var ret AbstractGraph
		return ret
	}

	return o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value
// and a boolean to check if the value has been set.
func (o *FlowGraphCluster) GetClusterOk() (*AbstractGraph, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Cluster, true
}

// SetCluster sets field value
func (o *FlowGraphCluster) SetCluster(v AbstractGraph) {
	o.Cluster = v
}

// GetNodes returns the Nodes field value
func (o *FlowGraphCluster) GetNodes() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Nodes
}

// GetNodesOk returns a tuple with the Nodes field value
// and a boolean to check if the value has been set.
func (o *FlowGraphCluster) GetNodesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Nodes, true
}

// SetNodes sets field value
func (o *FlowGraphCluster) SetNodes(v []string) {
	o.Nodes = v
}

// GetParents returns the Parents field value
func (o *FlowGraphCluster) GetParents() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Parents
}

// GetParentsOk returns a tuple with the Parents field value
// and a boolean to check if the value has been set.
func (o *FlowGraphCluster) GetParentsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Parents, true
}

// SetParents sets field value
func (o *FlowGraphCluster) SetParents(v []string) {
	o.Parents = v
}

// GetStart returns the Start field value
func (o *FlowGraphCluster) GetStart() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Start
}

// GetStartOk returns a tuple with the Start field value
// and a boolean to check if the value has been set.
func (o *FlowGraphCluster) GetStartOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Start, true
}

// SetStart sets field value
func (o *FlowGraphCluster) SetStart(v string) {
	o.Start = v
}

// GetEnd returns the End field value
func (o *FlowGraphCluster) GetEnd() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.End
}

// GetEndOk returns a tuple with the End field value
// and a boolean to check if the value has been set.
func (o *FlowGraphCluster) GetEndOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.End, true
}

// SetEnd sets field value
func (o *FlowGraphCluster) SetEnd(v string) {
	o.End = v
}

func (o FlowGraphCluster) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FlowGraphCluster) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["cluster"] = o.Cluster
	toSerialize["nodes"] = o.Nodes
	toSerialize["parents"] = o.Parents
	toSerialize["start"] = o.Start
	toSerialize["end"] = o.End

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *FlowGraphCluster) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"cluster",
		"nodes",
		"parents",
		"start",
		"end",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varFlowGraphCluster := _FlowGraphCluster{}

	err = json.Unmarshal(data, &varFlowGraphCluster)

	if err != nil {
		return err
	}

	*o = FlowGraphCluster(varFlowGraphCluster)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "cluster")
		delete(additionalProperties, "nodes")
		delete(additionalProperties, "parents")
		delete(additionalProperties, "start")
		delete(additionalProperties, "end")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableFlowGraphCluster struct {
	value *FlowGraphCluster
	isSet bool
}

func (v NullableFlowGraphCluster) Get() *FlowGraphCluster {
	return v.value
}

func (v *NullableFlowGraphCluster) Set(val *FlowGraphCluster) {
	v.value = val
	v.isSet = true
}

func (v NullableFlowGraphCluster) IsSet() bool {
	return v.isSet
}

func (v *NullableFlowGraphCluster) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFlowGraphCluster(val *FlowGraphCluster) *NullableFlowGraphCluster {
	return &NullableFlowGraphCluster{value: val, isSet: true}
}

func (v NullableFlowGraphCluster) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFlowGraphCluster) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
