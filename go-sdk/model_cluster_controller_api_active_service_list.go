/*
Kestra EE

All API operations allow an optional tenant identifier in the HTTP path, if you don't use multi-tenancy you must omit the tenant identifier.<br/> This means that, for example, when trying to access the Flows API, instead of using <code>/api/v1/{tenant}/flows</code> you must use <code>/api/v1/flows</code>.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kestra_api_client

import (
	"encoding/json"
)

// checks if the ClusterControllerApiActiveServiceList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClusterControllerApiActiveServiceList{}

// ClusterControllerApiActiveServiceList struct for ClusterControllerApiActiveServiceList
type ClusterControllerApiActiveServiceList struct {
	Total    *int32                              `json:"total,omitempty"`
	Services []ClusterControllerApiActiveService `json:"services,omitempty"`
}

// NewClusterControllerApiActiveServiceList instantiates a new ClusterControllerApiActiveServiceList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterControllerApiActiveServiceList() *ClusterControllerApiActiveServiceList {
	this := ClusterControllerApiActiveServiceList{}
	return &this
}

// NewClusterControllerApiActiveServiceListWithDefaults instantiates a new ClusterControllerApiActiveServiceList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterControllerApiActiveServiceListWithDefaults() *ClusterControllerApiActiveServiceList {
	this := ClusterControllerApiActiveServiceList{}
	return &this
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *ClusterControllerApiActiveServiceList) GetTotal() int32 {
	if o == nil || IsNil(o.Total) {
		var ret int32
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterControllerApiActiveServiceList) GetTotalOk() (*int32, bool) {
	if o == nil || IsNil(o.Total) {
		return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *ClusterControllerApiActiveServiceList) HasTotal() bool {
	if o != nil && !IsNil(o.Total) {
		return true
	}

	return false
}

// SetTotal gets a reference to the given int32 and assigns it to the Total field.
func (o *ClusterControllerApiActiveServiceList) SetTotal(v int32) {
	o.Total = &v
}

// GetServices returns the Services field value if set, zero value otherwise.
func (o *ClusterControllerApiActiveServiceList) GetServices() []ClusterControllerApiActiveService {
	if o == nil || IsNil(o.Services) {
		var ret []ClusterControllerApiActiveService
		return ret
	}
	return o.Services
}

// GetServicesOk returns a tuple with the Services field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterControllerApiActiveServiceList) GetServicesOk() ([]ClusterControllerApiActiveService, bool) {
	if o == nil || IsNil(o.Services) {
		return nil, false
	}
	return o.Services, true
}

// HasServices returns a boolean if a field has been set.
func (o *ClusterControllerApiActiveServiceList) HasServices() bool {
	if o != nil && !IsNil(o.Services) {
		return true
	}

	return false
}

// SetServices gets a reference to the given []ClusterControllerApiActiveService and assigns it to the Services field.
func (o *ClusterControllerApiActiveServiceList) SetServices(v []ClusterControllerApiActiveService) {
	o.Services = v
}

func (o ClusterControllerApiActiveServiceList) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClusterControllerApiActiveServiceList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Total) {
		toSerialize["total"] = o.Total
	}
	if !IsNil(o.Services) {
		toSerialize["services"] = o.Services
	}
	return toSerialize, nil
}

type NullableClusterControllerApiActiveServiceList struct {
	value *ClusterControllerApiActiveServiceList
	isSet bool
}

func (v NullableClusterControllerApiActiveServiceList) Get() *ClusterControllerApiActiveServiceList {
	return v.value
}

func (v *NullableClusterControllerApiActiveServiceList) Set(val *ClusterControllerApiActiveServiceList) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterControllerApiActiveServiceList) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterControllerApiActiveServiceList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterControllerApiActiveServiceList(val *ClusterControllerApiActiveServiceList) *NullableClusterControllerApiActiveServiceList {
	return &NullableClusterControllerApiActiveServiceList{value: val, isSet: true}
}

func (v NullableClusterControllerApiActiveServiceList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterControllerApiActiveServiceList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
