/*
Kestra EE

All API operations, except for Superadmin-only endpoints, require a tenant identifier in the HTTP path.<br/> Endpoints designated as Superadmin-only are not tenant-scoped.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kestra_api_client

import (
	"encoding/json"
	"fmt"
)

// checks if the ClusterControllerApiActiveServiceList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClusterControllerApiActiveServiceList{}

// ClusterControllerApiActiveServiceList struct for ClusterControllerApiActiveServiceList
type ClusterControllerApiActiveServiceList struct {
	Total                int32                               `json:"total"`
	Services             []ClusterControllerApiActiveService `json:"services"`
	AdditionalProperties map[string]interface{}
}

type _ClusterControllerApiActiveServiceList ClusterControllerApiActiveServiceList

// NewClusterControllerApiActiveServiceList instantiates a new ClusterControllerApiActiveServiceList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterControllerApiActiveServiceList(total int32, services []ClusterControllerApiActiveService) *ClusterControllerApiActiveServiceList {
	this := ClusterControllerApiActiveServiceList{}
	this.Total = total
	this.Services = services
	return &this
}

// NewClusterControllerApiActiveServiceListWithDefaults instantiates a new ClusterControllerApiActiveServiceList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterControllerApiActiveServiceListWithDefaults() *ClusterControllerApiActiveServiceList {
	this := ClusterControllerApiActiveServiceList{}
	return &this
}

// GetTotal returns the Total field value
func (o *ClusterControllerApiActiveServiceList) GetTotal() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Total
}

// GetTotalOk returns a tuple with the Total field value
// and a boolean to check if the value has been set.
func (o *ClusterControllerApiActiveServiceList) GetTotalOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Total, true
}

// SetTotal sets field value
func (o *ClusterControllerApiActiveServiceList) SetTotal(v int32) {
	o.Total = v
}

// GetServices returns the Services field value
func (o *ClusterControllerApiActiveServiceList) GetServices() []ClusterControllerApiActiveService {
	if o == nil {
		var ret []ClusterControllerApiActiveService
		return ret
	}

	return o.Services
}

// GetServicesOk returns a tuple with the Services field value
// and a boolean to check if the value has been set.
func (o *ClusterControllerApiActiveServiceList) GetServicesOk() ([]ClusterControllerApiActiveService, bool) {
	if o == nil {
		return nil, false
	}
	return o.Services, true
}

// SetServices sets field value
func (o *ClusterControllerApiActiveServiceList) SetServices(v []ClusterControllerApiActiveService) {
	o.Services = v
}

func (o ClusterControllerApiActiveServiceList) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClusterControllerApiActiveServiceList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["total"] = o.Total
	toSerialize["services"] = o.Services

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ClusterControllerApiActiveServiceList) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"total",
		"services",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varClusterControllerApiActiveServiceList := _ClusterControllerApiActiveServiceList{}

	err = json.Unmarshal(data, &varClusterControllerApiActiveServiceList)

	if err != nil {
		return err
	}

	*o = ClusterControllerApiActiveServiceList(varClusterControllerApiActiveServiceList)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "total")
		delete(additionalProperties, "services")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableClusterControllerApiActiveServiceList struct {
	value *ClusterControllerApiActiveServiceList
	isSet bool
}

func (v NullableClusterControllerApiActiveServiceList) Get() *ClusterControllerApiActiveServiceList {
	return v.value
}

func (v *NullableClusterControllerApiActiveServiceList) Set(val *ClusterControllerApiActiveServiceList) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterControllerApiActiveServiceList) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterControllerApiActiveServiceList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterControllerApiActiveServiceList(val *ClusterControllerApiActiveServiceList) *NullableClusterControllerApiActiveServiceList {
	return &NullableClusterControllerApiActiveServiceList{value: val, isSet: true}
}

func (v NullableClusterControllerApiActiveServiceList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterControllerApiActiveServiceList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
