/*
Kestra EE

All API operations, except for Superadmin-only endpoints, require a tenant identifier in the HTTP path.<br/> Endpoints designated as Superadmin-only are not tenant-scoped.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kestra_api_client

import (
	"encoding/json"
)

// checks if the ServiceUsageDailyStatistics type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServiceUsageDailyStatistics{}

// ServiceUsageDailyStatistics struct for ServiceUsageDailyStatistics
type ServiceUsageDailyStatistics struct {
	Date                 *string `json:"date,omitempty"`
	Min                  *int64  `json:"min,omitempty"`
	Max                  *int64  `json:"max,omitempty"`
	Avg                  *int64  `json:"avg,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ServiceUsageDailyStatistics ServiceUsageDailyStatistics

// NewServiceUsageDailyStatistics instantiates a new ServiceUsageDailyStatistics object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceUsageDailyStatistics() *ServiceUsageDailyStatistics {
	this := ServiceUsageDailyStatistics{}
	return &this
}

// NewServiceUsageDailyStatisticsWithDefaults instantiates a new ServiceUsageDailyStatistics object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceUsageDailyStatisticsWithDefaults() *ServiceUsageDailyStatistics {
	this := ServiceUsageDailyStatistics{}
	return &this
}

// GetDate returns the Date field value if set, zero value otherwise.
func (o *ServiceUsageDailyStatistics) GetDate() string {
	if o == nil || IsNil(o.Date) {
		var ret string
		return ret
	}
	return *o.Date
}

// GetDateOk returns a tuple with the Date field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceUsageDailyStatistics) GetDateOk() (*string, bool) {
	if o == nil || IsNil(o.Date) {
		return nil, false
	}
	return o.Date, true
}

// HasDate returns a boolean if a field has been set.
func (o *ServiceUsageDailyStatistics) HasDate() bool {
	if o != nil && !IsNil(o.Date) {
		return true
	}

	return false
}

// SetDate gets a reference to the given string and assigns it to the Date field.
func (o *ServiceUsageDailyStatistics) SetDate(v string) {
	o.Date = &v
}

// GetMin returns the Min field value if set, zero value otherwise.
func (o *ServiceUsageDailyStatistics) GetMin() int64 {
	if o == nil || IsNil(o.Min) {
		var ret int64
		return ret
	}
	return *o.Min
}

// GetMinOk returns a tuple with the Min field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceUsageDailyStatistics) GetMinOk() (*int64, bool) {
	if o == nil || IsNil(o.Min) {
		return nil, false
	}
	return o.Min, true
}

// HasMin returns a boolean if a field has been set.
func (o *ServiceUsageDailyStatistics) HasMin() bool {
	if o != nil && !IsNil(o.Min) {
		return true
	}

	return false
}

// SetMin gets a reference to the given int64 and assigns it to the Min field.
func (o *ServiceUsageDailyStatistics) SetMin(v int64) {
	o.Min = &v
}

// GetMax returns the Max field value if set, zero value otherwise.
func (o *ServiceUsageDailyStatistics) GetMax() int64 {
	if o == nil || IsNil(o.Max) {
		var ret int64
		return ret
	}
	return *o.Max
}

// GetMaxOk returns a tuple with the Max field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceUsageDailyStatistics) GetMaxOk() (*int64, bool) {
	if o == nil || IsNil(o.Max) {
		return nil, false
	}
	return o.Max, true
}

// HasMax returns a boolean if a field has been set.
func (o *ServiceUsageDailyStatistics) HasMax() bool {
	if o != nil && !IsNil(o.Max) {
		return true
	}

	return false
}

// SetMax gets a reference to the given int64 and assigns it to the Max field.
func (o *ServiceUsageDailyStatistics) SetMax(v int64) {
	o.Max = &v
}

// GetAvg returns the Avg field value if set, zero value otherwise.
func (o *ServiceUsageDailyStatistics) GetAvg() int64 {
	if o == nil || IsNil(o.Avg) {
		var ret int64
		return ret
	}
	return *o.Avg
}

// GetAvgOk returns a tuple with the Avg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceUsageDailyStatistics) GetAvgOk() (*int64, bool) {
	if o == nil || IsNil(o.Avg) {
		return nil, false
	}
	return o.Avg, true
}

// HasAvg returns a boolean if a field has been set.
func (o *ServiceUsageDailyStatistics) HasAvg() bool {
	if o != nil && !IsNil(o.Avg) {
		return true
	}

	return false
}

// SetAvg gets a reference to the given int64 and assigns it to the Avg field.
func (o *ServiceUsageDailyStatistics) SetAvg(v int64) {
	o.Avg = &v
}

func (o ServiceUsageDailyStatistics) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServiceUsageDailyStatistics) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Date) {
		toSerialize["date"] = o.Date
	}
	if !IsNil(o.Min) {
		toSerialize["min"] = o.Min
	}
	if !IsNil(o.Max) {
		toSerialize["max"] = o.Max
	}
	if !IsNil(o.Avg) {
		toSerialize["avg"] = o.Avg
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ServiceUsageDailyStatistics) UnmarshalJSON(data []byte) (err error) {
	varServiceUsageDailyStatistics := _ServiceUsageDailyStatistics{}

	err = json.Unmarshal(data, &varServiceUsageDailyStatistics)

	if err != nil {
		return err
	}

	*o = ServiceUsageDailyStatistics(varServiceUsageDailyStatistics)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "date")
		delete(additionalProperties, "min")
		delete(additionalProperties, "max")
		delete(additionalProperties, "avg")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableServiceUsageDailyStatistics struct {
	value *ServiceUsageDailyStatistics
	isSet bool
}

func (v NullableServiceUsageDailyStatistics) Get() *ServiceUsageDailyStatistics {
	return v.value
}

func (v *NullableServiceUsageDailyStatistics) Set(val *ServiceUsageDailyStatistics) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceUsageDailyStatistics) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceUsageDailyStatistics) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceUsageDailyStatistics(val *ServiceUsageDailyStatistics) *NullableServiceUsageDailyStatistics {
	return &NullableServiceUsageDailyStatistics{value: val, isSet: true}
}

func (v NullableServiceUsageDailyStatistics) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceUsageDailyStatistics) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
