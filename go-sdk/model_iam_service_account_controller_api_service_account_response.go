/*
Kestra EE

All API operations, except for Superadmin-only endpoints, require a tenant identifier in the HTTP path.<br/> Endpoints designated as Superadmin-only are not tenant-scoped.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kestra_api_client

import (
	"encoding/json"
	"fmt"
)

// checks if the IAMServiceAccountControllerApiServiceAccountResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IAMServiceAccountControllerApiServiceAccountResponse{}

// IAMServiceAccountControllerApiServiceAccountResponse A User Service Account.
type IAMServiceAccountControllerApiServiceAccountResponse struct {
	// the identifier of this service account.
	Id *string `json:"id,omitempty"`
	// the name of this service account.
	Name string `json:"name" validate:"regexp=^(?=.{1,63}$)[a-z0-9]+(?:-[a-z0-9]+)*$"`
	// the description of this service account.
	Description          *string                               `json:"description,omitempty"`
	Groups               []IAMServiceAccountControllerApiGroup `json:"groups,omitempty"`
	SuperAdmin           *bool                                 `json:"superAdmin,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _IAMServiceAccountControllerApiServiceAccountResponse IAMServiceAccountControllerApiServiceAccountResponse

// NewIAMServiceAccountControllerApiServiceAccountResponse instantiates a new IAMServiceAccountControllerApiServiceAccountResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIAMServiceAccountControllerApiServiceAccountResponse(name string) *IAMServiceAccountControllerApiServiceAccountResponse {
	this := IAMServiceAccountControllerApiServiceAccountResponse{}
	this.Name = name
	return &this
}

// NewIAMServiceAccountControllerApiServiceAccountResponseWithDefaults instantiates a new IAMServiceAccountControllerApiServiceAccountResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIAMServiceAccountControllerApiServiceAccountResponseWithDefaults() *IAMServiceAccountControllerApiServiceAccountResponse {
	this := IAMServiceAccountControllerApiServiceAccountResponse{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *IAMServiceAccountControllerApiServiceAccountResponse) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IAMServiceAccountControllerApiServiceAccountResponse) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *IAMServiceAccountControllerApiServiceAccountResponse) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *IAMServiceAccountControllerApiServiceAccountResponse) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value
func (o *IAMServiceAccountControllerApiServiceAccountResponse) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *IAMServiceAccountControllerApiServiceAccountResponse) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *IAMServiceAccountControllerApiServiceAccountResponse) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *IAMServiceAccountControllerApiServiceAccountResponse) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IAMServiceAccountControllerApiServiceAccountResponse) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *IAMServiceAccountControllerApiServiceAccountResponse) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *IAMServiceAccountControllerApiServiceAccountResponse) SetDescription(v string) {
	o.Description = &v
}

// GetGroups returns the Groups field value if set, zero value otherwise.
func (o *IAMServiceAccountControllerApiServiceAccountResponse) GetGroups() []IAMServiceAccountControllerApiGroup {
	if o == nil || IsNil(o.Groups) {
		var ret []IAMServiceAccountControllerApiGroup
		return ret
	}
	return o.Groups
}

// GetGroupsOk returns a tuple with the Groups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IAMServiceAccountControllerApiServiceAccountResponse) GetGroupsOk() ([]IAMServiceAccountControllerApiGroup, bool) {
	if o == nil || IsNil(o.Groups) {
		return nil, false
	}
	return o.Groups, true
}

// HasGroups returns a boolean if a field has been set.
func (o *IAMServiceAccountControllerApiServiceAccountResponse) HasGroups() bool {
	if o != nil && !IsNil(o.Groups) {
		return true
	}

	return false
}

// SetGroups gets a reference to the given []IAMServiceAccountControllerApiGroup and assigns it to the Groups field.
func (o *IAMServiceAccountControllerApiServiceAccountResponse) SetGroups(v []IAMServiceAccountControllerApiGroup) {
	o.Groups = v
}

// GetSuperAdmin returns the SuperAdmin field value if set, zero value otherwise.
func (o *IAMServiceAccountControllerApiServiceAccountResponse) GetSuperAdmin() bool {
	if o == nil || IsNil(o.SuperAdmin) {
		var ret bool
		return ret
	}
	return *o.SuperAdmin
}

// GetSuperAdminOk returns a tuple with the SuperAdmin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IAMServiceAccountControllerApiServiceAccountResponse) GetSuperAdminOk() (*bool, bool) {
	if o == nil || IsNil(o.SuperAdmin) {
		return nil, false
	}
	return o.SuperAdmin, true
}

// HasSuperAdmin returns a boolean if a field has been set.
func (o *IAMServiceAccountControllerApiServiceAccountResponse) HasSuperAdmin() bool {
	if o != nil && !IsNil(o.SuperAdmin) {
		return true
	}

	return false
}

// SetSuperAdmin gets a reference to the given bool and assigns it to the SuperAdmin field.
func (o *IAMServiceAccountControllerApiServiceAccountResponse) SetSuperAdmin(v bool) {
	o.SuperAdmin = &v
}

func (o IAMServiceAccountControllerApiServiceAccountResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IAMServiceAccountControllerApiServiceAccountResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	toSerialize["name"] = o.Name
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Groups) {
		toSerialize["groups"] = o.Groups
	}
	if !IsNil(o.SuperAdmin) {
		toSerialize["superAdmin"] = o.SuperAdmin
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *IAMServiceAccountControllerApiServiceAccountResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varIAMServiceAccountControllerApiServiceAccountResponse := _IAMServiceAccountControllerApiServiceAccountResponse{}

	err = json.Unmarshal(data, &varIAMServiceAccountControllerApiServiceAccountResponse)

	if err != nil {
		return err
	}

	*o = IAMServiceAccountControllerApiServiceAccountResponse(varIAMServiceAccountControllerApiServiceAccountResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "name")
		delete(additionalProperties, "description")
		delete(additionalProperties, "groups")
		delete(additionalProperties, "superAdmin")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableIAMServiceAccountControllerApiServiceAccountResponse struct {
	value *IAMServiceAccountControllerApiServiceAccountResponse
	isSet bool
}

func (v NullableIAMServiceAccountControllerApiServiceAccountResponse) Get() *IAMServiceAccountControllerApiServiceAccountResponse {
	return v.value
}

func (v *NullableIAMServiceAccountControllerApiServiceAccountResponse) Set(val *IAMServiceAccountControllerApiServiceAccountResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableIAMServiceAccountControllerApiServiceAccountResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableIAMServiceAccountControllerApiServiceAccountResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIAMServiceAccountControllerApiServiceAccountResponse(val *IAMServiceAccountControllerApiServiceAccountResponse) *NullableIAMServiceAccountControllerApiServiceAccountResponse {
	return &NullableIAMServiceAccountControllerApiServiceAccountResponse{value: val, isSet: true}
}

func (v NullableIAMServiceAccountControllerApiServiceAccountResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIAMServiceAccountControllerApiServiceAccountResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
