/*
Kestra EE

All API operations, except for Superadmin-only endpoints, require a tenant identifier in the HTTP path.<br/> Endpoints designated as Superadmin-only are not tenant-scoped.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kestra_api_client

import (
	"encoding/json"
	"fmt"
)

// checks if the ExecutionControllerWebhookResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExecutionControllerWebhookResponse{}

// ExecutionControllerWebhookResponse struct for ExecutionControllerWebhookResponse
type ExecutionControllerWebhookResponse struct {
	TenantId             string                            `json:"tenantId"`
	Id                   string                            `json:"id"`
	Namespace            string                            `json:"namespace"`
	FlowId               string                            `json:"flowId"`
	FlowRevision         int32                             `json:"flowRevision"`
	Trigger              ExecutionTrigger                  `json:"trigger"`
	Outputs              map[string]map[string]interface{} `json:"outputs"`
	Labels               []Label                           `json:"labels"`
	State                State                             `json:"state"`
	Url                  string                            `json:"url"`
	AdditionalProperties map[string]interface{}
}

type _ExecutionControllerWebhookResponse ExecutionControllerWebhookResponse

// NewExecutionControllerWebhookResponse instantiates a new ExecutionControllerWebhookResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExecutionControllerWebhookResponse(tenantId string, id string, namespace string, flowId string, flowRevision int32, trigger ExecutionTrigger, outputs map[string]map[string]interface{}, labels []Label, state State, url string) *ExecutionControllerWebhookResponse {
	this := ExecutionControllerWebhookResponse{}
	this.TenantId = tenantId
	this.Id = id
	this.Namespace = namespace
	this.FlowId = flowId
	this.FlowRevision = flowRevision
	this.Trigger = trigger
	this.Outputs = outputs
	this.Labels = labels
	this.State = state
	this.Url = url
	return &this
}

// NewExecutionControllerWebhookResponseWithDefaults instantiates a new ExecutionControllerWebhookResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExecutionControllerWebhookResponseWithDefaults() *ExecutionControllerWebhookResponse {
	this := ExecutionControllerWebhookResponse{}
	return &this
}

// GetTenantId returns the TenantId field value
func (o *ExecutionControllerWebhookResponse) GetTenantId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value
// and a boolean to check if the value has been set.
func (o *ExecutionControllerWebhookResponse) GetTenantIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TenantId, true
}

// SetTenantId sets field value
func (o *ExecutionControllerWebhookResponse) SetTenantId(v string) {
	o.TenantId = v
}

// GetId returns the Id field value
func (o *ExecutionControllerWebhookResponse) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ExecutionControllerWebhookResponse) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ExecutionControllerWebhookResponse) SetId(v string) {
	o.Id = v
}

// GetNamespace returns the Namespace field value
func (o *ExecutionControllerWebhookResponse) GetNamespace() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Namespace
}

// GetNamespaceOk returns a tuple with the Namespace field value
// and a boolean to check if the value has been set.
func (o *ExecutionControllerWebhookResponse) GetNamespaceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Namespace, true
}

// SetNamespace sets field value
func (o *ExecutionControllerWebhookResponse) SetNamespace(v string) {
	o.Namespace = v
}

// GetFlowId returns the FlowId field value
func (o *ExecutionControllerWebhookResponse) GetFlowId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FlowId
}

// GetFlowIdOk returns a tuple with the FlowId field value
// and a boolean to check if the value has been set.
func (o *ExecutionControllerWebhookResponse) GetFlowIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FlowId, true
}

// SetFlowId sets field value
func (o *ExecutionControllerWebhookResponse) SetFlowId(v string) {
	o.FlowId = v
}

// GetFlowRevision returns the FlowRevision field value
func (o *ExecutionControllerWebhookResponse) GetFlowRevision() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.FlowRevision
}

// GetFlowRevisionOk returns a tuple with the FlowRevision field value
// and a boolean to check if the value has been set.
func (o *ExecutionControllerWebhookResponse) GetFlowRevisionOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FlowRevision, true
}

// SetFlowRevision sets field value
func (o *ExecutionControllerWebhookResponse) SetFlowRevision(v int32) {
	o.FlowRevision = v
}

// GetTrigger returns the Trigger field value
func (o *ExecutionControllerWebhookResponse) GetTrigger() ExecutionTrigger {
	if o == nil {
		var ret ExecutionTrigger
		return ret
	}

	return o.Trigger
}

// GetTriggerOk returns a tuple with the Trigger field value
// and a boolean to check if the value has been set.
func (o *ExecutionControllerWebhookResponse) GetTriggerOk() (*ExecutionTrigger, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Trigger, true
}

// SetTrigger sets field value
func (o *ExecutionControllerWebhookResponse) SetTrigger(v ExecutionTrigger) {
	o.Trigger = v
}

// GetOutputs returns the Outputs field value
func (o *ExecutionControllerWebhookResponse) GetOutputs() map[string]map[string]interface{} {
	if o == nil {
		var ret map[string]map[string]interface{}
		return ret
	}

	return o.Outputs
}

// GetOutputsOk returns a tuple with the Outputs field value
// and a boolean to check if the value has been set.
func (o *ExecutionControllerWebhookResponse) GetOutputsOk() (map[string]map[string]interface{}, bool) {
	if o == nil {
		return map[string]map[string]interface{}{}, false
	}
	return o.Outputs, true
}

// SetOutputs sets field value
func (o *ExecutionControllerWebhookResponse) SetOutputs(v map[string]map[string]interface{}) {
	o.Outputs = v
}

// GetLabels returns the Labels field value
func (o *ExecutionControllerWebhookResponse) GetLabels() []Label {
	if o == nil {
		var ret []Label
		return ret
	}

	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value
// and a boolean to check if the value has been set.
func (o *ExecutionControllerWebhookResponse) GetLabelsOk() ([]Label, bool) {
	if o == nil {
		return nil, false
	}
	return o.Labels, true
}

// SetLabels sets field value
func (o *ExecutionControllerWebhookResponse) SetLabels(v []Label) {
	o.Labels = v
}

// GetState returns the State field value
func (o *ExecutionControllerWebhookResponse) GetState() State {
	if o == nil {
		var ret State
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *ExecutionControllerWebhookResponse) GetStateOk() (*State, bool) {
	if o == nil {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *ExecutionControllerWebhookResponse) SetState(v State) {
	o.State = v
}

// GetUrl returns the Url field value
func (o *ExecutionControllerWebhookResponse) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *ExecutionControllerWebhookResponse) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *ExecutionControllerWebhookResponse) SetUrl(v string) {
	o.Url = v
}

func (o ExecutionControllerWebhookResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExecutionControllerWebhookResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["tenantId"] = o.TenantId
	toSerialize["id"] = o.Id
	toSerialize["namespace"] = o.Namespace
	toSerialize["flowId"] = o.FlowId
	toSerialize["flowRevision"] = o.FlowRevision
	toSerialize["trigger"] = o.Trigger
	toSerialize["outputs"] = o.Outputs
	toSerialize["labels"] = o.Labels
	toSerialize["state"] = o.State
	toSerialize["url"] = o.Url

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ExecutionControllerWebhookResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"tenantId",
		"id",
		"namespace",
		"flowId",
		"flowRevision",
		"trigger",
		"outputs",
		"labels",
		"state",
		"url",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varExecutionControllerWebhookResponse := _ExecutionControllerWebhookResponse{}

	err = json.Unmarshal(data, &varExecutionControllerWebhookResponse)

	if err != nil {
		return err
	}

	*o = ExecutionControllerWebhookResponse(varExecutionControllerWebhookResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "tenantId")
		delete(additionalProperties, "id")
		delete(additionalProperties, "namespace")
		delete(additionalProperties, "flowId")
		delete(additionalProperties, "flowRevision")
		delete(additionalProperties, "trigger")
		delete(additionalProperties, "outputs")
		delete(additionalProperties, "labels")
		delete(additionalProperties, "state")
		delete(additionalProperties, "url")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableExecutionControllerWebhookResponse struct {
	value *ExecutionControllerWebhookResponse
	isSet bool
}

func (v NullableExecutionControllerWebhookResponse) Get() *ExecutionControllerWebhookResponse {
	return v.value
}

func (v *NullableExecutionControllerWebhookResponse) Set(val *ExecutionControllerWebhookResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableExecutionControllerWebhookResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableExecutionControllerWebhookResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExecutionControllerWebhookResponse(val *ExecutionControllerWebhookResponse) *NullableExecutionControllerWebhookResponse {
	return &NullableExecutionControllerWebhookResponse{value: val, isSet: true}
}

func (v NullableExecutionControllerWebhookResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExecutionControllerWebhookResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
