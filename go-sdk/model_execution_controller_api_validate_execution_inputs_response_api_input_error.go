/*
Kestra EE

All API operations, except for Superadmin-only endpoints, require a tenant identifier in the HTTP path.<br/> Endpoints designated as Superadmin-only are not tenant-scoped.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kestra_api_client

import (
	"encoding/json"
)

// checks if the ExecutionControllerApiValidateExecutionInputsResponseApiInputError type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExecutionControllerApiValidateExecutionInputsResponseApiInputError{}

// ExecutionControllerApiValidateExecutionInputsResponseApiInputError struct for ExecutionControllerApiValidateExecutionInputsResponseApiInputError
type ExecutionControllerApiValidateExecutionInputsResponseApiInputError struct {
	Message              *string `json:"message,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ExecutionControllerApiValidateExecutionInputsResponseApiInputError ExecutionControllerApiValidateExecutionInputsResponseApiInputError

// NewExecutionControllerApiValidateExecutionInputsResponseApiInputError instantiates a new ExecutionControllerApiValidateExecutionInputsResponseApiInputError object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExecutionControllerApiValidateExecutionInputsResponseApiInputError() *ExecutionControllerApiValidateExecutionInputsResponseApiInputError {
	this := ExecutionControllerApiValidateExecutionInputsResponseApiInputError{}
	return &this
}

// NewExecutionControllerApiValidateExecutionInputsResponseApiInputErrorWithDefaults instantiates a new ExecutionControllerApiValidateExecutionInputsResponseApiInputError object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExecutionControllerApiValidateExecutionInputsResponseApiInputErrorWithDefaults() *ExecutionControllerApiValidateExecutionInputsResponseApiInputError {
	this := ExecutionControllerApiValidateExecutionInputsResponseApiInputError{}
	return &this
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *ExecutionControllerApiValidateExecutionInputsResponseApiInputError) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExecutionControllerApiValidateExecutionInputsResponseApiInputError) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *ExecutionControllerApiValidateExecutionInputsResponseApiInputError) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *ExecutionControllerApiValidateExecutionInputsResponseApiInputError) SetMessage(v string) {
	o.Message = &v
}

func (o ExecutionControllerApiValidateExecutionInputsResponseApiInputError) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExecutionControllerApiValidateExecutionInputsResponseApiInputError) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ExecutionControllerApiValidateExecutionInputsResponseApiInputError) UnmarshalJSON(data []byte) (err error) {
	varExecutionControllerApiValidateExecutionInputsResponseApiInputError := _ExecutionControllerApiValidateExecutionInputsResponseApiInputError{}

	err = json.Unmarshal(data, &varExecutionControllerApiValidateExecutionInputsResponseApiInputError)

	if err != nil {
		return err
	}

	*o = ExecutionControllerApiValidateExecutionInputsResponseApiInputError(varExecutionControllerApiValidateExecutionInputsResponseApiInputError)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "message")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableExecutionControllerApiValidateExecutionInputsResponseApiInputError struct {
	value *ExecutionControllerApiValidateExecutionInputsResponseApiInputError
	isSet bool
}

func (v NullableExecutionControllerApiValidateExecutionInputsResponseApiInputError) Get() *ExecutionControllerApiValidateExecutionInputsResponseApiInputError {
	return v.value
}

func (v *NullableExecutionControllerApiValidateExecutionInputsResponseApiInputError) Set(val *ExecutionControllerApiValidateExecutionInputsResponseApiInputError) {
	v.value = val
	v.isSet = true
}

func (v NullableExecutionControllerApiValidateExecutionInputsResponseApiInputError) IsSet() bool {
	return v.isSet
}

func (v *NullableExecutionControllerApiValidateExecutionInputsResponseApiInputError) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExecutionControllerApiValidateExecutionInputsResponseApiInputError(val *ExecutionControllerApiValidateExecutionInputsResponseApiInputError) *NullableExecutionControllerApiValidateExecutionInputsResponseApiInputError {
	return &NullableExecutionControllerApiValidateExecutionInputsResponseApiInputError{value: val, isSet: true}
}

func (v NullableExecutionControllerApiValidateExecutionInputsResponseApiInputError) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExecutionControllerApiValidateExecutionInputsResponseApiInputError) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
