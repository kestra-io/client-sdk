# coding: utf-8

"""
    Kestra EE

    All API operations, except for Superadmin-only endpoints, require a tenant identifier in the HTTP path.<br/> Endpoints designated as Superadmin-only are not tenant-scoped.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
from kestrapy import Configuration, KestraClient


class TestTriggersApi(unittest.TestCase):
    """TriggersApi unit test stubs"""

    def setUp(self) -> None:
        configuration = Configuration()
        configuration.host = "http://localhost:9902"
        configuration.username = "root@root.com"
        configuration.password = "Root!1234"

        self.kestra_client = KestraClient(configuration)

    def tearDown(self) -> None:
        pass

    def test_delete_backfill(self) -> None:
        """Test case for delete_backfill

        Delete a backfill
        """
        pass

    def test_delete_backfill_by_ids(self) -> None:
        """Test case for delete_backfill_by_ids

        Delete backfill for given triggers
        """
        pass

    def test_delete_backfill_by_query(self) -> None:
        """Test case for delete_backfill_by_query

        Delete backfill for given triggers
        """
        pass

    def test_disabled_triggers_by_ids(self) -> None:
        """Test case for disabled_triggers_by_ids

        Disable/enable given triggers
        """
        pass

    def test_disabled_triggers_by_query(self) -> None:
        """Test case for disabled_triggers_by_query

        Disable/enable triggers by query parameters
        """
        pass

    def test_pause_backfill(self) -> None:
        """Test case for pause_backfill

        Pause a backfill
        """
        pass

    def test_pause_backfill_by_ids(self) -> None:
        """Test case for pause_backfill_by_ids

        Pause backfill for given triggers
        """
        pass

    def test_pause_backfill_by_query(self) -> None:
        """Test case for pause_backfill_by_query

        Pause backfill for given triggers
        """
        pass

    def test_restart_trigger(self) -> None:
        """Test case for restart_trigger

        Restart a trigger
        """
        pass

    def test_search_triggers(self) -> None:
        """Test case for search_triggers

        Search for triggers
        """
        pass

    def test_search_triggers_for_flow(self) -> None:
        """Test case for search_triggers_for_flow

        Get all triggers for a flow
        """
        pass

    def test_unlock_trigger(self) -> None:
        """Test case for unlock_trigger

        Unlock a trigger
        """
        pass

    def test_unlock_triggers_by_ids(self) -> None:
        """Test case for unlock_triggers_by_ids

        Unlock given triggers
        """
        pass

    def test_unlock_triggers_by_query(self) -> None:
        """Test case for unlock_triggers_by_query

        Unlock triggers by query parameters
        """
        pass

    def test_unpause_backfill(self) -> None:
        """Test case for unpause_backfill

        Unpause a backfill
        """
        pass

    def test_unpause_backfill_by_ids(self) -> None:
        """Test case for unpause_backfill_by_ids

        Unpause backfill for given triggers
        """
        pass

    def test_unpause_backfill_by_query(self) -> None:
        """Test case for unpause_backfill_by_query

        Unpause backfill for given triggers
        """
        pass

    def test_update_trigger(self) -> None:
        """Test case for update_trigger

        Update a trigger
        """
        pass


if __name__ == '__main__':
    unittest.main()
