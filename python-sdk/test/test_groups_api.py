# coding: utf-8

"""
    Kestra EE

    All API operations, except for Superadmin-only endpoints, require a tenant identifier in the HTTP path.<br/> Endpoints designated as Superadmin-only are not tenant-scoped.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from kestrapy.api.groups_api import GroupsApi


class TestGroupsApi(unittest.TestCase):
    """GroupsApi unit test stubs"""

    def setUp(self) -> None:
        self.api = GroupsApi()

    def tearDown(self) -> None:
        pass

    def test_add_user_to_group(self) -> None:
        """Test case for add_user_to_group

        Add a user to a group
        """
        pass

    def test_autocomplete_groups(self) -> None:
        """Test case for autocomplete_groups

        List groups for autocomplete
        """
        pass

    def test_create_group(self) -> None:
        """Test case for create_group

        Create a group
        """
        pass

    def test_delete_group(self) -> None:
        """Test case for delete_group

        Delete a group
        """
        pass

    def test_delete_user_from_group(self) -> None:
        """Test case for delete_user_from_group

        Remove a user from a group
        """
        pass

    def test_get_group(self) -> None:
        """Test case for get_group

        Retrieve a group
        """
        pass

    def test_list_group_ids(self) -> None:
        """Test case for list_group_ids

        List groups by ids
        """
        pass

    def test_search_group_members(self) -> None:
        """Test case for search_group_members

        Search for users in a group
        """
        pass

    def test_search_groups(self) -> None:
        """Test case for search_groups

        Search for groups
        """
        pass

    def test_set_user_membership_for_group(self) -> None:
        """Test case for set_user_membership_for_group

        Update a user's membership type in a group
        """
        pass

    def test_update_group(self) -> None:
        """Test case for update_group

        Update a group
        """
        pass


if __name__ == '__main__':
    unittest.main()
