# coding: utf-8

"""
    Kestra EE

    All API operations, except for Superadmin-only endpoints, require a tenant identifier in the HTTP path.<br/> Endpoints designated as Superadmin-only are not tenant-scoped.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from kestrapy.api.namespaces_api import NamespacesApi


class TestNamespacesApi(unittest.TestCase):
    """NamespacesApi unit test stubs"""

    def setUp(self) -> None:
        self.api = NamespacesApi()

    def tearDown(self) -> None:
        pass

    def test_autocomplete_namespaces(self) -> None:
        """Test case for autocomplete_namespaces

        List namespaces for autocomplete
        """
        pass

    def test_create_namespace(self) -> None:
        """Test case for create_namespace

        Create a namespace
        """
        pass

    def test_delete_namespace(self) -> None:
        """Test case for delete_namespace

        Delete a namespace
        """
        pass

    def test_delete_secret(self) -> None:
        """Test case for delete_secret

        Delete a secret for a namespace
        """
        pass

    def test_get_inherited_secrets(self) -> None:
        """Test case for get_inherited_secrets

        List inherited secrets
        """
        pass

    def test_get_namespace(self) -> None:
        """Test case for get_namespace

        Get a namespace
        """
        pass

    def test_inherited_plugin_defaults(self) -> None:
        """Test case for inherited_plugin_defaults

        List inherited plugin defaults
        """
        pass

    def test_inherited_variables(self) -> None:
        """Test case for inherited_variables

        List inherited variables
        """
        pass

    def test_list_namespace_secrets(self) -> None:
        """Test case for list_namespace_secrets

        Get secrets for a namespace
        """
        pass

    def test_patch_secret(self) -> None:
        """Test case for patch_secret

        Patch a secret metadata for a namespace
        """
        pass

    def test_put_secrets(self) -> None:
        """Test case for put_secrets

        Update secrets for a namespace
        """
        pass

    def test_search_namespaces(self) -> None:
        """Test case for search_namespaces

        Search for namespaces
        """
        pass

    def test_update_namespace(self) -> None:
        """Test case for update_namespace

        Update a namespace
        """
        pass


if __name__ == '__main__':
    unittest.main()
