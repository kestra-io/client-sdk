/*
 * Kestra EE
 * All API operations allow an optional tenant identifier in the HTTP path, if you don't use multi-tenancy you must omit the tenant identifier.<br/> This means that, for example, when trying to access the Flows API, instead of using <code>/api/v1/{tenant}/flows</code> you must use <code>/api/v1/flows</code>.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.kestra.api.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.util.StringJoiner;

/**
 * DailyExecutionStatisticsExecutionCounts
 */
@JsonPropertyOrder({
  DailyExecutionStatisticsExecutionCounts.JSON_PROPERTY_C_R_E_A_T_E_D,
  DailyExecutionStatisticsExecutionCounts.JSON_PROPERTY_R_U_N_N_I_N_G,
  DailyExecutionStatisticsExecutionCounts.JSON_PROPERTY_P_A_U_S_E_D,
  DailyExecutionStatisticsExecutionCounts.JSON_PROPERTY_R_E_S_T_A_R_T_E_D,
  DailyExecutionStatisticsExecutionCounts.JSON_PROPERTY_K_I_L_L_I_N_G,
  DailyExecutionStatisticsExecutionCounts.JSON_PROPERTY_S_U_C_C_E_S_S,
  DailyExecutionStatisticsExecutionCounts.JSON_PROPERTY_W_A_R_N_I_N_G,
  DailyExecutionStatisticsExecutionCounts.JSON_PROPERTY_F_A_I_L_E_D,
  DailyExecutionStatisticsExecutionCounts.JSON_PROPERTY_K_I_L_L_E_D,
  DailyExecutionStatisticsExecutionCounts.JSON_PROPERTY_C_A_N_C_E_L_L_E_D,
  DailyExecutionStatisticsExecutionCounts.JSON_PROPERTY_Q_U_E_U_E_D,
  DailyExecutionStatisticsExecutionCounts.JSON_PROPERTY_R_E_T_R_Y_I_N_G,
  DailyExecutionStatisticsExecutionCounts.JSON_PROPERTY_R_E_T_R_I_E_D,
  DailyExecutionStatisticsExecutionCounts.JSON_PROPERTY_S_K_I_P_P_E_D
})
@JsonTypeName("DailyExecutionStatistics_executionCounts")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-12-31T15:48:45.246126227Z[Etc/UTC]", comments = "Generator version: 7.11.0-SNAPSHOT")
public class DailyExecutionStatisticsExecutionCounts {
  public static final String JSON_PROPERTY_C_R_E_A_T_E_D = "CREATED";
  @javax.annotation.Nullable
  private Long CREATED;

  public static final String JSON_PROPERTY_R_U_N_N_I_N_G = "RUNNING";
  @javax.annotation.Nullable
  private Long RUNNING;

  public static final String JSON_PROPERTY_P_A_U_S_E_D = "PAUSED";
  @javax.annotation.Nullable
  private Long PAUSED;

  public static final String JSON_PROPERTY_R_E_S_T_A_R_T_E_D = "RESTARTED";
  @javax.annotation.Nullable
  private Long RESTARTED;

  public static final String JSON_PROPERTY_K_I_L_L_I_N_G = "KILLING";
  @javax.annotation.Nullable
  private Long KILLING;

  public static final String JSON_PROPERTY_S_U_C_C_E_S_S = "SUCCESS";
  @javax.annotation.Nullable
  private Long SUCCESS;

  public static final String JSON_PROPERTY_W_A_R_N_I_N_G = "WARNING";
  @javax.annotation.Nullable
  private Long WARNING;

  public static final String JSON_PROPERTY_F_A_I_L_E_D = "FAILED";
  @javax.annotation.Nullable
  private Long FAILED;

  public static final String JSON_PROPERTY_K_I_L_L_E_D = "KILLED";
  @javax.annotation.Nullable
  private Long KILLED;

  public static final String JSON_PROPERTY_C_A_N_C_E_L_L_E_D = "CANCELLED";
  @javax.annotation.Nullable
  private Long CANCELLED;

  public static final String JSON_PROPERTY_Q_U_E_U_E_D = "QUEUED";
  @javax.annotation.Nullable
  private Long QUEUED;

  public static final String JSON_PROPERTY_R_E_T_R_Y_I_N_G = "RETRYING";
  @javax.annotation.Nullable
  private Long RETRYING;

  public static final String JSON_PROPERTY_R_E_T_R_I_E_D = "RETRIED";
  @javax.annotation.Nullable
  private Long RETRIED;

  public static final String JSON_PROPERTY_S_K_I_P_P_E_D = "SKIPPED";
  @javax.annotation.Nullable
  private Long SKIPPED;

  public DailyExecutionStatisticsExecutionCounts() {
  }

  public DailyExecutionStatisticsExecutionCounts CREATED(@javax.annotation.Nullable Long CREATED) {
    
    this.CREATED = CREATED;
    return this;
  }

  /**
   * Get CREATED
   * @return CREATED
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_C_R_E_A_T_E_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getCREATED() {
    return CREATED;
  }


  @JsonProperty(JSON_PROPERTY_C_R_E_A_T_E_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCREATED(@javax.annotation.Nullable Long CREATED) {
    this.CREATED = CREATED;
  }

  public DailyExecutionStatisticsExecutionCounts RUNNING(@javax.annotation.Nullable Long RUNNING) {
    
    this.RUNNING = RUNNING;
    return this;
  }

  /**
   * Get RUNNING
   * @return RUNNING
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_R_U_N_N_I_N_G)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getRUNNING() {
    return RUNNING;
  }


  @JsonProperty(JSON_PROPERTY_R_U_N_N_I_N_G)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRUNNING(@javax.annotation.Nullable Long RUNNING) {
    this.RUNNING = RUNNING;
  }

  public DailyExecutionStatisticsExecutionCounts PAUSED(@javax.annotation.Nullable Long PAUSED) {
    
    this.PAUSED = PAUSED;
    return this;
  }

  /**
   * Get PAUSED
   * @return PAUSED
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_P_A_U_S_E_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getPAUSED() {
    return PAUSED;
  }


  @JsonProperty(JSON_PROPERTY_P_A_U_S_E_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPAUSED(@javax.annotation.Nullable Long PAUSED) {
    this.PAUSED = PAUSED;
  }

  public DailyExecutionStatisticsExecutionCounts RESTARTED(@javax.annotation.Nullable Long RESTARTED) {
    
    this.RESTARTED = RESTARTED;
    return this;
  }

  /**
   * Get RESTARTED
   * @return RESTARTED
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_R_E_S_T_A_R_T_E_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getRESTARTED() {
    return RESTARTED;
  }


  @JsonProperty(JSON_PROPERTY_R_E_S_T_A_R_T_E_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRESTARTED(@javax.annotation.Nullable Long RESTARTED) {
    this.RESTARTED = RESTARTED;
  }

  public DailyExecutionStatisticsExecutionCounts KILLING(@javax.annotation.Nullable Long KILLING) {
    
    this.KILLING = KILLING;
    return this;
  }

  /**
   * Get KILLING
   * @return KILLING
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_K_I_L_L_I_N_G)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getKILLING() {
    return KILLING;
  }


  @JsonProperty(JSON_PROPERTY_K_I_L_L_I_N_G)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setKILLING(@javax.annotation.Nullable Long KILLING) {
    this.KILLING = KILLING;
  }

  public DailyExecutionStatisticsExecutionCounts SUCCESS(@javax.annotation.Nullable Long SUCCESS) {
    
    this.SUCCESS = SUCCESS;
    return this;
  }

  /**
   * Get SUCCESS
   * @return SUCCESS
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_S_U_C_C_E_S_S)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getSUCCESS() {
    return SUCCESS;
  }


  @JsonProperty(JSON_PROPERTY_S_U_C_C_E_S_S)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSUCCESS(@javax.annotation.Nullable Long SUCCESS) {
    this.SUCCESS = SUCCESS;
  }

  public DailyExecutionStatisticsExecutionCounts WARNING(@javax.annotation.Nullable Long WARNING) {
    
    this.WARNING = WARNING;
    return this;
  }

  /**
   * Get WARNING
   * @return WARNING
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_W_A_R_N_I_N_G)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getWARNING() {
    return WARNING;
  }


  @JsonProperty(JSON_PROPERTY_W_A_R_N_I_N_G)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWARNING(@javax.annotation.Nullable Long WARNING) {
    this.WARNING = WARNING;
  }

  public DailyExecutionStatisticsExecutionCounts FAILED(@javax.annotation.Nullable Long FAILED) {
    
    this.FAILED = FAILED;
    return this;
  }

  /**
   * Get FAILED
   * @return FAILED
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_F_A_I_L_E_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getFAILED() {
    return FAILED;
  }


  @JsonProperty(JSON_PROPERTY_F_A_I_L_E_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFAILED(@javax.annotation.Nullable Long FAILED) {
    this.FAILED = FAILED;
  }

  public DailyExecutionStatisticsExecutionCounts KILLED(@javax.annotation.Nullable Long KILLED) {
    
    this.KILLED = KILLED;
    return this;
  }

  /**
   * Get KILLED
   * @return KILLED
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_K_I_L_L_E_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getKILLED() {
    return KILLED;
  }


  @JsonProperty(JSON_PROPERTY_K_I_L_L_E_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setKILLED(@javax.annotation.Nullable Long KILLED) {
    this.KILLED = KILLED;
  }

  public DailyExecutionStatisticsExecutionCounts CANCELLED(@javax.annotation.Nullable Long CANCELLED) {
    
    this.CANCELLED = CANCELLED;
    return this;
  }

  /**
   * Get CANCELLED
   * @return CANCELLED
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_C_A_N_C_E_L_L_E_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getCANCELLED() {
    return CANCELLED;
  }


  @JsonProperty(JSON_PROPERTY_C_A_N_C_E_L_L_E_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCANCELLED(@javax.annotation.Nullable Long CANCELLED) {
    this.CANCELLED = CANCELLED;
  }

  public DailyExecutionStatisticsExecutionCounts QUEUED(@javax.annotation.Nullable Long QUEUED) {
    
    this.QUEUED = QUEUED;
    return this;
  }

  /**
   * Get QUEUED
   * @return QUEUED
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_Q_U_E_U_E_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getQUEUED() {
    return QUEUED;
  }


  @JsonProperty(JSON_PROPERTY_Q_U_E_U_E_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setQUEUED(@javax.annotation.Nullable Long QUEUED) {
    this.QUEUED = QUEUED;
  }

  public DailyExecutionStatisticsExecutionCounts RETRYING(@javax.annotation.Nullable Long RETRYING) {
    
    this.RETRYING = RETRYING;
    return this;
  }

  /**
   * Get RETRYING
   * @return RETRYING
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_R_E_T_R_Y_I_N_G)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getRETRYING() {
    return RETRYING;
  }


  @JsonProperty(JSON_PROPERTY_R_E_T_R_Y_I_N_G)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRETRYING(@javax.annotation.Nullable Long RETRYING) {
    this.RETRYING = RETRYING;
  }

  public DailyExecutionStatisticsExecutionCounts RETRIED(@javax.annotation.Nullable Long RETRIED) {
    
    this.RETRIED = RETRIED;
    return this;
  }

  /**
   * Get RETRIED
   * @return RETRIED
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_R_E_T_R_I_E_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getRETRIED() {
    return RETRIED;
  }


  @JsonProperty(JSON_PROPERTY_R_E_T_R_I_E_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRETRIED(@javax.annotation.Nullable Long RETRIED) {
    this.RETRIED = RETRIED;
  }

  public DailyExecutionStatisticsExecutionCounts SKIPPED(@javax.annotation.Nullable Long SKIPPED) {
    
    this.SKIPPED = SKIPPED;
    return this;
  }

  /**
   * Get SKIPPED
   * @return SKIPPED
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_S_K_I_P_P_E_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getSKIPPED() {
    return SKIPPED;
  }


  @JsonProperty(JSON_PROPERTY_S_K_I_P_P_E_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSKIPPED(@javax.annotation.Nullable Long SKIPPED) {
    this.SKIPPED = SKIPPED;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DailyExecutionStatisticsExecutionCounts dailyExecutionStatisticsExecutionCounts = (DailyExecutionStatisticsExecutionCounts) o;
    return Objects.equals(this.CREATED, dailyExecutionStatisticsExecutionCounts.CREATED) &&
        Objects.equals(this.RUNNING, dailyExecutionStatisticsExecutionCounts.RUNNING) &&
        Objects.equals(this.PAUSED, dailyExecutionStatisticsExecutionCounts.PAUSED) &&
        Objects.equals(this.RESTARTED, dailyExecutionStatisticsExecutionCounts.RESTARTED) &&
        Objects.equals(this.KILLING, dailyExecutionStatisticsExecutionCounts.KILLING) &&
        Objects.equals(this.SUCCESS, dailyExecutionStatisticsExecutionCounts.SUCCESS) &&
        Objects.equals(this.WARNING, dailyExecutionStatisticsExecutionCounts.WARNING) &&
        Objects.equals(this.FAILED, dailyExecutionStatisticsExecutionCounts.FAILED) &&
        Objects.equals(this.KILLED, dailyExecutionStatisticsExecutionCounts.KILLED) &&
        Objects.equals(this.CANCELLED, dailyExecutionStatisticsExecutionCounts.CANCELLED) &&
        Objects.equals(this.QUEUED, dailyExecutionStatisticsExecutionCounts.QUEUED) &&
        Objects.equals(this.RETRYING, dailyExecutionStatisticsExecutionCounts.RETRYING) &&
        Objects.equals(this.RETRIED, dailyExecutionStatisticsExecutionCounts.RETRIED) &&
        Objects.equals(this.SKIPPED, dailyExecutionStatisticsExecutionCounts.SKIPPED);
  }

  @Override
  public int hashCode() {
    return Objects.hash(CREATED, RUNNING, PAUSED, RESTARTED, KILLING, SUCCESS, WARNING, FAILED, KILLED, CANCELLED, QUEUED, RETRYING, RETRIED, SKIPPED);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DailyExecutionStatisticsExecutionCounts {\n");
    sb.append("    CREATED: ").append(toIndentedString(CREATED)).append("\n");
    sb.append("    RUNNING: ").append(toIndentedString(RUNNING)).append("\n");
    sb.append("    PAUSED: ").append(toIndentedString(PAUSED)).append("\n");
    sb.append("    RESTARTED: ").append(toIndentedString(RESTARTED)).append("\n");
    sb.append("    KILLING: ").append(toIndentedString(KILLING)).append("\n");
    sb.append("    SUCCESS: ").append(toIndentedString(SUCCESS)).append("\n");
    sb.append("    WARNING: ").append(toIndentedString(WARNING)).append("\n");
    sb.append("    FAILED: ").append(toIndentedString(FAILED)).append("\n");
    sb.append("    KILLED: ").append(toIndentedString(KILLED)).append("\n");
    sb.append("    CANCELLED: ").append(toIndentedString(CANCELLED)).append("\n");
    sb.append("    QUEUED: ").append(toIndentedString(QUEUED)).append("\n");
    sb.append("    RETRYING: ").append(toIndentedString(RETRYING)).append("\n");
    sb.append("    RETRIED: ").append(toIndentedString(RETRIED)).append("\n");
    sb.append("    SKIPPED: ").append(toIndentedString(SKIPPED)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `CREATED` to the URL query string
    if (getCREATED() != null) {
      try {
        joiner.add(String.format("%sCREATED%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getCREATED()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `RUNNING` to the URL query string
    if (getRUNNING() != null) {
      try {
        joiner.add(String.format("%sRUNNING%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getRUNNING()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `PAUSED` to the URL query string
    if (getPAUSED() != null) {
      try {
        joiner.add(String.format("%sPAUSED%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getPAUSED()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `RESTARTED` to the URL query string
    if (getRESTARTED() != null) {
      try {
        joiner.add(String.format("%sRESTARTED%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getRESTARTED()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `KILLING` to the URL query string
    if (getKILLING() != null) {
      try {
        joiner.add(String.format("%sKILLING%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getKILLING()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `SUCCESS` to the URL query string
    if (getSUCCESS() != null) {
      try {
        joiner.add(String.format("%sSUCCESS%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getSUCCESS()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `WARNING` to the URL query string
    if (getWARNING() != null) {
      try {
        joiner.add(String.format("%sWARNING%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getWARNING()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `FAILED` to the URL query string
    if (getFAILED() != null) {
      try {
        joiner.add(String.format("%sFAILED%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getFAILED()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `KILLED` to the URL query string
    if (getKILLED() != null) {
      try {
        joiner.add(String.format("%sKILLED%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getKILLED()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `CANCELLED` to the URL query string
    if (getCANCELLED() != null) {
      try {
        joiner.add(String.format("%sCANCELLED%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getCANCELLED()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `QUEUED` to the URL query string
    if (getQUEUED() != null) {
      try {
        joiner.add(String.format("%sQUEUED%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getQUEUED()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `RETRYING` to the URL query string
    if (getRETRYING() != null) {
      try {
        joiner.add(String.format("%sRETRYING%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getRETRYING()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `RETRIED` to the URL query string
    if (getRETRIED() != null) {
      try {
        joiner.add(String.format("%sRETRIED%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getRETRIED()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `SKIPPED` to the URL query string
    if (getSKIPPED() != null) {
      try {
        joiner.add(String.format("%sSKIPPED%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getSKIPPED()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    return joiner.toString();
  }

}

