/*
 * Kestra EE
 * All API operations, except for Superadmin-only endpoints, require a tenant identifier in the HTTP path.<br/> Endpoints designated as Superadmin-only are not tenant-scoped.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.kestra.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.kestra.sdk.model.ExecutionControllerApiValidateExecutionInputsResponseApiInputError;
import io.kestra.sdk.model.InputObject;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.util.StringJoiner;

/**
 * ExecutionControllerApiValidateExecutionInputsResponseApiInputAndValue
 */
@JsonPropertyOrder({
  ExecutionControllerApiValidateExecutionInputsResponseApiInputAndValue.JSON_PROPERTY_INPUT,
  ExecutionControllerApiValidateExecutionInputsResponseApiInputAndValue.JSON_PROPERTY_VALUE,
  ExecutionControllerApiValidateExecutionInputsResponseApiInputAndValue.JSON_PROPERTY_ENABLED,
  ExecutionControllerApiValidateExecutionInputsResponseApiInputAndValue.JSON_PROPERTY_ERRORS
})
@JsonTypeName("ExecutionController.ApiValidateExecutionInputsResponse.ApiInputAndValue")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-05T13:38:05.347663356Z[Etc/UTC]", comments = "Generator version: 7.14.0-SNAPSHOT")
public class ExecutionControllerApiValidateExecutionInputsResponseApiInputAndValue {
  public static final String JSON_PROPERTY_INPUT = "input";
  @javax.annotation.Nullable
  private InputObject input;

  public static final String JSON_PROPERTY_VALUE = "value";
  @javax.annotation.Nullable
  private Object value;

  public static final String JSON_PROPERTY_ENABLED = "enabled";
  @javax.annotation.Nullable
  private Boolean enabled;

  public static final String JSON_PROPERTY_ERRORS = "errors";
  @javax.annotation.Nullable
  private List<ExecutionControllerApiValidateExecutionInputsResponseApiInputError> errors = new ArrayList<>();

  public ExecutionControllerApiValidateExecutionInputsResponseApiInputAndValue() {
  }

  public ExecutionControllerApiValidateExecutionInputsResponseApiInputAndValue input(@javax.annotation.Nullable InputObject input) {
    
    this.input = input;
    return this;
  }

  /**
   * Get input
   * @return input
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INPUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InputObject getInput() {
    return input;
  }


  @JsonProperty(JSON_PROPERTY_INPUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInput(@javax.annotation.Nullable InputObject input) {
    this.input = input;
  }

  public ExecutionControllerApiValidateExecutionInputsResponseApiInputAndValue value(@javax.annotation.Nullable Object value) {
    
    this.value = value;
    return this;
  }

  /**
   * Get value
   * @return value
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getValue() {
    return value;
  }


  @JsonProperty(JSON_PROPERTY_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setValue(@javax.annotation.Nullable Object value) {
    this.value = value;
  }

  public ExecutionControllerApiValidateExecutionInputsResponseApiInputAndValue enabled(@javax.annotation.Nullable Boolean enabled) {
    
    this.enabled = enabled;
    return this;
  }

  /**
   * Get enabled
   * @return enabled
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getEnabled() {
    return enabled;
  }


  @JsonProperty(JSON_PROPERTY_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnabled(@javax.annotation.Nullable Boolean enabled) {
    this.enabled = enabled;
  }

  public ExecutionControllerApiValidateExecutionInputsResponseApiInputAndValue errors(@javax.annotation.Nullable List<ExecutionControllerApiValidateExecutionInputsResponseApiInputError> errors) {
    
    this.errors = errors;
    return this;
  }

  public ExecutionControllerApiValidateExecutionInputsResponseApiInputAndValue addErrorsItem(ExecutionControllerApiValidateExecutionInputsResponseApiInputError errorsItem) {
    if (this.errors == null) {
      this.errors = new ArrayList<>();
    }
    this.errors.add(errorsItem);
    return this;
  }

  /**
   * Get errors
   * @return errors
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ERRORS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<ExecutionControllerApiValidateExecutionInputsResponseApiInputError> getErrors() {
    return errors;
  }


  @JsonProperty(JSON_PROPERTY_ERRORS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setErrors(@javax.annotation.Nullable List<ExecutionControllerApiValidateExecutionInputsResponseApiInputError> errors) {
    this.errors = errors;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExecutionControllerApiValidateExecutionInputsResponseApiInputAndValue executionControllerApiValidateExecutionInputsResponseApiInputAndValue = (ExecutionControllerApiValidateExecutionInputsResponseApiInputAndValue) o;
    return Objects.equals(this.input, executionControllerApiValidateExecutionInputsResponseApiInputAndValue.input) &&
        Objects.equals(this.value, executionControllerApiValidateExecutionInputsResponseApiInputAndValue.value) &&
        Objects.equals(this.enabled, executionControllerApiValidateExecutionInputsResponseApiInputAndValue.enabled) &&
        Objects.equals(this.errors, executionControllerApiValidateExecutionInputsResponseApiInputAndValue.errors);
  }

  @Override
  public int hashCode() {
    return Objects.hash(input, value, enabled, errors);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExecutionControllerApiValidateExecutionInputsResponseApiInputAndValue {\n");
    sb.append("    input: ").append(toIndentedString(input)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    errors: ").append(toIndentedString(errors)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `input` to the URL query string
    if (getInput() != null) {
      joiner.add(getInput().toUrlQueryString(prefix + "input" + suffix));
    }

    // add `value` to the URL query string
    if (getValue() != null) {
      try {
        joiner.add(String.format("%svalue%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getValue()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `enabled` to the URL query string
    if (getEnabled() != null) {
      try {
        joiner.add(String.format("%senabled%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getEnabled()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `errors` to the URL query string
    if (getErrors() != null) {
      for (int i = 0; i < getErrors().size(); i++) {
        if (getErrors().get(i) != null) {
          joiner.add(getErrors().get(i).toUrlQueryString(String.format("%serrors%s%s", prefix, suffix,
              "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    return joiner.toString();
  }

}

