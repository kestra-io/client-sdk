/*
 * Kestra EE
 * All API operations, except for Superadmin-only endpoints, require a tenant identifier in the HTTP path.<br/> Endpoints designated as Superadmin-only are not tenant-scoped.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.kestra.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.kestra.sdk.model.ApiGroupSummary;
import io.kestra.sdk.model.ApiRoleSummary;
import io.kestra.sdk.model.InvitationInvitationStatus;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * IAMInvitationControllerApiInvitationDetail
 */
@JsonPropertyOrder({
  IAMInvitationControllerApiInvitationDetail.JSON_PROPERTY_ID,
  IAMInvitationControllerApiInvitationDetail.JSON_PROPERTY_ROLES,
  IAMInvitationControllerApiInvitationDetail.JSON_PROPERTY_GROUPS,
  IAMInvitationControllerApiInvitationDetail.JSON_PROPERTY_TENANT_ID,
  IAMInvitationControllerApiInvitationDetail.JSON_PROPERTY_EMAIL,
  IAMInvitationControllerApiInvitationDetail.JSON_PROPERTY_STATUS,
  IAMInvitationControllerApiInvitationDetail.JSON_PROPERTY_SENT_AT,
  IAMInvitationControllerApiInvitationDetail.JSON_PROPERTY_EXPIRED_AT,
  IAMInvitationControllerApiInvitationDetail.JSON_PROPERTY_ACCEPTED_AT,
  IAMInvitationControllerApiInvitationDetail.JSON_PROPERTY_SUPER_ADMIN,
  IAMInvitationControllerApiInvitationDetail.JSON_PROPERTY_LINK
})
@JsonTypeName("IAMInvitationController.ApiInvitationDetail")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.14.0-SNAPSHOT")
public class IAMInvitationControllerApiInvitationDetail {
  public static final String JSON_PROPERTY_ID = "id";
  @javax.annotation.Nonnull
  private String id;

  public static final String JSON_PROPERTY_ROLES = "roles";
  @javax.annotation.Nonnull
  private List<ApiRoleSummary> roles = new ArrayList<>();

  public static final String JSON_PROPERTY_GROUPS = "groups";
  @javax.annotation.Nonnull
  private List<ApiGroupSummary> groups = new ArrayList<>();

  public static final String JSON_PROPERTY_TENANT_ID = "tenantId";
  @javax.annotation.Nonnull
  private String tenantId;

  public static final String JSON_PROPERTY_EMAIL = "email";
  @javax.annotation.Nonnull
  private String email;

  public static final String JSON_PROPERTY_STATUS = "status";
  @javax.annotation.Nonnull
  private InvitationInvitationStatus status;

  public static final String JSON_PROPERTY_SENT_AT = "sentAt";
  @javax.annotation.Nonnull
  private OffsetDateTime sentAt;

  public static final String JSON_PROPERTY_EXPIRED_AT = "expiredAt";
  @javax.annotation.Nonnull
  private OffsetDateTime expiredAt;

  public static final String JSON_PROPERTY_ACCEPTED_AT = "acceptedAt";
  @javax.annotation.Nonnull
  private OffsetDateTime acceptedAt;

  public static final String JSON_PROPERTY_SUPER_ADMIN = "superAdmin";
  @javax.annotation.Nonnull
  private Boolean superAdmin;

  public static final String JSON_PROPERTY_LINK = "link";
  @javax.annotation.Nonnull
  private String link;

  public IAMInvitationControllerApiInvitationDetail() {
  }

  public IAMInvitationControllerApiInvitationDetail id(@javax.annotation.Nonnull String id) {
    
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(@javax.annotation.Nonnull String id) {
    this.id = id;
  }

  public IAMInvitationControllerApiInvitationDetail roles(@javax.annotation.Nonnull List<ApiRoleSummary> roles) {
    
    this.roles = roles;
    return this;
  }

  public IAMInvitationControllerApiInvitationDetail addRolesItem(ApiRoleSummary rolesItem) {
    if (this.roles == null) {
      this.roles = new ArrayList<>();
    }
    this.roles.add(rolesItem);
    return this;
  }

  /**
   * Get roles
   * @return roles
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ROLES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<ApiRoleSummary> getRoles() {
    return roles;
  }


  @JsonProperty(JSON_PROPERTY_ROLES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRoles(@javax.annotation.Nonnull List<ApiRoleSummary> roles) {
    this.roles = roles;
  }

  public IAMInvitationControllerApiInvitationDetail groups(@javax.annotation.Nonnull List<ApiGroupSummary> groups) {
    
    this.groups = groups;
    return this;
  }

  public IAMInvitationControllerApiInvitationDetail addGroupsItem(ApiGroupSummary groupsItem) {
    if (this.groups == null) {
      this.groups = new ArrayList<>();
    }
    this.groups.add(groupsItem);
    return this;
  }

  /**
   * Get groups
   * @return groups
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_GROUPS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<ApiGroupSummary> getGroups() {
    return groups;
  }


  @JsonProperty(JSON_PROPERTY_GROUPS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setGroups(@javax.annotation.Nonnull List<ApiGroupSummary> groups) {
    this.groups = groups;
  }

  public IAMInvitationControllerApiInvitationDetail tenantId(@javax.annotation.Nonnull String tenantId) {
    
    this.tenantId = tenantId;
    return this;
  }

  /**
   * Get tenantId
   * @return tenantId
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TENANT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getTenantId() {
    return tenantId;
  }


  @JsonProperty(JSON_PROPERTY_TENANT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTenantId(@javax.annotation.Nonnull String tenantId) {
    this.tenantId = tenantId;
  }

  public IAMInvitationControllerApiInvitationDetail email(@javax.annotation.Nonnull String email) {
    
    this.email = email;
    return this;
  }

  /**
   * Get email
   * @return email
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getEmail() {
    return email;
  }


  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEmail(@javax.annotation.Nonnull String email) {
    this.email = email;
  }

  public IAMInvitationControllerApiInvitationDetail status(@javax.annotation.Nonnull InvitationInvitationStatus status) {
    
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public InvitationInvitationStatus getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStatus(@javax.annotation.Nonnull InvitationInvitationStatus status) {
    this.status = status;
  }

  public IAMInvitationControllerApiInvitationDetail sentAt(@javax.annotation.Nonnull OffsetDateTime sentAt) {
    
    this.sentAt = sentAt;
    return this;
  }

  /**
   * Get sentAt
   * @return sentAt
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SENT_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getSentAt() {
    return sentAt;
  }


  @JsonProperty(JSON_PROPERTY_SENT_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSentAt(@javax.annotation.Nonnull OffsetDateTime sentAt) {
    this.sentAt = sentAt;
  }

  public IAMInvitationControllerApiInvitationDetail expiredAt(@javax.annotation.Nonnull OffsetDateTime expiredAt) {
    
    this.expiredAt = expiredAt;
    return this;
  }

  /**
   * Get expiredAt
   * @return expiredAt
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_EXPIRED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getExpiredAt() {
    return expiredAt;
  }


  @JsonProperty(JSON_PROPERTY_EXPIRED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setExpiredAt(@javax.annotation.Nonnull OffsetDateTime expiredAt) {
    this.expiredAt = expiredAt;
  }

  public IAMInvitationControllerApiInvitationDetail acceptedAt(@javax.annotation.Nonnull OffsetDateTime acceptedAt) {
    
    this.acceptedAt = acceptedAt;
    return this;
  }

  /**
   * Get acceptedAt
   * @return acceptedAt
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ACCEPTED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getAcceptedAt() {
    return acceptedAt;
  }


  @JsonProperty(JSON_PROPERTY_ACCEPTED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAcceptedAt(@javax.annotation.Nonnull OffsetDateTime acceptedAt) {
    this.acceptedAt = acceptedAt;
  }

  public IAMInvitationControllerApiInvitationDetail superAdmin(@javax.annotation.Nonnull Boolean superAdmin) {
    
    this.superAdmin = superAdmin;
    return this;
  }

  /**
   * Get superAdmin
   * @return superAdmin
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SUPER_ADMIN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getSuperAdmin() {
    return superAdmin;
  }


  @JsonProperty(JSON_PROPERTY_SUPER_ADMIN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSuperAdmin(@javax.annotation.Nonnull Boolean superAdmin) {
    this.superAdmin = superAdmin;
  }

  public IAMInvitationControllerApiInvitationDetail link(@javax.annotation.Nonnull String link) {
    
    this.link = link;
    return this;
  }

  /**
   * Get link
   * @return link
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_LINK)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getLink() {
    return link;
  }


  @JsonProperty(JSON_PROPERTY_LINK)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLink(@javax.annotation.Nonnull String link) {
    this.link = link;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IAMInvitationControllerApiInvitationDetail iaMInvitationControllerApiInvitationDetail = (IAMInvitationControllerApiInvitationDetail) o;
    return Objects.equals(this.id, iaMInvitationControllerApiInvitationDetail.id) &&
        Objects.equals(this.roles, iaMInvitationControllerApiInvitationDetail.roles) &&
        Objects.equals(this.groups, iaMInvitationControllerApiInvitationDetail.groups) &&
        Objects.equals(this.tenantId, iaMInvitationControllerApiInvitationDetail.tenantId) &&
        Objects.equals(this.email, iaMInvitationControllerApiInvitationDetail.email) &&
        Objects.equals(this.status, iaMInvitationControllerApiInvitationDetail.status) &&
        Objects.equals(this.sentAt, iaMInvitationControllerApiInvitationDetail.sentAt) &&
        Objects.equals(this.expiredAt, iaMInvitationControllerApiInvitationDetail.expiredAt) &&
        Objects.equals(this.acceptedAt, iaMInvitationControllerApiInvitationDetail.acceptedAt) &&
        Objects.equals(this.superAdmin, iaMInvitationControllerApiInvitationDetail.superAdmin) &&
        Objects.equals(this.link, iaMInvitationControllerApiInvitationDetail.link);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, roles, groups, tenantId, email, status, sentAt, expiredAt, acceptedAt, superAdmin, link);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IAMInvitationControllerApiInvitationDetail {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    roles: ").append(toIndentedString(roles)).append("\n");
    sb.append("    groups: ").append(toIndentedString(groups)).append("\n");
    sb.append("    tenantId: ").append(toIndentedString(tenantId)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    sentAt: ").append(toIndentedString(sentAt)).append("\n");
    sb.append("    expiredAt: ").append(toIndentedString(expiredAt)).append("\n");
    sb.append("    acceptedAt: ").append(toIndentedString(acceptedAt)).append("\n");
    sb.append("    superAdmin: ").append(toIndentedString(superAdmin)).append("\n");
    sb.append("    link: ").append(toIndentedString(link)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

