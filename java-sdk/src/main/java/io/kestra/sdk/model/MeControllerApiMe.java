/*
 * Kestra EE
 * All API operations, except for Superadmin-only endpoints, require a tenant identifier in the HTTP path.<br/> Endpoints designated as Superadmin-only are not tenant-scoped.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.kestra.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.kestra.sdk.model.IAMTenantAccessControllerApiAuthentication;
import io.kestra.sdk.model.MeControllerApiProfile;
import io.kestra.sdk.model.MeControllerApiTenant;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * MeControllerApiMe
 */
@JsonPropertyOrder({
  MeControllerApiMe.JSON_PROPERTY_ID,
  MeControllerApiMe.JSON_PROPERTY_SUPER_ADMIN,
  MeControllerApiMe.JSON_PROPERTY_RESTRICTED,
  MeControllerApiMe.JSON_PROPERTY_PROFILE,
  MeControllerApiMe.JSON_PROPERTY_AUTHS,
  MeControllerApiMe.JSON_PROPERTY_TENANTS
})
@JsonTypeName("MeController.ApiMe")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.14.0-SNAPSHOT")
public class MeControllerApiMe {
  public static final String JSON_PROPERTY_ID = "id";
  @javax.annotation.Nonnull
  private String id;

  public static final String JSON_PROPERTY_SUPER_ADMIN = "superAdmin";
  @javax.annotation.Nonnull
  private Boolean superAdmin;

  public static final String JSON_PROPERTY_RESTRICTED = "restricted";
  @javax.annotation.Nonnull
  private Boolean restricted;

  public static final String JSON_PROPERTY_PROFILE = "profile";
  @javax.annotation.Nonnull
  private MeControllerApiProfile profile;

  public static final String JSON_PROPERTY_AUTHS = "auths";
  @javax.annotation.Nonnull
  private List<IAMTenantAccessControllerApiAuthentication> auths = new ArrayList<>();

  public static final String JSON_PROPERTY_TENANTS = "tenants";
  @javax.annotation.Nonnull
  private List<MeControllerApiTenant> tenants = new ArrayList<>();

  public MeControllerApiMe() {
  }

  public MeControllerApiMe id(@javax.annotation.Nonnull String id) {
    
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(@javax.annotation.Nonnull String id) {
    this.id = id;
  }

  public MeControllerApiMe superAdmin(@javax.annotation.Nonnull Boolean superAdmin) {
    
    this.superAdmin = superAdmin;
    return this;
  }

  /**
   * Get superAdmin
   * @return superAdmin
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SUPER_ADMIN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getSuperAdmin() {
    return superAdmin;
  }


  @JsonProperty(JSON_PROPERTY_SUPER_ADMIN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSuperAdmin(@javax.annotation.Nonnull Boolean superAdmin) {
    this.superAdmin = superAdmin;
  }

  public MeControllerApiMe restricted(@javax.annotation.Nonnull Boolean restricted) {
    
    this.restricted = restricted;
    return this;
  }

  /**
   * Get restricted
   * @return restricted
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_RESTRICTED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getRestricted() {
    return restricted;
  }


  @JsonProperty(JSON_PROPERTY_RESTRICTED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRestricted(@javax.annotation.Nonnull Boolean restricted) {
    this.restricted = restricted;
  }

  public MeControllerApiMe profile(@javax.annotation.Nonnull MeControllerApiProfile profile) {
    
    this.profile = profile;
    return this;
  }

  /**
   * Get profile
   * @return profile
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PROFILE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public MeControllerApiProfile getProfile() {
    return profile;
  }


  @JsonProperty(JSON_PROPERTY_PROFILE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setProfile(@javax.annotation.Nonnull MeControllerApiProfile profile) {
    this.profile = profile;
  }

  public MeControllerApiMe auths(@javax.annotation.Nonnull List<IAMTenantAccessControllerApiAuthentication> auths) {
    
    this.auths = auths;
    return this;
  }

  public MeControllerApiMe addAuthsItem(IAMTenantAccessControllerApiAuthentication authsItem) {
    if (this.auths == null) {
      this.auths = new ArrayList<>();
    }
    this.auths.add(authsItem);
    return this;
  }

  /**
   * Get auths
   * @return auths
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_AUTHS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<IAMTenantAccessControllerApiAuthentication> getAuths() {
    return auths;
  }


  @JsonProperty(JSON_PROPERTY_AUTHS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAuths(@javax.annotation.Nonnull List<IAMTenantAccessControllerApiAuthentication> auths) {
    this.auths = auths;
  }

  public MeControllerApiMe tenants(@javax.annotation.Nonnull List<MeControllerApiTenant> tenants) {
    
    this.tenants = tenants;
    return this;
  }

  public MeControllerApiMe addTenantsItem(MeControllerApiTenant tenantsItem) {
    if (this.tenants == null) {
      this.tenants = new ArrayList<>();
    }
    this.tenants.add(tenantsItem);
    return this;
  }

  /**
   * Get tenants
   * @return tenants
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TENANTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<MeControllerApiTenant> getTenants() {
    return tenants;
  }


  @JsonProperty(JSON_PROPERTY_TENANTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTenants(@javax.annotation.Nonnull List<MeControllerApiTenant> tenants) {
    this.tenants = tenants;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MeControllerApiMe meControllerApiMe = (MeControllerApiMe) o;
    return Objects.equals(this.id, meControllerApiMe.id) &&
        Objects.equals(this.superAdmin, meControllerApiMe.superAdmin) &&
        Objects.equals(this.restricted, meControllerApiMe.restricted) &&
        Objects.equals(this.profile, meControllerApiMe.profile) &&
        Objects.equals(this.auths, meControllerApiMe.auths) &&
        Objects.equals(this.tenants, meControllerApiMe.tenants);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, superAdmin, restricted, profile, auths, tenants);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MeControllerApiMe {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    superAdmin: ").append(toIndentedString(superAdmin)).append("\n");
    sb.append("    restricted: ").append(toIndentedString(restricted)).append("\n");
    sb.append("    profile: ").append(toIndentedString(profile)).append("\n");
    sb.append("    auths: ").append(toIndentedString(auths)).append("\n");
    sb.append("    tenants: ").append(toIndentedString(tenants)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

