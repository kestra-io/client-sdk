/*
 * Kestra EE
 * All API operations, except for Superadmin-only endpoints, require a tenant identifier in the HTTP path.<br/> Endpoints designated as Superadmin-only are not tenant-scoped.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.kestra.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.kestra.sdk.model.Metric;
import io.kestra.sdk.model.ServerConfig;
import io.kestra.sdk.model.ServerInstance;
import io.kestra.sdk.model.ServiceInstanceTimestampedEvent;
import io.kestra.sdk.model.ServiceServiceState;
import io.kestra.sdk.model.ServiceType;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ServiceInstance
 */
@JsonPropertyOrder({
  ServiceInstance.JSON_PROPERTY_SERVER,
  ServiceInstance.JSON_PROPERTY_METRICS,
  ServiceInstance.JSON_PROPERTY_STATE,
  ServiceInstance.JSON_PROPERTY_ID,
  ServiceInstance.JSON_PROPERTY_TYPE,
  ServiceInstance.JSON_PROPERTY_CREATED_AT,
  ServiceInstance.JSON_PROPERTY_UPDATED_AT,
  ServiceInstance.JSON_PROPERTY_EVENTS,
  ServiceInstance.JSON_PROPERTY_CONFIG,
  ServiceInstance.JSON_PROPERTY_PROPS,
  ServiceInstance.JSON_PROPERTY_SEQ_ID
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.14.0-SNAPSHOT")
public class ServiceInstance {
  public static final String JSON_PROPERTY_SERVER = "server";
  @javax.annotation.Nonnull
  private ServerInstance server;

  public static final String JSON_PROPERTY_METRICS = "metrics";
  @javax.annotation.Nonnull
  private List<Metric> metrics = new ArrayList<>();

  public static final String JSON_PROPERTY_STATE = "state";
  @javax.annotation.Nonnull
  private ServiceServiceState state;

  public static final String JSON_PROPERTY_ID = "id";
  @javax.annotation.Nonnull
  private String id;

  public static final String JSON_PROPERTY_TYPE = "type";
  @javax.annotation.Nonnull
  private ServiceType type;

  public static final String JSON_PROPERTY_CREATED_AT = "createdAt";
  @javax.annotation.Nonnull
  private OffsetDateTime createdAt;

  public static final String JSON_PROPERTY_UPDATED_AT = "updatedAt";
  @javax.annotation.Nonnull
  private OffsetDateTime updatedAt;

  public static final String JSON_PROPERTY_EVENTS = "events";
  @javax.annotation.Nonnull
  private List<ServiceInstanceTimestampedEvent> events = new ArrayList<>();

  public static final String JSON_PROPERTY_CONFIG = "config";
  @javax.annotation.Nonnull
  private ServerConfig config;

  public static final String JSON_PROPERTY_PROPS = "props";
  @javax.annotation.Nonnull
  private Map<String, Object> props = new HashMap<>();

  public static final String JSON_PROPERTY_SEQ_ID = "seqId";
  @javax.annotation.Nonnull
  private Long seqId;

  public ServiceInstance() {
  }

  public ServiceInstance server(@javax.annotation.Nonnull ServerInstance server) {
    
    this.server = server;
    return this;
  }

  /**
   * Get server
   * @return server
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SERVER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ServerInstance getServer() {
    return server;
  }


  @JsonProperty(JSON_PROPERTY_SERVER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setServer(@javax.annotation.Nonnull ServerInstance server) {
    this.server = server;
  }

  public ServiceInstance metrics(@javax.annotation.Nonnull List<Metric> metrics) {
    
    this.metrics = metrics;
    return this;
  }

  public ServiceInstance addMetricsItem(Metric metricsItem) {
    if (this.metrics == null) {
      this.metrics = new ArrayList<>();
    }
    this.metrics.add(metricsItem);
    return this;
  }

  /**
   * Get metrics
   * @return metrics
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_METRICS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<Metric> getMetrics() {
    return metrics;
  }


  @JsonProperty(JSON_PROPERTY_METRICS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMetrics(@javax.annotation.Nonnull List<Metric> metrics) {
    this.metrics = metrics;
  }

  public ServiceInstance state(@javax.annotation.Nonnull ServiceServiceState state) {
    
    this.state = state;
    return this;
  }

  /**
   * Get state
   * @return state
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_STATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ServiceServiceState getState() {
    return state;
  }


  @JsonProperty(JSON_PROPERTY_STATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setState(@javax.annotation.Nonnull ServiceServiceState state) {
    this.state = state;
  }

  public ServiceInstance id(@javax.annotation.Nonnull String id) {
    
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(@javax.annotation.Nonnull String id) {
    this.id = id;
  }

  public ServiceInstance type(@javax.annotation.Nonnull ServiceType type) {
    
    this.type = type;
    return this;
  }

  /**
   * Get type
   * @return type
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ServiceType getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setType(@javax.annotation.Nonnull ServiceType type) {
    this.type = type;
  }

  public ServiceInstance createdAt(@javax.annotation.Nonnull OffsetDateTime createdAt) {
    
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Get createdAt
   * @return createdAt
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreatedAt(@javax.annotation.Nonnull OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }

  public ServiceInstance updatedAt(@javax.annotation.Nonnull OffsetDateTime updatedAt) {
    
    this.updatedAt = updatedAt;
    return this;
  }

  /**
   * Get updatedAt
   * @return updatedAt
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_UPDATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }


  @JsonProperty(JSON_PROPERTY_UPDATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUpdatedAt(@javax.annotation.Nonnull OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }

  public ServiceInstance events(@javax.annotation.Nonnull List<ServiceInstanceTimestampedEvent> events) {
    
    this.events = events;
    return this;
  }

  public ServiceInstance addEventsItem(ServiceInstanceTimestampedEvent eventsItem) {
    if (this.events == null) {
      this.events = new ArrayList<>();
    }
    this.events.add(eventsItem);
    return this;
  }

  /**
   * Get events
   * @return events
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_EVENTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<ServiceInstanceTimestampedEvent> getEvents() {
    return events;
  }


  @JsonProperty(JSON_PROPERTY_EVENTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEvents(@javax.annotation.Nonnull List<ServiceInstanceTimestampedEvent> events) {
    this.events = events;
  }

  public ServiceInstance config(@javax.annotation.Nonnull ServerConfig config) {
    
    this.config = config;
    return this;
  }

  /**
   * Get config
   * @return config
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CONFIG)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ServerConfig getConfig() {
    return config;
  }


  @JsonProperty(JSON_PROPERTY_CONFIG)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setConfig(@javax.annotation.Nonnull ServerConfig config) {
    this.config = config;
  }

  public ServiceInstance props(@javax.annotation.Nonnull Map<String, Object> props) {
    
    this.props = props;
    return this;
  }

  public ServiceInstance putPropsItem(String key, Object propsItem) {
    this.props.put(key, propsItem);
    return this;
  }

  /**
   * Get props
   * @return props
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PROPS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Map<String, Object> getProps() {
    return props;
  }


  @JsonProperty(JSON_PROPERTY_PROPS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setProps(@javax.annotation.Nonnull Map<String, Object> props) {
    this.props = props;
  }

  public ServiceInstance seqId(@javax.annotation.Nonnull Long seqId) {
    
    this.seqId = seqId;
    return this;
  }

  /**
   * Get seqId
   * @return seqId
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SEQ_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getSeqId() {
    return seqId;
  }


  @JsonProperty(JSON_PROPERTY_SEQ_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSeqId(@javax.annotation.Nonnull Long seqId) {
    this.seqId = seqId;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ServiceInstance serviceInstance = (ServiceInstance) o;
    return Objects.equals(this.server, serviceInstance.server) &&
        Objects.equals(this.metrics, serviceInstance.metrics) &&
        Objects.equals(this.state, serviceInstance.state) &&
        Objects.equals(this.id, serviceInstance.id) &&
        Objects.equals(this.type, serviceInstance.type) &&
        Objects.equals(this.createdAt, serviceInstance.createdAt) &&
        Objects.equals(this.updatedAt, serviceInstance.updatedAt) &&
        Objects.equals(this.events, serviceInstance.events) &&
        Objects.equals(this.config, serviceInstance.config) &&
        Objects.equals(this.props, serviceInstance.props) &&
        Objects.equals(this.seqId, serviceInstance.seqId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(server, metrics, state, id, type, createdAt, updatedAt, events, config, props, seqId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ServiceInstance {\n");
    sb.append("    server: ").append(toIndentedString(server)).append("\n");
    sb.append("    metrics: ").append(toIndentedString(metrics)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    events: ").append(toIndentedString(events)).append("\n");
    sb.append("    config: ").append(toIndentedString(config)).append("\n");
    sb.append("    props: ").append(toIndentedString(props)).append("\n");
    sb.append("    seqId: ").append(toIndentedString(seqId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

