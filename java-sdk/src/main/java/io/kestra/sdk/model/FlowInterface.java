/*
 * Kestra EE
 * All API operations, except for Superadmin-only endpoints, require a tenant identifier in the HTTP path.<br/> Endpoints designated as Superadmin-only are not tenant-scoped.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.kestra.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Locale;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.kestra.sdk.model.Concurrency;
import io.kestra.sdk.model.InputObject;
import io.kestra.sdk.model.Label;
import io.kestra.sdk.model.Output;
import io.kestra.sdk.model.SLA;
import io.kestra.sdk.model.WorkerGroup;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * FlowInterface
 */
@JsonPropertyOrder({
  FlowInterface.JSON_PROPERTY_ID,
  FlowInterface.JSON_PROPERTY_NAMESPACE,
  FlowInterface.JSON_PROPERTY_REVISION,
  FlowInterface.JSON_PROPERTY_TENANT_ID,
  FlowInterface.JSON_PROPERTY_DELETED,
  FlowInterface.JSON_PROPERTY_DESCRIPTION,
  FlowInterface.JSON_PROPERTY_DISABLED,
  FlowInterface.JSON_PROPERTY_LABELS,
  FlowInterface.JSON_PROPERTY_INPUTS,
  FlowInterface.JSON_PROPERTY_OUTPUTS,
  FlowInterface.JSON_PROPERTY_VARIABLES,
  FlowInterface.JSON_PROPERTY_WORKER_GROUP,
  FlowInterface.JSON_PROPERTY_CONCURRENCY,
  FlowInterface.JSON_PROPERTY_SLA,
  FlowInterface.JSON_PROPERTY_SOURCE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.16.0")
public class FlowInterface {
  public static final String JSON_PROPERTY_ID = "id";
  @javax.annotation.Nullable
  private String id;

  public static final String JSON_PROPERTY_NAMESPACE = "namespace";
  @javax.annotation.Nullable
  private String namespace;

  public static final String JSON_PROPERTY_REVISION = "revision";
  @javax.annotation.Nullable
  private Integer revision;

  public static final String JSON_PROPERTY_TENANT_ID = "tenantId";
  @javax.annotation.Nullable
  private String tenantId;

  public static final String JSON_PROPERTY_DELETED = "deleted";
  @javax.annotation.Nullable
  private Boolean deleted;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  @javax.annotation.Nullable
  private String description;

  public static final String JSON_PROPERTY_DISABLED = "disabled";
  @javax.annotation.Nullable
  private Boolean disabled;

  public static final String JSON_PROPERTY_LABELS = "labels";
  @javax.annotation.Nullable
  private List<Label> labels = new ArrayList<>();

  public static final String JSON_PROPERTY_INPUTS = "inputs";
  @javax.annotation.Nullable
  private List<InputObject> inputs = new ArrayList<>();

  public static final String JSON_PROPERTY_OUTPUTS = "outputs";
  @javax.annotation.Nullable
  private List<Output> outputs = new ArrayList<>();

  public static final String JSON_PROPERTY_VARIABLES = "variables";
  @javax.annotation.Nullable
  private Map<String, Object> variables = new HashMap<>();

  public static final String JSON_PROPERTY_WORKER_GROUP = "workerGroup";
  @javax.annotation.Nullable
  private WorkerGroup workerGroup;

  public static final String JSON_PROPERTY_CONCURRENCY = "concurrency";
  @javax.annotation.Nullable
  private Concurrency concurrency;

  public static final String JSON_PROPERTY_SLA = "sla";
  @javax.annotation.Nullable
  private List<SLA> sla = new ArrayList<>();

  public static final String JSON_PROPERTY_SOURCE = "source";
  @javax.annotation.Nullable
  private String source;

  public FlowInterface() {
  }

  public FlowInterface id(@javax.annotation.Nullable String id) {
    
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_ID, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(value = JSON_PROPERTY_ID, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(@javax.annotation.Nullable String id) {
    this.id = id;
  }

  public FlowInterface namespace(@javax.annotation.Nullable String namespace) {
    
    this.namespace = namespace;
    return this;
  }

  /**
   * Get namespace
   * @return namespace
   */
  @javax.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_NAMESPACE, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNamespace() {
    return namespace;
  }


  @JsonProperty(value = JSON_PROPERTY_NAMESPACE, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNamespace(@javax.annotation.Nullable String namespace) {
    this.namespace = namespace;
  }

  public FlowInterface revision(@javax.annotation.Nullable Integer revision) {
    
    this.revision = revision;
    return this;
  }

  /**
   * Get revision
   * @return revision
   */
  @javax.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_REVISION, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getRevision() {
    return revision;
  }


  @JsonProperty(value = JSON_PROPERTY_REVISION, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRevision(@javax.annotation.Nullable Integer revision) {
    this.revision = revision;
  }

  public FlowInterface tenantId(@javax.annotation.Nullable String tenantId) {
    
    this.tenantId = tenantId;
    return this;
  }

  /**
   * Get tenantId
   * @return tenantId
   */
  @javax.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_TENANT_ID, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTenantId() {
    return tenantId;
  }


  @JsonProperty(value = JSON_PROPERTY_TENANT_ID, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTenantId(@javax.annotation.Nullable String tenantId) {
    this.tenantId = tenantId;
  }

  public FlowInterface deleted(@javax.annotation.Nullable Boolean deleted) {
    
    this.deleted = deleted;
    return this;
  }

  /**
   * Get deleted
   * @return deleted
   */
  @javax.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_DELETED, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getDeleted() {
    return deleted;
  }


  @JsonProperty(value = JSON_PROPERTY_DELETED, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleted(@javax.annotation.Nullable Boolean deleted) {
    this.deleted = deleted;
  }

  public FlowInterface description(@javax.annotation.Nullable String description) {
    
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_DESCRIPTION, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(value = JSON_PROPERTY_DESCRIPTION, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(@javax.annotation.Nullable String description) {
    this.description = description;
  }

  public FlowInterface disabled(@javax.annotation.Nullable Boolean disabled) {
    
    this.disabled = disabled;
    return this;
  }

  /**
   * Get disabled
   * @return disabled
   */
  @javax.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_DISABLED, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getDisabled() {
    return disabled;
  }


  @JsonProperty(value = JSON_PROPERTY_DISABLED, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDisabled(@javax.annotation.Nullable Boolean disabled) {
    this.disabled = disabled;
  }

  public FlowInterface labels(@javax.annotation.Nullable List<Label> labels) {
    
    this.labels = labels;
    return this;
  }

  public FlowInterface addLabelsItem(Label labelsItem) {
    if (this.labels == null) {
      this.labels = new ArrayList<>();
    }
    this.labels.add(labelsItem);
    return this;
  }

  /**
   * Get labels
   * @return labels
   */
  @javax.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_LABELS, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Label> getLabels() {
    return labels;
  }


  @JsonProperty(value = JSON_PROPERTY_LABELS, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLabels(@javax.annotation.Nullable List<Label> labels) {
    this.labels = labels;
  }

  public FlowInterface inputs(@javax.annotation.Nullable List<InputObject> inputs) {
    
    this.inputs = inputs;
    return this;
  }

  public FlowInterface addInputsItem(InputObject inputsItem) {
    if (this.inputs == null) {
      this.inputs = new ArrayList<>();
    }
    this.inputs.add(inputsItem);
    return this;
  }

  /**
   * Get inputs
   * @return inputs
   */
  @javax.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_INPUTS, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<InputObject> getInputs() {
    return inputs;
  }


  @JsonProperty(value = JSON_PROPERTY_INPUTS, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInputs(@javax.annotation.Nullable List<InputObject> inputs) {
    this.inputs = inputs;
  }

  public FlowInterface outputs(@javax.annotation.Nullable List<Output> outputs) {
    
    this.outputs = outputs;
    return this;
  }

  public FlowInterface addOutputsItem(Output outputsItem) {
    if (this.outputs == null) {
      this.outputs = new ArrayList<>();
    }
    this.outputs.add(outputsItem);
    return this;
  }

  /**
   * Get outputs
   * @return outputs
   */
  @javax.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_OUTPUTS, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Output> getOutputs() {
    return outputs;
  }


  @JsonProperty(value = JSON_PROPERTY_OUTPUTS, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOutputs(@javax.annotation.Nullable List<Output> outputs) {
    this.outputs = outputs;
  }

  public FlowInterface variables(@javax.annotation.Nullable Map<String, Object> variables) {
    
    this.variables = variables;
    return this;
  }

  public FlowInterface putVariablesItem(String key, Object variablesItem) {
    if (this.variables == null) {
      this.variables = new HashMap<>();
    }
    this.variables.put(key, variablesItem);
    return this;
  }

  /**
   * Get variables
   * @return variables
   */
  @javax.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_VARIABLES, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, Object> getVariables() {
    return variables;
  }


  @JsonProperty(value = JSON_PROPERTY_VARIABLES, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVariables(@javax.annotation.Nullable Map<String, Object> variables) {
    this.variables = variables;
  }

  public FlowInterface workerGroup(@javax.annotation.Nullable WorkerGroup workerGroup) {
    
    this.workerGroup = workerGroup;
    return this;
  }

  /**
   * Get workerGroup
   * @return workerGroup
   */
  @javax.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_WORKER_GROUP, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public WorkerGroup getWorkerGroup() {
    return workerGroup;
  }


  @JsonProperty(value = JSON_PROPERTY_WORKER_GROUP, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWorkerGroup(@javax.annotation.Nullable WorkerGroup workerGroup) {
    this.workerGroup = workerGroup;
  }

  public FlowInterface concurrency(@javax.annotation.Nullable Concurrency concurrency) {
    
    this.concurrency = concurrency;
    return this;
  }

  /**
   * Get concurrency
   * @return concurrency
   */
  @javax.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_CONCURRENCY, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Concurrency getConcurrency() {
    return concurrency;
  }


  @JsonProperty(value = JSON_PROPERTY_CONCURRENCY, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConcurrency(@javax.annotation.Nullable Concurrency concurrency) {
    this.concurrency = concurrency;
  }

  public FlowInterface sla(@javax.annotation.Nullable List<SLA> sla) {
    
    this.sla = sla;
    return this;
  }

  public FlowInterface addSlaItem(SLA slaItem) {
    if (this.sla == null) {
      this.sla = new ArrayList<>();
    }
    this.sla.add(slaItem);
    return this;
  }

  /**
   * Get sla
   * @return sla
   */
  @javax.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_SLA, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<SLA> getSla() {
    return sla;
  }


  @JsonProperty(value = JSON_PROPERTY_SLA, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSla(@javax.annotation.Nullable List<SLA> sla) {
    this.sla = sla;
  }

  public FlowInterface source(@javax.annotation.Nullable String source) {
    
    this.source = source;
    return this;
  }

  /**
   * Get source
   * @return source
   */
  @javax.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_SOURCE, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSource() {
    return source;
  }


  @JsonProperty(value = JSON_PROPERTY_SOURCE, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSource(@javax.annotation.Nullable String source) {
    this.source = source;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FlowInterface flowInterface = (FlowInterface) o;
    return Objects.equals(this.id, flowInterface.id) &&
        Objects.equals(this.namespace, flowInterface.namespace) &&
        Objects.equals(this.revision, flowInterface.revision) &&
        Objects.equals(this.tenantId, flowInterface.tenantId) &&
        Objects.equals(this.deleted, flowInterface.deleted) &&
        Objects.equals(this.description, flowInterface.description) &&
        Objects.equals(this.disabled, flowInterface.disabled) &&
        Objects.equals(this.labels, flowInterface.labels) &&
        Objects.equals(this.inputs, flowInterface.inputs) &&
        Objects.equals(this.outputs, flowInterface.outputs) &&
        Objects.equals(this.variables, flowInterface.variables) &&
        Objects.equals(this.workerGroup, flowInterface.workerGroup) &&
        Objects.equals(this.concurrency, flowInterface.concurrency) &&
        Objects.equals(this.sla, flowInterface.sla) &&
        Objects.equals(this.source, flowInterface.source);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, namespace, revision, tenantId, deleted, description, disabled, labels, inputs, outputs, variables, workerGroup, concurrency, sla, source);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FlowInterface {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    namespace: ").append(toIndentedString(namespace)).append("\n");
    sb.append("    revision: ").append(toIndentedString(revision)).append("\n");
    sb.append("    tenantId: ").append(toIndentedString(tenantId)).append("\n");
    sb.append("    deleted: ").append(toIndentedString(deleted)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    disabled: ").append(toIndentedString(disabled)).append("\n");
    sb.append("    labels: ").append(toIndentedString(labels)).append("\n");
    sb.append("    inputs: ").append(toIndentedString(inputs)).append("\n");
    sb.append("    outputs: ").append(toIndentedString(outputs)).append("\n");
    sb.append("    variables: ").append(toIndentedString(variables)).append("\n");
    sb.append("    workerGroup: ").append(toIndentedString(workerGroup)).append("\n");
    sb.append("    concurrency: ").append(toIndentedString(concurrency)).append("\n");
    sb.append("    sla: ").append(toIndentedString(sla)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

