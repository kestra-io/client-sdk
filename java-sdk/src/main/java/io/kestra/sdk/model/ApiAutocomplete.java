/*
 * Kestra EE
 * All API operations, except for Superadmin-only endpoints, require a tenant identifier in the HTTP path.<br/> Endpoints designated as Superadmin-only are not tenant-scoped.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.kestra.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ApiAutocomplete
 */
@JsonPropertyOrder({
  ApiAutocomplete.JSON_PROPERTY_Q,
  ApiAutocomplete.JSON_PROPERTY_IDS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-19T08:56:01.503545549Z[Etc/UTC]", comments = "Generator version: 7.14.0-SNAPSHOT")
public class ApiAutocomplete {
  public static final String JSON_PROPERTY_Q = "q";
  @javax.annotation.Nullable
  private JsonNullable<String> q = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_IDS = "ids";
  @javax.annotation.Nullable
  private JsonNullable<List<String>> ids = JsonNullable.<List<String>>undefined();

  public ApiAutocomplete() {
  }

  public ApiAutocomplete q(@javax.annotation.Nullable String q) {
    this.q = JsonNullable.<String>of(q);
    
    return this;
  }

  /**
   * Get q
   * @return q
   */
  @javax.annotation.Nullable
  @JsonIgnore

  public String getQ() {
        return q.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_Q)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getQ_JsonNullable() {
    return q;
  }
  
  @JsonProperty(JSON_PROPERTY_Q)
  public void setQ_JsonNullable(JsonNullable<String> q) {
    this.q = q;
  }

  public void setQ(@javax.annotation.Nullable String q) {
    this.q = JsonNullable.<String>of(q);
  }

  public ApiAutocomplete ids(@javax.annotation.Nullable List<String> ids) {
    this.ids = JsonNullable.<List<String>>of(ids);
    
    return this;
  }

  public ApiAutocomplete addIdsItem(String idsItem) {
    if (this.ids == null || !this.ids.isPresent()) {
      this.ids = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.ids.get().add(idsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Get ids
   * @return ids
   */
  @javax.annotation.Nullable
  @JsonIgnore

  public List<String> getIds() {
        return ids.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getIds_JsonNullable() {
    return ids;
  }
  
  @JsonProperty(JSON_PROPERTY_IDS)
  public void setIds_JsonNullable(JsonNullable<List<String>> ids) {
    this.ids = ids;
  }

  public void setIds(@javax.annotation.Nullable List<String> ids) {
    this.ids = JsonNullable.<List<String>>of(ids);
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApiAutocomplete apiAutocomplete = (ApiAutocomplete) o;
    return equalsNullable(this.q, apiAutocomplete.q) &&
        equalsNullable(this.ids, apiAutocomplete.ids);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(q), hashCodeNullable(ids));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApiAutocomplete {\n");
    sb.append("    q: ").append(toIndentedString(q)).append("\n");
    sb.append("    ids: ").append(toIndentedString(ids)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

