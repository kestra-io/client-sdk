/*
 * Kestra EE
 * All API operations, except for Superadmin-only endpoints, require a tenant identifier in the HTTP path.<br/> Endpoints designated as Superadmin-only are not tenant-scoped.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.kestra.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.kestra.sdk.model.Isolation;
import io.kestra.sdk.model.NamespaceAllowedNamespace;
import io.kestra.sdk.model.NamespaceAllowedTrigger;
import io.kestra.sdk.model.PluginDefault;
import io.kestra.sdk.model.WorkerGroup;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * A namespace is a logical grouping of flows and tasks. It is used to organize and manage flows and tasks within Kestra.
 */
@JsonPropertyOrder({
  Namespace.JSON_PROPERTY_ID,
  Namespace.JSON_PROPERTY_DELETED,
  Namespace.JSON_PROPERTY_ALLOWED_TRIGGERS,
  Namespace.JSON_PROPERTY_STORAGE_ISOLATION,
  Namespace.JSON_PROPERTY_SECRET_ISOLATION,
  Namespace.JSON_PROPERTY_DESCRIPTION,
  Namespace.JSON_PROPERTY_VARIABLES,
  Namespace.JSON_PROPERTY_PLUGIN_DEFAULTS,
  Namespace.JSON_PROPERTY_ALLOWED_NAMESPACES,
  Namespace.JSON_PROPERTY_WORKER_GROUP,
  Namespace.JSON_PROPERTY_STORAGE_TYPE,
  Namespace.JSON_PROPERTY_STORAGE_CONFIGURATION,
  Namespace.JSON_PROPERTY_SECRET_TYPE,
  Namespace.JSON_PROPERTY_SECRET_READ_ONLY,
  Namespace.JSON_PROPERTY_SECRET_CONFIGURATION,
  Namespace.JSON_PROPERTY_OUTPUTS_IN_INTERNAL_STORAGE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.14.0-SNAPSHOT")
public class Namespace {
  public static final String JSON_PROPERTY_ID = "id";
  @javax.annotation.Nonnull
  private String id;

  public static final String JSON_PROPERTY_DELETED = "deleted";
  @javax.annotation.Nonnull
  private Boolean deleted;

  public static final String JSON_PROPERTY_ALLOWED_TRIGGERS = "allowedTriggers";
  @javax.annotation.Nullable
  private List<NamespaceAllowedTrigger> allowedTriggers = new ArrayList<>();

  public static final String JSON_PROPERTY_STORAGE_ISOLATION = "storageIsolation";
  @javax.annotation.Nullable
  private Isolation storageIsolation;

  public static final String JSON_PROPERTY_SECRET_ISOLATION = "secretIsolation";
  @javax.annotation.Nullable
  private Isolation secretIsolation;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  @javax.annotation.Nonnull
  private String description;

  public static final String JSON_PROPERTY_VARIABLES = "variables";
  @javax.annotation.Nonnull
  private Map<String, Object> variables = new HashMap<>();

  public static final String JSON_PROPERTY_PLUGIN_DEFAULTS = "pluginDefaults";
  @javax.annotation.Nonnull
  private List<PluginDefault> pluginDefaults = new ArrayList<>();

  public static final String JSON_PROPERTY_ALLOWED_NAMESPACES = "allowedNamespaces";
  @javax.annotation.Nonnull
  private List<NamespaceAllowedNamespace> allowedNamespaces = new ArrayList<>();

  public static final String JSON_PROPERTY_WORKER_GROUP = "workerGroup";
  @javax.annotation.Nonnull
  private WorkerGroup workerGroup;

  public static final String JSON_PROPERTY_STORAGE_TYPE = "storageType";
  @javax.annotation.Nullable
  private String storageType;

  public static final String JSON_PROPERTY_STORAGE_CONFIGURATION = "storageConfiguration";
  @javax.annotation.Nullable
  private Map<String, Object> storageConfiguration = new HashMap<>();

  public static final String JSON_PROPERTY_SECRET_TYPE = "secretType";
  @javax.annotation.Nullable
  private String secretType;

  public static final String JSON_PROPERTY_SECRET_READ_ONLY = "secretReadOnly";
  @javax.annotation.Nullable
  private Boolean secretReadOnly;

  public static final String JSON_PROPERTY_SECRET_CONFIGURATION = "secretConfiguration";
  @javax.annotation.Nullable
  private Map<String, Object> secretConfiguration = new HashMap<>();

  public static final String JSON_PROPERTY_OUTPUTS_IN_INTERNAL_STORAGE = "outputsInInternalStorage";
  @javax.annotation.Nullable
  private Boolean outputsInInternalStorage;

  public Namespace() {
  }

  public Namespace id(@javax.annotation.Nonnull String id) {
    
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(@javax.annotation.Nonnull String id) {
    this.id = id;
  }

  public Namespace deleted(@javax.annotation.Nonnull Boolean deleted) {
    
    this.deleted = deleted;
    return this;
  }

  /**
   * Get deleted
   * @return deleted
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DELETED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getDeleted() {
    return deleted;
  }


  @JsonProperty(JSON_PROPERTY_DELETED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDeleted(@javax.annotation.Nonnull Boolean deleted) {
    this.deleted = deleted;
  }

  public Namespace allowedTriggers(@javax.annotation.Nullable List<NamespaceAllowedTrigger> allowedTriggers) {
    
    this.allowedTriggers = allowedTriggers;
    return this;
  }

  public Namespace addAllowedTriggersItem(NamespaceAllowedTrigger allowedTriggersItem) {
    if (this.allowedTriggers == null) {
      this.allowedTriggers = new ArrayList<>();
    }
    this.allowedTriggers.add(allowedTriggersItem);
    return this;
  }

  /**
   * Get allowedTriggers
   * @return allowedTriggers
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ALLOWED_TRIGGERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<NamespaceAllowedTrigger> getAllowedTriggers() {
    return allowedTriggers;
  }


  @JsonProperty(JSON_PROPERTY_ALLOWED_TRIGGERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAllowedTriggers(@javax.annotation.Nullable List<NamespaceAllowedTrigger> allowedTriggers) {
    this.allowedTriggers = allowedTriggers;
  }

  public Namespace storageIsolation(@javax.annotation.Nullable Isolation storageIsolation) {
    
    this.storageIsolation = storageIsolation;
    return this;
  }

  /**
   * Get storageIsolation
   * @return storageIsolation
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STORAGE_ISOLATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Isolation getStorageIsolation() {
    return storageIsolation;
  }


  @JsonProperty(JSON_PROPERTY_STORAGE_ISOLATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStorageIsolation(@javax.annotation.Nullable Isolation storageIsolation) {
    this.storageIsolation = storageIsolation;
  }

  public Namespace secretIsolation(@javax.annotation.Nullable Isolation secretIsolation) {
    
    this.secretIsolation = secretIsolation;
    return this;
  }

  /**
   * Get secretIsolation
   * @return secretIsolation
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SECRET_ISOLATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Isolation getSecretIsolation() {
    return secretIsolation;
  }


  @JsonProperty(JSON_PROPERTY_SECRET_ISOLATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSecretIsolation(@javax.annotation.Nullable Isolation secretIsolation) {
    this.secretIsolation = secretIsolation;
  }

  public Namespace description(@javax.annotation.Nonnull String description) {
    
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDescription(@javax.annotation.Nonnull String description) {
    this.description = description;
  }

  public Namespace variables(@javax.annotation.Nonnull Map<String, Object> variables) {
    
    this.variables = variables;
    return this;
  }

  public Namespace putVariablesItem(String key, Object variablesItem) {
    this.variables.put(key, variablesItem);
    return this;
  }

  /**
   * Get variables
   * @return variables
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_VARIABLES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Map<String, Object> getVariables() {
    return variables;
  }


  @JsonProperty(JSON_PROPERTY_VARIABLES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setVariables(@javax.annotation.Nonnull Map<String, Object> variables) {
    this.variables = variables;
  }

  public Namespace pluginDefaults(@javax.annotation.Nonnull List<PluginDefault> pluginDefaults) {
    
    this.pluginDefaults = pluginDefaults;
    return this;
  }

  public Namespace addPluginDefaultsItem(PluginDefault pluginDefaultsItem) {
    if (this.pluginDefaults == null) {
      this.pluginDefaults = new ArrayList<>();
    }
    this.pluginDefaults.add(pluginDefaultsItem);
    return this;
  }

  /**
   * Get pluginDefaults
   * @return pluginDefaults
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PLUGIN_DEFAULTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<PluginDefault> getPluginDefaults() {
    return pluginDefaults;
  }


  @JsonProperty(JSON_PROPERTY_PLUGIN_DEFAULTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPluginDefaults(@javax.annotation.Nonnull List<PluginDefault> pluginDefaults) {
    this.pluginDefaults = pluginDefaults;
  }

  public Namespace allowedNamespaces(@javax.annotation.Nonnull List<NamespaceAllowedNamespace> allowedNamespaces) {
    
    this.allowedNamespaces = allowedNamespaces;
    return this;
  }

  public Namespace addAllowedNamespacesItem(NamespaceAllowedNamespace allowedNamespacesItem) {
    if (this.allowedNamespaces == null) {
      this.allowedNamespaces = new ArrayList<>();
    }
    this.allowedNamespaces.add(allowedNamespacesItem);
    return this;
  }

  /**
   * Get allowedNamespaces
   * @return allowedNamespaces
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ALLOWED_NAMESPACES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<NamespaceAllowedNamespace> getAllowedNamespaces() {
    return allowedNamespaces;
  }


  @JsonProperty(JSON_PROPERTY_ALLOWED_NAMESPACES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAllowedNamespaces(@javax.annotation.Nonnull List<NamespaceAllowedNamespace> allowedNamespaces) {
    this.allowedNamespaces = allowedNamespaces;
  }

  public Namespace workerGroup(@javax.annotation.Nonnull WorkerGroup workerGroup) {
    
    this.workerGroup = workerGroup;
    return this;
  }

  /**
   * Get workerGroup
   * @return workerGroup
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_WORKER_GROUP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public WorkerGroup getWorkerGroup() {
    return workerGroup;
  }


  @JsonProperty(JSON_PROPERTY_WORKER_GROUP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setWorkerGroup(@javax.annotation.Nonnull WorkerGroup workerGroup) {
    this.workerGroup = workerGroup;
  }

  public Namespace storageType(@javax.annotation.Nullable String storageType) {
    
    this.storageType = storageType;
    return this;
  }

  /**
   * Get storageType
   * @return storageType
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STORAGE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getStorageType() {
    return storageType;
  }


  @JsonProperty(JSON_PROPERTY_STORAGE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStorageType(@javax.annotation.Nullable String storageType) {
    this.storageType = storageType;
  }

  public Namespace storageConfiguration(@javax.annotation.Nullable Map<String, Object> storageConfiguration) {
    
    this.storageConfiguration = storageConfiguration;
    return this;
  }

  public Namespace putStorageConfigurationItem(String key, Object storageConfigurationItem) {
    if (this.storageConfiguration == null) {
      this.storageConfiguration = new HashMap<>();
    }
    this.storageConfiguration.put(key, storageConfigurationItem);
    return this;
  }

  /**
   * Get storageConfiguration
   * @return storageConfiguration
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STORAGE_CONFIGURATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, Object> getStorageConfiguration() {
    return storageConfiguration;
  }


  @JsonProperty(JSON_PROPERTY_STORAGE_CONFIGURATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStorageConfiguration(@javax.annotation.Nullable Map<String, Object> storageConfiguration) {
    this.storageConfiguration = storageConfiguration;
  }

  public Namespace secretType(@javax.annotation.Nullable String secretType) {
    
    this.secretType = secretType;
    return this;
  }

  /**
   * Get secretType
   * @return secretType
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SECRET_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSecretType() {
    return secretType;
  }


  @JsonProperty(JSON_PROPERTY_SECRET_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSecretType(@javax.annotation.Nullable String secretType) {
    this.secretType = secretType;
  }

  public Namespace secretReadOnly(@javax.annotation.Nullable Boolean secretReadOnly) {
    
    this.secretReadOnly = secretReadOnly;
    return this;
  }

  /**
   * Get secretReadOnly
   * @return secretReadOnly
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SECRET_READ_ONLY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getSecretReadOnly() {
    return secretReadOnly;
  }


  @JsonProperty(JSON_PROPERTY_SECRET_READ_ONLY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSecretReadOnly(@javax.annotation.Nullable Boolean secretReadOnly) {
    this.secretReadOnly = secretReadOnly;
  }

  public Namespace secretConfiguration(@javax.annotation.Nullable Map<String, Object> secretConfiguration) {
    
    this.secretConfiguration = secretConfiguration;
    return this;
  }

  public Namespace putSecretConfigurationItem(String key, Object secretConfigurationItem) {
    if (this.secretConfiguration == null) {
      this.secretConfiguration = new HashMap<>();
    }
    this.secretConfiguration.put(key, secretConfigurationItem);
    return this;
  }

  /**
   * Get secretConfiguration
   * @return secretConfiguration
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SECRET_CONFIGURATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, Object> getSecretConfiguration() {
    return secretConfiguration;
  }


  @JsonProperty(JSON_PROPERTY_SECRET_CONFIGURATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSecretConfiguration(@javax.annotation.Nullable Map<String, Object> secretConfiguration) {
    this.secretConfiguration = secretConfiguration;
  }

  public Namespace outputsInInternalStorage(@javax.annotation.Nullable Boolean outputsInInternalStorage) {
    
    this.outputsInInternalStorage = outputsInInternalStorage;
    return this;
  }

  /**
   * Get outputsInInternalStorage
   * @return outputsInInternalStorage
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OUTPUTS_IN_INTERNAL_STORAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getOutputsInInternalStorage() {
    return outputsInInternalStorage;
  }


  @JsonProperty(JSON_PROPERTY_OUTPUTS_IN_INTERNAL_STORAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOutputsInInternalStorage(@javax.annotation.Nullable Boolean outputsInInternalStorage) {
    this.outputsInInternalStorage = outputsInInternalStorage;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Namespace namespace = (Namespace) o;
    return Objects.equals(this.id, namespace.id) &&
        Objects.equals(this.deleted, namespace.deleted) &&
        Objects.equals(this.allowedTriggers, namespace.allowedTriggers) &&
        Objects.equals(this.storageIsolation, namespace.storageIsolation) &&
        Objects.equals(this.secretIsolation, namespace.secretIsolation) &&
        Objects.equals(this.description, namespace.description) &&
        Objects.equals(this.variables, namespace.variables) &&
        Objects.equals(this.pluginDefaults, namespace.pluginDefaults) &&
        Objects.equals(this.allowedNamespaces, namespace.allowedNamespaces) &&
        Objects.equals(this.workerGroup, namespace.workerGroup) &&
        Objects.equals(this.storageType, namespace.storageType) &&
        Objects.equals(this.storageConfiguration, namespace.storageConfiguration) &&
        Objects.equals(this.secretType, namespace.secretType) &&
        Objects.equals(this.secretReadOnly, namespace.secretReadOnly) &&
        Objects.equals(this.secretConfiguration, namespace.secretConfiguration) &&
        Objects.equals(this.outputsInInternalStorage, namespace.outputsInInternalStorage);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, deleted, allowedTriggers, storageIsolation, secretIsolation, description, variables, pluginDefaults, allowedNamespaces, workerGroup, storageType, storageConfiguration, secretType, secretReadOnly, secretConfiguration, outputsInInternalStorage);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Namespace {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    deleted: ").append(toIndentedString(deleted)).append("\n");
    sb.append("    allowedTriggers: ").append(toIndentedString(allowedTriggers)).append("\n");
    sb.append("    storageIsolation: ").append(toIndentedString(storageIsolation)).append("\n");
    sb.append("    secretIsolation: ").append(toIndentedString(secretIsolation)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    variables: ").append(toIndentedString(variables)).append("\n");
    sb.append("    pluginDefaults: ").append(toIndentedString(pluginDefaults)).append("\n");
    sb.append("    allowedNamespaces: ").append(toIndentedString(allowedNamespaces)).append("\n");
    sb.append("    workerGroup: ").append(toIndentedString(workerGroup)).append("\n");
    sb.append("    storageType: ").append(toIndentedString(storageType)).append("\n");
    sb.append("    storageConfiguration: ").append(toIndentedString(storageConfiguration)).append("\n");
    sb.append("    secretType: ").append(toIndentedString(secretType)).append("\n");
    sb.append("    secretReadOnly: ").append(toIndentedString(secretReadOnly)).append("\n");
    sb.append("    secretConfiguration: ").append(toIndentedString(secretConfiguration)).append("\n");
    sb.append("    outputsInInternalStorage: ").append(toIndentedString(outputsInInternalStorage)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

