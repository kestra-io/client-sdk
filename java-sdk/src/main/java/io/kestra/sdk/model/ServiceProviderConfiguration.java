/*
 * Kestra EE
 * All API operations allow an optional tenant identifier in the HTTP path, if you don't use multi-tenancy you must omit the tenant identifier.<br/> This means that, for example, when trying to access the Flows API, instead of using <code>/api/v1/{tenant}/flows</code> you must use <code>/api/v1/flows</code>.
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.kestra.sdk.model;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.util.StringJoiner;

/**
 * ServiceProviderConfiguration
 */
@JsonPropertyOrder({
  ServiceProviderConfiguration.JSON_PROPERTY_SCHEMAS,
  ServiceProviderConfiguration.JSON_PROPERTY_BASE_URN,
  ServiceProviderConfiguration.JSON_PROPERTY_EXTENSIONS,
  ServiceProviderConfiguration.JSON_PROPERTY_META,
  ServiceProviderConfiguration.JSON_PROPERTY_ID,
  ServiceProviderConfiguration.JSON_PROPERTY_EXTERNAL_ID,
  ServiceProviderConfiguration.JSON_PROPERTY_RESOURCE_TYPE,
  ServiceProviderConfiguration.JSON_PROPERTY_DOCUMENTATION_URL,
  ServiceProviderConfiguration.JSON_PROPERTY_PATCH,
  ServiceProviderConfiguration.JSON_PROPERTY_BULK,
  ServiceProviderConfiguration.JSON_PROPERTY_FILTER,
  ServiceProviderConfiguration.JSON_PROPERTY_CHANGE_PASSWORD,
  ServiceProviderConfiguration.JSON_PROPERTY_SORT,
  ServiceProviderConfiguration.JSON_PROPERTY_ETAG,
  ServiceProviderConfiguration.JSON_PROPERTY_AUTHENTICATION_SCHEMES
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-06-05T07:35:23.657005690Z[Etc/UTC]", comments = "Generator version: 7.14.0-SNAPSHOT")
public class ServiceProviderConfiguration {
  public static final String JSON_PROPERTY_SCHEMAS = "schemas";
  @javax.annotation.Nullable
  private List<String> schemas = new ArrayList<>();

  public static final String JSON_PROPERTY_BASE_URN = "baseUrn";
  @javax.annotation.Nullable
  private String baseUrn;

  public static final String JSON_PROPERTY_EXTENSIONS = "extensions";
  @javax.annotation.Nullable
  private Map<String, ScimExtension> extensions = new HashMap<>();

  public static final String JSON_PROPERTY_META = "meta";
  @javax.annotation.Nonnull
  private Meta meta;

  public static final String JSON_PROPERTY_ID = "id";
  @javax.annotation.Nullable
  private String id;

  public static final String JSON_PROPERTY_EXTERNAL_ID = "externalId";
  @javax.annotation.Nullable
  private String externalId;

  public static final String JSON_PROPERTY_RESOURCE_TYPE = "resourceType";
  @javax.annotation.Nonnull
  private String resourceType;

  public static final String JSON_PROPERTY_DOCUMENTATION_URL = "documentationUrl";
  @javax.annotation.Nullable
  private String documentationUrl;

  public static final String JSON_PROPERTY_PATCH = "patch";
  @javax.annotation.Nullable
  private ServiceProviderConfigurationSupportedConfiguration patch;

  public static final String JSON_PROPERTY_BULK = "bulk";
  @javax.annotation.Nullable
  private ServiceProviderConfigurationBulkConfiguration bulk;

  public static final String JSON_PROPERTY_FILTER = "filter";
  @javax.annotation.Nullable
  private ServiceProviderConfigurationFilterConfiguration filter;

  public static final String JSON_PROPERTY_CHANGE_PASSWORD = "changePassword";
  @javax.annotation.Nullable
  private ServiceProviderConfigurationSupportedConfiguration changePassword;

  public static final String JSON_PROPERTY_SORT = "sort";
  @javax.annotation.Nullable
  private ServiceProviderConfigurationSupportedConfiguration sort;

  public static final String JSON_PROPERTY_ETAG = "etag";
  @javax.annotation.Nullable
  private ServiceProviderConfigurationSupportedConfiguration etag;

  public static final String JSON_PROPERTY_AUTHENTICATION_SCHEMES = "authenticationSchemes";
  @javax.annotation.Nullable
  private List<ServiceProviderConfigurationAuthenticationSchema> authenticationSchemes = new ArrayList<>();

  public ServiceProviderConfiguration() {
  }

  public ServiceProviderConfiguration schemas(@javax.annotation.Nullable List<String> schemas) {

    this.schemas = schemas;
    return this;
  }

  public ServiceProviderConfiguration addSchemasItem(String schemasItem) {
    if (this.schemas == null) {
      this.schemas = new ArrayList<>();
    }
    this.schemas.add(schemasItem);
    return this;
  }

  /**
   * Get schemas
   * @return schemas
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SCHEMAS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getSchemas() {
    return schemas;
  }


  @JsonProperty(JSON_PROPERTY_SCHEMAS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSchemas(@javax.annotation.Nullable List<String> schemas) {
    this.schemas = schemas;
  }

  public ServiceProviderConfiguration baseUrn(@javax.annotation.Nullable String baseUrn) {

    this.baseUrn = baseUrn;
    return this;
  }

  /**
   * Get baseUrn
   * @return baseUrn
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BASE_URN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBaseUrn() {
    return baseUrn;
  }


  @JsonProperty(JSON_PROPERTY_BASE_URN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBaseUrn(@javax.annotation.Nullable String baseUrn) {
    this.baseUrn = baseUrn;
  }

  public ServiceProviderConfiguration extensions(@javax.annotation.Nullable Map<String, ScimExtension> extensions) {

    this.extensions = extensions;
    return this;
  }

  public ServiceProviderConfiguration putExtensionsItem(String key, ScimExtension extensionsItem) {
    if (this.extensions == null) {
      this.extensions = new HashMap<>();
    }
    this.extensions.put(key, extensionsItem);
    return this;
  }

  /**
   * Get extensions
   * @return extensions
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXTENSIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, ScimExtension> getExtensions() {
    return extensions;
  }


  @JsonProperty(JSON_PROPERTY_EXTENSIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExtensions(@javax.annotation.Nullable Map<String, ScimExtension> extensions) {
    this.extensions = extensions;
  }

  public ServiceProviderConfiguration meta(@javax.annotation.Nonnull Meta meta) {

    this.meta = meta;
    return this;
  }

  /**
   * Get meta
   * @return meta
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_META)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Meta getMeta() {
    return meta;
  }


  @JsonProperty(JSON_PROPERTY_META)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMeta(@javax.annotation.Nonnull Meta meta) {
    this.meta = meta;
  }

  public ServiceProviderConfiguration id(@javax.annotation.Nullable String id) {

    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(@javax.annotation.Nullable String id) {
    this.id = id;
  }

  public ServiceProviderConfiguration externalId(@javax.annotation.Nullable String externalId) {

    this.externalId = externalId;
    return this;
  }

  /**
   * Get externalId
   * @return externalId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXTERNAL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getExternalId() {
    return externalId;
  }


  @JsonProperty(JSON_PROPERTY_EXTERNAL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExternalId(@javax.annotation.Nullable String externalId) {
    this.externalId = externalId;
  }

  public ServiceProviderConfiguration resourceType(@javax.annotation.Nonnull String resourceType) {

    this.resourceType = resourceType;
    return this;
  }

  /**
   * Get resourceType
   * @return resourceType
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_RESOURCE_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getResourceType() {
    return resourceType;
  }


  @JsonProperty(JSON_PROPERTY_RESOURCE_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setResourceType(@javax.annotation.Nonnull String resourceType) {
    this.resourceType = resourceType;
  }

  public ServiceProviderConfiguration documentationUrl(@javax.annotation.Nullable String documentationUrl) {

    this.documentationUrl = documentationUrl;
    return this;
  }

  /**
   * Get documentationUrl
   * @return documentationUrl
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DOCUMENTATION_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDocumentationUrl() {
    return documentationUrl;
  }


  @JsonProperty(JSON_PROPERTY_DOCUMENTATION_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDocumentationUrl(@javax.annotation.Nullable String documentationUrl) {
    this.documentationUrl = documentationUrl;
  }

  public ServiceProviderConfiguration patch(@javax.annotation.Nullable ServiceProviderConfigurationSupportedConfiguration patch) {

    this.patch = patch;
    return this;
  }

  /**
   * Get patch
   * @return patch
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PATCH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ServiceProviderConfigurationSupportedConfiguration getPatch() {
    return patch;
  }


  @JsonProperty(JSON_PROPERTY_PATCH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPatch(@javax.annotation.Nullable ServiceProviderConfigurationSupportedConfiguration patch) {
    this.patch = patch;
  }

  public ServiceProviderConfiguration bulk(@javax.annotation.Nullable ServiceProviderConfigurationBulkConfiguration bulk) {

    this.bulk = bulk;
    return this;
  }

  /**
   * Get bulk
   * @return bulk
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BULK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ServiceProviderConfigurationBulkConfiguration getBulk() {
    return bulk;
  }


  @JsonProperty(JSON_PROPERTY_BULK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBulk(@javax.annotation.Nullable ServiceProviderConfigurationBulkConfiguration bulk) {
    this.bulk = bulk;
  }

  public ServiceProviderConfiguration filter(@javax.annotation.Nullable ServiceProviderConfigurationFilterConfiguration filter) {

    this.filter = filter;
    return this;
  }

  /**
   * Get filter
   * @return filter
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FILTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ServiceProviderConfigurationFilterConfiguration getFilter() {
    return filter;
  }


  @JsonProperty(JSON_PROPERTY_FILTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFilter(@javax.annotation.Nullable ServiceProviderConfigurationFilterConfiguration filter) {
    this.filter = filter;
  }

  public ServiceProviderConfiguration changePassword(@javax.annotation.Nullable ServiceProviderConfigurationSupportedConfiguration changePassword) {

    this.changePassword = changePassword;
    return this;
  }

  /**
   * Get changePassword
   * @return changePassword
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CHANGE_PASSWORD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ServiceProviderConfigurationSupportedConfiguration getChangePassword() {
    return changePassword;
  }


  @JsonProperty(JSON_PROPERTY_CHANGE_PASSWORD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setChangePassword(@javax.annotation.Nullable ServiceProviderConfigurationSupportedConfiguration changePassword) {
    this.changePassword = changePassword;
  }

  public ServiceProviderConfiguration sort(@javax.annotation.Nullable ServiceProviderConfigurationSupportedConfiguration sort) {

    this.sort = sort;
    return this;
  }

  /**
   * Get sort
   * @return sort
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SORT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ServiceProviderConfigurationSupportedConfiguration getSort() {
    return sort;
  }


  @JsonProperty(JSON_PROPERTY_SORT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSort(@javax.annotation.Nullable ServiceProviderConfigurationSupportedConfiguration sort) {
    this.sort = sort;
  }

  public ServiceProviderConfiguration etag(@javax.annotation.Nullable ServiceProviderConfigurationSupportedConfiguration etag) {

    this.etag = etag;
    return this;
  }

  /**
   * Get etag
   * @return etag
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ETAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ServiceProviderConfigurationSupportedConfiguration getEtag() {
    return etag;
  }


  @JsonProperty(JSON_PROPERTY_ETAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEtag(@javax.annotation.Nullable ServiceProviderConfigurationSupportedConfiguration etag) {
    this.etag = etag;
  }

  public ServiceProviderConfiguration authenticationSchemes(@javax.annotation.Nullable List<ServiceProviderConfigurationAuthenticationSchema> authenticationSchemes) {

    this.authenticationSchemes = authenticationSchemes;
    return this;
  }

  public ServiceProviderConfiguration addAuthenticationSchemesItem(ServiceProviderConfigurationAuthenticationSchema authenticationSchemesItem) {
    if (this.authenticationSchemes == null) {
      this.authenticationSchemes = new ArrayList<>();
    }
    this.authenticationSchemes.add(authenticationSchemesItem);
    return this;
  }

  /**
   * Get authenticationSchemes
   * @return authenticationSchemes
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AUTHENTICATION_SCHEMES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<ServiceProviderConfigurationAuthenticationSchema> getAuthenticationSchemes() {
    return authenticationSchemes;
  }


  @JsonProperty(JSON_PROPERTY_AUTHENTICATION_SCHEMES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAuthenticationSchemes(@javax.annotation.Nullable List<ServiceProviderConfigurationAuthenticationSchema> authenticationSchemes) {
    this.authenticationSchemes = authenticationSchemes;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ServiceProviderConfiguration serviceProviderConfiguration = (ServiceProviderConfiguration) o;
    return Objects.equals(this.schemas, serviceProviderConfiguration.schemas) &&
        Objects.equals(this.baseUrn, serviceProviderConfiguration.baseUrn) &&
        Objects.equals(this.extensions, serviceProviderConfiguration.extensions) &&
        Objects.equals(this.meta, serviceProviderConfiguration.meta) &&
        Objects.equals(this.id, serviceProviderConfiguration.id) &&
        Objects.equals(this.externalId, serviceProviderConfiguration.externalId) &&
        Objects.equals(this.resourceType, serviceProviderConfiguration.resourceType) &&
        Objects.equals(this.documentationUrl, serviceProviderConfiguration.documentationUrl) &&
        Objects.equals(this.patch, serviceProviderConfiguration.patch) &&
        Objects.equals(this.bulk, serviceProviderConfiguration.bulk) &&
        Objects.equals(this.filter, serviceProviderConfiguration.filter) &&
        Objects.equals(this.changePassword, serviceProviderConfiguration.changePassword) &&
        Objects.equals(this.sort, serviceProviderConfiguration.sort) &&
        Objects.equals(this.etag, serviceProviderConfiguration.etag) &&
        Objects.equals(this.authenticationSchemes, serviceProviderConfiguration.authenticationSchemes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(schemas, baseUrn, extensions, meta, id, externalId, resourceType, documentationUrl, patch, bulk, filter, changePassword, sort, etag, authenticationSchemes);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ServiceProviderConfiguration {\n");
    sb.append("    schemas: ").append(toIndentedString(schemas)).append("\n");
    sb.append("    baseUrn: ").append(toIndentedString(baseUrn)).append("\n");
    sb.append("    extensions: ").append(toIndentedString(extensions)).append("\n");
    sb.append("    meta: ").append(toIndentedString(meta)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    externalId: ").append(toIndentedString(externalId)).append("\n");
    sb.append("    resourceType: ").append(toIndentedString(resourceType)).append("\n");
    sb.append("    documentationUrl: ").append(toIndentedString(documentationUrl)).append("\n");
    sb.append("    patch: ").append(toIndentedString(patch)).append("\n");
    sb.append("    bulk: ").append(toIndentedString(bulk)).append("\n");
    sb.append("    filter: ").append(toIndentedString(filter)).append("\n");
    sb.append("    changePassword: ").append(toIndentedString(changePassword)).append("\n");
    sb.append("    sort: ").append(toIndentedString(sort)).append("\n");
    sb.append("    etag: ").append(toIndentedString(etag)).append("\n");
    sb.append("    authenticationSchemes: ").append(toIndentedString(authenticationSchemes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `schemas` to the URL query string
    if (getSchemas() != null) {
      for (int i = 0; i < getSchemas().size(); i++) {
        try {
          joiner.add(String.format("%sschemas%s%s=%s", prefix, suffix,
              "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
              URLEncoder.encode(String.valueOf(getSchemas().get(i)), "UTF-8").replaceAll("\\+", "%20")));
        } catch (UnsupportedEncodingException e) {
          // Should never happen, UTF-8 is always supported
          throw new RuntimeException(e);
        }
      }
    }

    // add `baseUrn` to the URL query string
    if (getBaseUrn() != null) {
      try {
        joiner.add(String.format("%sbaseUrn%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getBaseUrn()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `extensions` to the URL query string
    if (getExtensions() != null) {
      for (String _key : getExtensions().keySet()) {
        if (getExtensions().get(_key) != null) {
          joiner.add(getExtensions().get(_key).toUrlQueryString(String.format("%sextensions%s%s", prefix, suffix,
              "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, _key, containerSuffix))));
        }
      }
    }

    // add `meta` to the URL query string
    if (getMeta() != null) {
      joiner.add(getMeta().toUrlQueryString(prefix + "meta" + suffix));
    }

    // add `id` to the URL query string
    if (getId() != null) {
      try {
        joiner.add(String.format("%sid%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getId()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `externalId` to the URL query string
    if (getExternalId() != null) {
      try {
        joiner.add(String.format("%sexternalId%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getExternalId()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `resourceType` to the URL query string
    if (getResourceType() != null) {
      try {
        joiner.add(String.format("%sresourceType%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getResourceType()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `documentationUrl` to the URL query string
    if (getDocumentationUrl() != null) {
      try {
        joiner.add(String.format("%sdocumentationUrl%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getDocumentationUrl()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `patch` to the URL query string
    if (getPatch() != null) {
      joiner.add(getPatch().toUrlQueryString(prefix + "patch" + suffix));
    }

    // add `bulk` to the URL query string
    if (getBulk() != null) {
      joiner.add(getBulk().toUrlQueryString(prefix + "bulk" + suffix));
    }

    // add `filter` to the URL query string
    if (getFilter() != null) {
      joiner.add(getFilter().toUrlQueryString(prefix + "filter" + suffix));
    }

    // add `changePassword` to the URL query string
    if (getChangePassword() != null) {
      joiner.add(getChangePassword().toUrlQueryString(prefix + "changePassword" + suffix));
    }

    // add `sort` to the URL query string
    if (getSort() != null) {
      joiner.add(getSort().toUrlQueryString(prefix + "sort" + suffix));
    }

    // add `etag` to the URL query string
    if (getEtag() != null) {
      joiner.add(getEtag().toUrlQueryString(prefix + "etag" + suffix));
    }

    // add `authenticationSchemes` to the URL query string
    if (getAuthenticationSchemes() != null) {
      for (int i = 0; i < getAuthenticationSchemes().size(); i++) {
        if (getAuthenticationSchemes().get(i) != null) {
          joiner.add(getAuthenticationSchemes().get(i).toUrlQueryString(String.format("%sauthenticationSchemes%s%s", prefix, suffix,
              "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    return joiner.toString();
  }

}

