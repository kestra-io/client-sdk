/*
 * Kestra EE
 * All API operations, except for Superadmin-only endpoints, require a tenant identifier in the HTTP path.<br/> Endpoints designated as Superadmin-only are not tenant-scoped.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.kestra.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.kestra.sdk.model.HostUsageHardware;
import io.kestra.sdk.model.HostUsageJvm;
import io.kestra.sdk.model.HostUsageOs;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * HostUsage
 */
@JsonPropertyOrder({
  HostUsage.JSON_PROPERTY_UUID,
  HostUsage.JSON_PROPERTY_HARDWARE,
  HostUsage.JSON_PROPERTY_OS,
  HostUsage.JSON_PROPERTY_JVM
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.14.0-SNAPSHOT")
public class HostUsage {
  public static final String JSON_PROPERTY_UUID = "uuid";
  @javax.annotation.Nullable
  private String uuid;

  public static final String JSON_PROPERTY_HARDWARE = "hardware";
  @javax.annotation.Nullable
  private HostUsageHardware hardware;

  public static final String JSON_PROPERTY_OS = "os";
  @javax.annotation.Nullable
  private HostUsageOs os;

  public static final String JSON_PROPERTY_JVM = "jvm";
  @javax.annotation.Nullable
  private HostUsageJvm jvm;

  public HostUsage() {
  }

  public HostUsage uuid(@javax.annotation.Nullable String uuid) {
    
    this.uuid = uuid;
    return this;
  }

  /**
   * Get uuid
   * @return uuid
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UUID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUuid() {
    return uuid;
  }


  @JsonProperty(JSON_PROPERTY_UUID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUuid(@javax.annotation.Nullable String uuid) {
    this.uuid = uuid;
  }

  public HostUsage hardware(@javax.annotation.Nullable HostUsageHardware hardware) {
    
    this.hardware = hardware;
    return this;
  }

  /**
   * Get hardware
   * @return hardware
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HARDWARE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public HostUsageHardware getHardware() {
    return hardware;
  }


  @JsonProperty(JSON_PROPERTY_HARDWARE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHardware(@javax.annotation.Nullable HostUsageHardware hardware) {
    this.hardware = hardware;
  }

  public HostUsage os(@javax.annotation.Nullable HostUsageOs os) {
    
    this.os = os;
    return this;
  }

  /**
   * Get os
   * @return os
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public HostUsageOs getOs() {
    return os;
  }


  @JsonProperty(JSON_PROPERTY_OS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOs(@javax.annotation.Nullable HostUsageOs os) {
    this.os = os;
  }

  public HostUsage jvm(@javax.annotation.Nullable HostUsageJvm jvm) {
    
    this.jvm = jvm;
    return this;
  }

  /**
   * Get jvm
   * @return jvm
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_JVM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public HostUsageJvm getJvm() {
    return jvm;
  }


  @JsonProperty(JSON_PROPERTY_JVM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setJvm(@javax.annotation.Nullable HostUsageJvm jvm) {
    this.jvm = jvm;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    HostUsage hostUsage = (HostUsage) o;
    return Objects.equals(this.uuid, hostUsage.uuid) &&
        Objects.equals(this.hardware, hostUsage.hardware) &&
        Objects.equals(this.os, hostUsage.os) &&
        Objects.equals(this.jvm, hostUsage.jvm);
  }

  @Override
  public int hashCode() {
    return Objects.hash(uuid, hardware, os, jvm);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class HostUsage {\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("    hardware: ").append(toIndentedString(hardware)).append("\n");
    sb.append("    os: ").append(toIndentedString(os)).append("\n");
    sb.append("    jvm: ").append(toIndentedString(jvm)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

