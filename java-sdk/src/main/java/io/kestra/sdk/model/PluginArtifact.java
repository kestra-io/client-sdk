/*
 * Kestra EE
 * All API operations, except for Superadmin-only endpoints, require a tenant identifier in the HTTP path.<br/> Endpoints designated as Superadmin-only are not tenant-scoped.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.kestra.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.net.URI;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * PluginArtifact
 */
@JsonPropertyOrder({
  PluginArtifact.JSON_PROPERTY_GROUP_ID,
  PluginArtifact.JSON_PROPERTY_ARTIFACT_ID,
  PluginArtifact.JSON_PROPERTY_EXTENSION,
  PluginArtifact.JSON_PROPERTY_CLASSIFIER,
  PluginArtifact.JSON_PROPERTY_VERSION,
  PluginArtifact.JSON_PROPERTY_URI
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.16.0-SNAPSHOT")
public class PluginArtifact {
  public static final String JSON_PROPERTY_GROUP_ID = "groupId";
  @javax.annotation.Nonnull
  private String groupId;

  public static final String JSON_PROPERTY_ARTIFACT_ID = "artifactId";
  @javax.annotation.Nonnull
  private String artifactId;

  public static final String JSON_PROPERTY_EXTENSION = "extension";
  @javax.annotation.Nonnull
  private String extension;

  public static final String JSON_PROPERTY_CLASSIFIER = "classifier";
  @javax.annotation.Nonnull
  private String classifier;

  public static final String JSON_PROPERTY_VERSION = "version";
  @javax.annotation.Nonnull
  private String version;

  public static final String JSON_PROPERTY_URI = "uri";
  @javax.annotation.Nonnull
  private URI uri;

  public PluginArtifact() {
  }

  public PluginArtifact groupId(@javax.annotation.Nonnull String groupId) {
    
    this.groupId = groupId;
    return this;
  }

  /**
   * Get groupId
   * @return groupId
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_GROUP_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getGroupId() {
    return groupId;
  }


  @JsonProperty(JSON_PROPERTY_GROUP_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setGroupId(@javax.annotation.Nonnull String groupId) {
    this.groupId = groupId;
  }

  public PluginArtifact artifactId(@javax.annotation.Nonnull String artifactId) {
    
    this.artifactId = artifactId;
    return this;
  }

  /**
   * Get artifactId
   * @return artifactId
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ARTIFACT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getArtifactId() {
    return artifactId;
  }


  @JsonProperty(JSON_PROPERTY_ARTIFACT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setArtifactId(@javax.annotation.Nonnull String artifactId) {
    this.artifactId = artifactId;
  }

  public PluginArtifact extension(@javax.annotation.Nonnull String extension) {
    
    this.extension = extension;
    return this;
  }

  /**
   * Get extension
   * @return extension
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_EXTENSION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getExtension() {
    return extension;
  }


  @JsonProperty(JSON_PROPERTY_EXTENSION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setExtension(@javax.annotation.Nonnull String extension) {
    this.extension = extension;
  }

  public PluginArtifact classifier(@javax.annotation.Nonnull String classifier) {
    
    this.classifier = classifier;
    return this;
  }

  /**
   * Get classifier
   * @return classifier
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CLASSIFIER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getClassifier() {
    return classifier;
  }


  @JsonProperty(JSON_PROPERTY_CLASSIFIER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setClassifier(@javax.annotation.Nonnull String classifier) {
    this.classifier = classifier;
  }

  public PluginArtifact version(@javax.annotation.Nonnull String version) {
    
    this.version = version;
    return this;
  }

  /**
   * Get version
   * @return version
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_VERSION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getVersion() {
    return version;
  }


  @JsonProperty(JSON_PROPERTY_VERSION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setVersion(@javax.annotation.Nonnull String version) {
    this.version = version;
  }

  public PluginArtifact uri(@javax.annotation.Nonnull URI uri) {
    
    this.uri = uri;
    return this;
  }

  /**
   * Get uri
   * @return uri
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_URI)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public URI getUri() {
    return uri;
  }


  @JsonProperty(JSON_PROPERTY_URI)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUri(@javax.annotation.Nonnull URI uri) {
    this.uri = uri;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PluginArtifact pluginArtifact = (PluginArtifact) o;
    return Objects.equals(this.groupId, pluginArtifact.groupId) &&
        Objects.equals(this.artifactId, pluginArtifact.artifactId) &&
        Objects.equals(this.extension, pluginArtifact.extension) &&
        Objects.equals(this.classifier, pluginArtifact.classifier) &&
        Objects.equals(this.version, pluginArtifact.version) &&
        Objects.equals(this.uri, pluginArtifact.uri);
  }

  @Override
  public int hashCode() {
    return Objects.hash(groupId, artifactId, extension, classifier, version, uri);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PluginArtifact {\n");
    sb.append("    groupId: ").append(toIndentedString(groupId)).append("\n");
    sb.append("    artifactId: ").append(toIndentedString(artifactId)).append("\n");
    sb.append("    extension: ").append(toIndentedString(extension)).append("\n");
    sb.append("    classifier: ").append(toIndentedString(classifier)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    uri: ").append(toIndentedString(uri)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

