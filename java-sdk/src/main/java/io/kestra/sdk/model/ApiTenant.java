/*
 * Kestra EE
 * All API operations, except for Superadmin-only endpoints, require a tenant identifier in the HTTP path.<br/> Endpoints designated as Superadmin-only are not tenant-scoped.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.kestra.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.kestra.sdk.model.Isolation;
import io.kestra.sdk.model.WorkerGroup;
import java.util.HashMap;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ApiTenant
 */
@JsonPropertyOrder({
  ApiTenant.JSON_PROPERTY_STORAGE_ISOLATION,
  ApiTenant.JSON_PROPERTY_SECRET_ISOLATION,
  ApiTenant.JSON_PROPERTY_ID,
  ApiTenant.JSON_PROPERTY_NAME,
  ApiTenant.JSON_PROPERTY_DELETED,
  ApiTenant.JSON_PROPERTY_WORKER_GROUP,
  ApiTenant.JSON_PROPERTY_STORAGE_TYPE,
  ApiTenant.JSON_PROPERTY_STORAGE_CONFIGURATION,
  ApiTenant.JSON_PROPERTY_SECRET_TYPE,
  ApiTenant.JSON_PROPERTY_SECRET_READ_ONLY,
  ApiTenant.JSON_PROPERTY_SECRET_CONFIGURATION,
  ApiTenant.JSON_PROPERTY_REQUIRE_EXISTING_NAMESPACE,
  ApiTenant.JSON_PROPERTY_OUTPUTS_IN_INTERNAL_STORAGE,
  ApiTenant.JSON_PROPERTY_LOGO
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.14.0-SNAPSHOT")
public class ApiTenant {
  public static final String JSON_PROPERTY_STORAGE_ISOLATION = "storageIsolation";
  @javax.annotation.Nonnull
  private Isolation storageIsolation;

  public static final String JSON_PROPERTY_SECRET_ISOLATION = "secretIsolation";
  @javax.annotation.Nonnull
  private Isolation secretIsolation;

  public static final String JSON_PROPERTY_ID = "id";
  @javax.annotation.Nonnull
  private String id;

  public static final String JSON_PROPERTY_NAME = "name";
  @javax.annotation.Nonnull
  private String name;

  public static final String JSON_PROPERTY_DELETED = "deleted";
  @javax.annotation.Nonnull
  private Boolean deleted;

  public static final String JSON_PROPERTY_WORKER_GROUP = "workerGroup";
  @javax.annotation.Nonnull
  private WorkerGroup workerGroup;

  public static final String JSON_PROPERTY_STORAGE_TYPE = "storageType";
  @javax.annotation.Nonnull
  private String storageType;

  public static final String JSON_PROPERTY_STORAGE_CONFIGURATION = "storageConfiguration";
  @javax.annotation.Nonnull
  private Map<String, Object> storageConfiguration = new HashMap<>();

  public static final String JSON_PROPERTY_SECRET_TYPE = "secretType";
  @javax.annotation.Nonnull
  private String secretType;

  public static final String JSON_PROPERTY_SECRET_READ_ONLY = "secretReadOnly";
  @javax.annotation.Nonnull
  private Boolean secretReadOnly;

  public static final String JSON_PROPERTY_SECRET_CONFIGURATION = "secretConfiguration";
  @javax.annotation.Nonnull
  private Map<String, Object> secretConfiguration = new HashMap<>();

  public static final String JSON_PROPERTY_REQUIRE_EXISTING_NAMESPACE = "requireExistingNamespace";
  @javax.annotation.Nonnull
  private Boolean requireExistingNamespace;

  public static final String JSON_PROPERTY_OUTPUTS_IN_INTERNAL_STORAGE = "outputsInInternalStorage";
  @javax.annotation.Nonnull
  private Boolean outputsInInternalStorage;

  public static final String JSON_PROPERTY_LOGO = "logo";
  @javax.annotation.Nonnull
  private String logo;

  public ApiTenant() {
  }

  public ApiTenant storageIsolation(@javax.annotation.Nonnull Isolation storageIsolation) {
    
    this.storageIsolation = storageIsolation;
    return this;
  }

  /**
   * Get storageIsolation
   * @return storageIsolation
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_STORAGE_ISOLATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Isolation getStorageIsolation() {
    return storageIsolation;
  }


  @JsonProperty(JSON_PROPERTY_STORAGE_ISOLATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStorageIsolation(@javax.annotation.Nonnull Isolation storageIsolation) {
    this.storageIsolation = storageIsolation;
  }

  public ApiTenant secretIsolation(@javax.annotation.Nonnull Isolation secretIsolation) {
    
    this.secretIsolation = secretIsolation;
    return this;
  }

  /**
   * Get secretIsolation
   * @return secretIsolation
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SECRET_ISOLATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Isolation getSecretIsolation() {
    return secretIsolation;
  }


  @JsonProperty(JSON_PROPERTY_SECRET_ISOLATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSecretIsolation(@javax.annotation.Nonnull Isolation secretIsolation) {
    this.secretIsolation = secretIsolation;
  }

  public ApiTenant id(@javax.annotation.Nonnull String id) {
    
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(@javax.annotation.Nonnull String id) {
    this.id = id;
  }

  public ApiTenant name(@javax.annotation.Nonnull String name) {
    
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(@javax.annotation.Nonnull String name) {
    this.name = name;
  }

  public ApiTenant deleted(@javax.annotation.Nonnull Boolean deleted) {
    
    this.deleted = deleted;
    return this;
  }

  /**
   * Get deleted
   * @return deleted
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DELETED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getDeleted() {
    return deleted;
  }


  @JsonProperty(JSON_PROPERTY_DELETED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDeleted(@javax.annotation.Nonnull Boolean deleted) {
    this.deleted = deleted;
  }

  public ApiTenant workerGroup(@javax.annotation.Nonnull WorkerGroup workerGroup) {
    
    this.workerGroup = workerGroup;
    return this;
  }

  /**
   * Get workerGroup
   * @return workerGroup
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_WORKER_GROUP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public WorkerGroup getWorkerGroup() {
    return workerGroup;
  }


  @JsonProperty(JSON_PROPERTY_WORKER_GROUP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setWorkerGroup(@javax.annotation.Nonnull WorkerGroup workerGroup) {
    this.workerGroup = workerGroup;
  }

  public ApiTenant storageType(@javax.annotation.Nonnull String storageType) {
    
    this.storageType = storageType;
    return this;
  }

  /**
   * Get storageType
   * @return storageType
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_STORAGE_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getStorageType() {
    return storageType;
  }


  @JsonProperty(JSON_PROPERTY_STORAGE_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStorageType(@javax.annotation.Nonnull String storageType) {
    this.storageType = storageType;
  }

  public ApiTenant storageConfiguration(@javax.annotation.Nonnull Map<String, Object> storageConfiguration) {
    
    this.storageConfiguration = storageConfiguration;
    return this;
  }

  public ApiTenant putStorageConfigurationItem(String key, Object storageConfigurationItem) {
    this.storageConfiguration.put(key, storageConfigurationItem);
    return this;
  }

  /**
   * Get storageConfiguration
   * @return storageConfiguration
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_STORAGE_CONFIGURATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Map<String, Object> getStorageConfiguration() {
    return storageConfiguration;
  }


  @JsonProperty(JSON_PROPERTY_STORAGE_CONFIGURATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStorageConfiguration(@javax.annotation.Nonnull Map<String, Object> storageConfiguration) {
    this.storageConfiguration = storageConfiguration;
  }

  public ApiTenant secretType(@javax.annotation.Nonnull String secretType) {
    
    this.secretType = secretType;
    return this;
  }

  /**
   * Get secretType
   * @return secretType
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SECRET_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getSecretType() {
    return secretType;
  }


  @JsonProperty(JSON_PROPERTY_SECRET_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSecretType(@javax.annotation.Nonnull String secretType) {
    this.secretType = secretType;
  }

  public ApiTenant secretReadOnly(@javax.annotation.Nonnull Boolean secretReadOnly) {
    
    this.secretReadOnly = secretReadOnly;
    return this;
  }

  /**
   * Get secretReadOnly
   * @return secretReadOnly
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SECRET_READ_ONLY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getSecretReadOnly() {
    return secretReadOnly;
  }


  @JsonProperty(JSON_PROPERTY_SECRET_READ_ONLY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSecretReadOnly(@javax.annotation.Nonnull Boolean secretReadOnly) {
    this.secretReadOnly = secretReadOnly;
  }

  public ApiTenant secretConfiguration(@javax.annotation.Nonnull Map<String, Object> secretConfiguration) {
    
    this.secretConfiguration = secretConfiguration;
    return this;
  }

  public ApiTenant putSecretConfigurationItem(String key, Object secretConfigurationItem) {
    this.secretConfiguration.put(key, secretConfigurationItem);
    return this;
  }

  /**
   * Get secretConfiguration
   * @return secretConfiguration
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SECRET_CONFIGURATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Map<String, Object> getSecretConfiguration() {
    return secretConfiguration;
  }


  @JsonProperty(JSON_PROPERTY_SECRET_CONFIGURATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSecretConfiguration(@javax.annotation.Nonnull Map<String, Object> secretConfiguration) {
    this.secretConfiguration = secretConfiguration;
  }

  public ApiTenant requireExistingNamespace(@javax.annotation.Nonnull Boolean requireExistingNamespace) {
    
    this.requireExistingNamespace = requireExistingNamespace;
    return this;
  }

  /**
   * Get requireExistingNamespace
   * @return requireExistingNamespace
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_REQUIRE_EXISTING_NAMESPACE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getRequireExistingNamespace() {
    return requireExistingNamespace;
  }


  @JsonProperty(JSON_PROPERTY_REQUIRE_EXISTING_NAMESPACE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRequireExistingNamespace(@javax.annotation.Nonnull Boolean requireExistingNamespace) {
    this.requireExistingNamespace = requireExistingNamespace;
  }

  public ApiTenant outputsInInternalStorage(@javax.annotation.Nonnull Boolean outputsInInternalStorage) {
    
    this.outputsInInternalStorage = outputsInInternalStorage;
    return this;
  }

  /**
   * Get outputsInInternalStorage
   * @return outputsInInternalStorage
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_OUTPUTS_IN_INTERNAL_STORAGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getOutputsInInternalStorage() {
    return outputsInInternalStorage;
  }


  @JsonProperty(JSON_PROPERTY_OUTPUTS_IN_INTERNAL_STORAGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setOutputsInInternalStorage(@javax.annotation.Nonnull Boolean outputsInInternalStorage) {
    this.outputsInInternalStorage = outputsInInternalStorage;
  }

  public ApiTenant logo(@javax.annotation.Nonnull String logo) {
    
    this.logo = logo;
    return this;
  }

  /**
   * Get logo
   * @return logo
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_LOGO)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getLogo() {
    return logo;
  }


  @JsonProperty(JSON_PROPERTY_LOGO)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLogo(@javax.annotation.Nonnull String logo) {
    this.logo = logo;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApiTenant apiTenant = (ApiTenant) o;
    return Objects.equals(this.storageIsolation, apiTenant.storageIsolation) &&
        Objects.equals(this.secretIsolation, apiTenant.secretIsolation) &&
        Objects.equals(this.id, apiTenant.id) &&
        Objects.equals(this.name, apiTenant.name) &&
        Objects.equals(this.deleted, apiTenant.deleted) &&
        Objects.equals(this.workerGroup, apiTenant.workerGroup) &&
        Objects.equals(this.storageType, apiTenant.storageType) &&
        Objects.equals(this.storageConfiguration, apiTenant.storageConfiguration) &&
        Objects.equals(this.secretType, apiTenant.secretType) &&
        Objects.equals(this.secretReadOnly, apiTenant.secretReadOnly) &&
        Objects.equals(this.secretConfiguration, apiTenant.secretConfiguration) &&
        Objects.equals(this.requireExistingNamespace, apiTenant.requireExistingNamespace) &&
        Objects.equals(this.outputsInInternalStorage, apiTenant.outputsInInternalStorage) &&
        Objects.equals(this.logo, apiTenant.logo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(storageIsolation, secretIsolation, id, name, deleted, workerGroup, storageType, storageConfiguration, secretType, secretReadOnly, secretConfiguration, requireExistingNamespace, outputsInInternalStorage, logo);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApiTenant {\n");
    sb.append("    storageIsolation: ").append(toIndentedString(storageIsolation)).append("\n");
    sb.append("    secretIsolation: ").append(toIndentedString(secretIsolation)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    deleted: ").append(toIndentedString(deleted)).append("\n");
    sb.append("    workerGroup: ").append(toIndentedString(workerGroup)).append("\n");
    sb.append("    storageType: ").append(toIndentedString(storageType)).append("\n");
    sb.append("    storageConfiguration: ").append(toIndentedString(storageConfiguration)).append("\n");
    sb.append("    secretType: ").append(toIndentedString(secretType)).append("\n");
    sb.append("    secretReadOnly: ").append(toIndentedString(secretReadOnly)).append("\n");
    sb.append("    secretConfiguration: ").append(toIndentedString(secretConfiguration)).append("\n");
    sb.append("    requireExistingNamespace: ").append(toIndentedString(requireExistingNamespace)).append("\n");
    sb.append("    outputsInInternalStorage: ").append(toIndentedString(outputsInInternalStorage)).append("\n");
    sb.append("    logo: ").append(toIndentedString(logo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

