/*
 * Kestra EE
 * All API operations, except for Superadmin-only endpoints, require a tenant identifier in the HTTP path.<br/> Endpoints designated as Superadmin-only are not tenant-scoped.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.kestra.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Locale;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ApiToken
 */
@JsonPropertyOrder({
  ApiToken.JSON_PROPERTY_ID,
  ApiToken.JSON_PROPERTY_NAME,
  ApiToken.JSON_PROPERTY_DESCRIPTION,
  ApiToken.JSON_PROPERTY_PREFIX,
  ApiToken.JSON_PROPERTY_IAT,
  ApiToken.JSON_PROPERTY_EXP,
  ApiToken.JSON_PROPERTY_LAST_USED,
  ApiToken.JSON_PROPERTY_EXTENDED,
  ApiToken.JSON_PROPERTY_EXPIRED
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.16.0")
public class ApiToken {
  public static final String JSON_PROPERTY_ID = "id";
  @javax.annotation.Nullable
  private String id;

  public static final String JSON_PROPERTY_NAME = "name";
  @javax.annotation.Nullable
  private String name;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  @javax.annotation.Nullable
  private String description;

  public static final String JSON_PROPERTY_PREFIX = "prefix";
  @javax.annotation.Nullable
  private String prefix;

  public static final String JSON_PROPERTY_IAT = "iat";
  @javax.annotation.Nullable
  private OffsetDateTime iat;

  public static final String JSON_PROPERTY_EXP = "exp";
  @javax.annotation.Nullable
  private OffsetDateTime exp;

  public static final String JSON_PROPERTY_LAST_USED = "lastUsed";
  @javax.annotation.Nullable
  private OffsetDateTime lastUsed;

  public static final String JSON_PROPERTY_EXTENDED = "extended";
  @javax.annotation.Nullable
  private Boolean extended;

  public static final String JSON_PROPERTY_EXPIRED = "expired";
  @javax.annotation.Nullable
  private Boolean expired;

  public ApiToken() {
  }

  public ApiToken id(@javax.annotation.Nullable String id) {
    
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_ID, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(value = JSON_PROPERTY_ID, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(@javax.annotation.Nullable String id) {
    this.id = id;
  }

  public ApiToken name(@javax.annotation.Nullable String name) {
    
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_NAME, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(value = JSON_PROPERTY_NAME, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(@javax.annotation.Nullable String name) {
    this.name = name;
  }

  public ApiToken description(@javax.annotation.Nullable String description) {
    
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_DESCRIPTION, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(value = JSON_PROPERTY_DESCRIPTION, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(@javax.annotation.Nullable String description) {
    this.description = description;
  }

  public ApiToken prefix(@javax.annotation.Nullable String prefix) {
    
    this.prefix = prefix;
    return this;
  }

  /**
   * Get prefix
   * @return prefix
   */
  @javax.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_PREFIX, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPrefix() {
    return prefix;
  }


  @JsonProperty(value = JSON_PROPERTY_PREFIX, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPrefix(@javax.annotation.Nullable String prefix) {
    this.prefix = prefix;
  }

  public ApiToken iat(@javax.annotation.Nullable OffsetDateTime iat) {
    
    this.iat = iat;
    return this;
  }

  /**
   * Get iat
   * @return iat
   */
  @javax.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_IAT, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getIat() {
    return iat;
  }


  @JsonProperty(value = JSON_PROPERTY_IAT, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIat(@javax.annotation.Nullable OffsetDateTime iat) {
    this.iat = iat;
  }

  public ApiToken exp(@javax.annotation.Nullable OffsetDateTime exp) {
    
    this.exp = exp;
    return this;
  }

  /**
   * Get exp
   * @return exp
   */
  @javax.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_EXP, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getExp() {
    return exp;
  }


  @JsonProperty(value = JSON_PROPERTY_EXP, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExp(@javax.annotation.Nullable OffsetDateTime exp) {
    this.exp = exp;
  }

  public ApiToken lastUsed(@javax.annotation.Nullable OffsetDateTime lastUsed) {
    
    this.lastUsed = lastUsed;
    return this;
  }

  /**
   * Get lastUsed
   * @return lastUsed
   */
  @javax.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_LAST_USED, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getLastUsed() {
    return lastUsed;
  }


  @JsonProperty(value = JSON_PROPERTY_LAST_USED, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLastUsed(@javax.annotation.Nullable OffsetDateTime lastUsed) {
    this.lastUsed = lastUsed;
  }

  public ApiToken extended(@javax.annotation.Nullable Boolean extended) {
    
    this.extended = extended;
    return this;
  }

  /**
   * Get extended
   * @return extended
   */
  @javax.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_EXTENDED, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getExtended() {
    return extended;
  }


  @JsonProperty(value = JSON_PROPERTY_EXTENDED, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExtended(@javax.annotation.Nullable Boolean extended) {
    this.extended = extended;
  }

  public ApiToken expired(@javax.annotation.Nullable Boolean expired) {
    
    this.expired = expired;
    return this;
  }

  /**
   * Get expired
   * @return expired
   */
  @javax.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_EXPIRED, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getExpired() {
    return expired;
  }


  @JsonProperty(value = JSON_PROPERTY_EXPIRED, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExpired(@javax.annotation.Nullable Boolean expired) {
    this.expired = expired;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApiToken apiToken = (ApiToken) o;
    return Objects.equals(this.id, apiToken.id) &&
        Objects.equals(this.name, apiToken.name) &&
        Objects.equals(this.description, apiToken.description) &&
        Objects.equals(this.prefix, apiToken.prefix) &&
        Objects.equals(this.iat, apiToken.iat) &&
        Objects.equals(this.exp, apiToken.exp) &&
        Objects.equals(this.lastUsed, apiToken.lastUsed) &&
        Objects.equals(this.extended, apiToken.extended) &&
        Objects.equals(this.expired, apiToken.expired);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, description, prefix, iat, exp, lastUsed, extended, expired);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApiToken {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    prefix: ").append(toIndentedString(prefix)).append("\n");
    sb.append("    iat: ").append(toIndentedString(iat)).append("\n");
    sb.append("    exp: ").append(toIndentedString(exp)).append("\n");
    sb.append("    lastUsed: ").append(toIndentedString(lastUsed)).append("\n");
    sb.append("    extended: ").append(toIndentedString(extended)).append("\n");
    sb.append("    expired: ").append(toIndentedString(expired)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

