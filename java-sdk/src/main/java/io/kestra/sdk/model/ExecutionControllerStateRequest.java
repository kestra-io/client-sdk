/*
 * Kestra EE
 * All API operations, except for Superadmin-only endpoints, require a tenant identifier in the HTTP path.<br/> Endpoints designated as Superadmin-only are not tenant-scoped.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.kestra.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.kestra.sdk.model.StateType;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.util.StringJoiner;

/**
 * ExecutionControllerStateRequest
 */
@JsonPropertyOrder({
  ExecutionControllerStateRequest.JSON_PROPERTY_TASK_RUN_ID,
  ExecutionControllerStateRequest.JSON_PROPERTY_STATE
})
@JsonTypeName("ExecutionController.StateRequest")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-14T16:34:14.833468251Z[Etc/UTC]", comments = "Generator version: 7.14.0-SNAPSHOT")
public class ExecutionControllerStateRequest {
  public static final String JSON_PROPERTY_TASK_RUN_ID = "taskRunId";
  @javax.annotation.Nullable
  private String taskRunId;

  public static final String JSON_PROPERTY_STATE = "state";
  @javax.annotation.Nullable
  private StateType state;

  public ExecutionControllerStateRequest() {
  }

  public ExecutionControllerStateRequest taskRunId(@javax.annotation.Nullable String taskRunId) {
    
    this.taskRunId = taskRunId;
    return this;
  }

  /**
   * Get taskRunId
   * @return taskRunId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TASK_RUN_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTaskRunId() {
    return taskRunId;
  }


  @JsonProperty(JSON_PROPERTY_TASK_RUN_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTaskRunId(@javax.annotation.Nullable String taskRunId) {
    this.taskRunId = taskRunId;
  }

  public ExecutionControllerStateRequest state(@javax.annotation.Nullable StateType state) {
    
    this.state = state;
    return this;
  }

  /**
   * Get state
   * @return state
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public StateType getState() {
    return state;
  }


  @JsonProperty(JSON_PROPERTY_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setState(@javax.annotation.Nullable StateType state) {
    this.state = state;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExecutionControllerStateRequest executionControllerStateRequest = (ExecutionControllerStateRequest) o;
    return Objects.equals(this.taskRunId, executionControllerStateRequest.taskRunId) &&
        Objects.equals(this.state, executionControllerStateRequest.state);
  }

  @Override
  public int hashCode() {
    return Objects.hash(taskRunId, state);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExecutionControllerStateRequest {\n");
    sb.append("    taskRunId: ").append(toIndentedString(taskRunId)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `taskRunId` to the URL query string
    if (getTaskRunId() != null) {
      try {
        joiner.add(String.format("%staskRunId%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getTaskRunId()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `state` to the URL query string
    if (getState() != null) {
      try {
        joiner.add(String.format("%sstate%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getState()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    return joiner.toString();
  }

}

