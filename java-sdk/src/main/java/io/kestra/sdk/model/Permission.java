/*
 * Kestra EE
 * All API operations, except for Superadmin-only endpoints, require a tenant identifier in the HTTP path.<br/> Endpoints designated as Superadmin-only are not tenant-scoped.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.kestra.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.util.StringJoiner;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

/**
 * Gets or Sets Permission
 */
public enum Permission {
  
  FLOW("FLOW"),
  
  BLUEPRINT("BLUEPRINT"),
  
  TEMPLATE("TEMPLATE"),
  
  NAMESPACE("NAMESPACE"),
  
  EXECUTION("EXECUTION"),
  
  USER("USER"),
  
  GROUP("GROUP"),
  
  ROLE("ROLE"),
  
  BINDING("BINDING"),
  
  AUDITLOG("AUDITLOG"),
  
  SECRET("SECRET"),
  
  KVSTORE("KVSTORE"),
  
  IMPERSONATE("IMPERSONATE"),
  
  SETTING("SETTING"),
  
  INFRASTRUCTURE("INFRASTRUCTURE"),
  
  APP("APP"),
  
  APPEXECUTION("APPEXECUTION"),
  
  TEST("TEST"),
  
  DASHBOARD("DASHBOARD"),
  
  TENANT_ACCESS("TENANT_ACCESS"),
  
  SERVICE_ACCOUNT("SERVICE_ACCOUNT"),
  
  INVITATION("INVITATION"),
  
  GROUP_MEMBERSHIP("GROUP_MEMBERSHIP"),
  
  UNKNOWN("UNKNOWN");

  private String value;

  Permission(String value) {
    this.value = value;
  }

  @JsonValue
  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  @JsonCreator
  public static Permission fromValue(String value) {
    for (Permission b : Permission.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    if (prefix == null) {
      prefix = "";
    }

    return String.format("%s=%s", prefix, this.toString());
  }
}

