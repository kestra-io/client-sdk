/*
 * Kestra EE
 * All API operations allow an optional tenant identifier in the HTTP path, if you don't use multi-tenancy you must omit the tenant identifier.<br/> This means that, for example, when trying to access the Flows API, instead of using <code>/api/v1/{tenant}/flows</code> you must use <code>/api/v1/flows</code>.
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.kestra.sdk.model;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import java.util.StringJoiner;

/**
 * ExecutionUsage
 */
@JsonPropertyOrder({
  ExecutionUsage.JSON_PROPERTY_DAILY_EXECUTIONS_COUNT,
  ExecutionUsage.JSON_PROPERTY_DAILY_TASK_RUNS_COUNT
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-06-05T07:35:23.657005690Z[Etc/UTC]", comments = "Generator version: 7.14.0-SNAPSHOT")
public class ExecutionUsage {
  public static final String JSON_PROPERTY_DAILY_EXECUTIONS_COUNT = "dailyExecutionsCount";
  @javax.annotation.Nullable
  private List<DailyExecutionStatistics> dailyExecutionsCount = new ArrayList<>();

  public static final String JSON_PROPERTY_DAILY_TASK_RUNS_COUNT = "dailyTaskRunsCount";
  @javax.annotation.Nullable
  private List<DailyExecutionStatistics> dailyTaskRunsCount = new ArrayList<>();

  public ExecutionUsage() {
  }

  public ExecutionUsage dailyExecutionsCount(@javax.annotation.Nullable List<DailyExecutionStatistics> dailyExecutionsCount) {

    this.dailyExecutionsCount = dailyExecutionsCount;
    return this;
  }

  public ExecutionUsage addDailyExecutionsCountItem(DailyExecutionStatistics dailyExecutionsCountItem) {
    if (this.dailyExecutionsCount == null) {
      this.dailyExecutionsCount = new ArrayList<>();
    }
    this.dailyExecutionsCount.add(dailyExecutionsCountItem);
    return this;
  }

  /**
   * Get dailyExecutionsCount
   * @return dailyExecutionsCount
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DAILY_EXECUTIONS_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<DailyExecutionStatistics> getDailyExecutionsCount() {
    return dailyExecutionsCount;
  }


  @JsonProperty(JSON_PROPERTY_DAILY_EXECUTIONS_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDailyExecutionsCount(@javax.annotation.Nullable List<DailyExecutionStatistics> dailyExecutionsCount) {
    this.dailyExecutionsCount = dailyExecutionsCount;
  }

  public ExecutionUsage dailyTaskRunsCount(@javax.annotation.Nullable List<DailyExecutionStatistics> dailyTaskRunsCount) {

    this.dailyTaskRunsCount = dailyTaskRunsCount;
    return this;
  }

  public ExecutionUsage addDailyTaskRunsCountItem(DailyExecutionStatistics dailyTaskRunsCountItem) {
    if (this.dailyTaskRunsCount == null) {
      this.dailyTaskRunsCount = new ArrayList<>();
    }
    this.dailyTaskRunsCount.add(dailyTaskRunsCountItem);
    return this;
  }

  /**
   * Get dailyTaskRunsCount
   * @return dailyTaskRunsCount
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DAILY_TASK_RUNS_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<DailyExecutionStatistics> getDailyTaskRunsCount() {
    return dailyTaskRunsCount;
  }


  @JsonProperty(JSON_PROPERTY_DAILY_TASK_RUNS_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDailyTaskRunsCount(@javax.annotation.Nullable List<DailyExecutionStatistics> dailyTaskRunsCount) {
    this.dailyTaskRunsCount = dailyTaskRunsCount;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExecutionUsage executionUsage = (ExecutionUsage) o;
    return Objects.equals(this.dailyExecutionsCount, executionUsage.dailyExecutionsCount) &&
        Objects.equals(this.dailyTaskRunsCount, executionUsage.dailyTaskRunsCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dailyExecutionsCount, dailyTaskRunsCount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExecutionUsage {\n");
    sb.append("    dailyExecutionsCount: ").append(toIndentedString(dailyExecutionsCount)).append("\n");
    sb.append("    dailyTaskRunsCount: ").append(toIndentedString(dailyTaskRunsCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `dailyExecutionsCount` to the URL query string
    if (getDailyExecutionsCount() != null) {
      for (int i = 0; i < getDailyExecutionsCount().size(); i++) {
        if (getDailyExecutionsCount().get(i) != null) {
          joiner.add(getDailyExecutionsCount().get(i).toUrlQueryString(String.format("%sdailyExecutionsCount%s%s", prefix, suffix,
              "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `dailyTaskRunsCount` to the URL query string
    if (getDailyTaskRunsCount() != null) {
      for (int i = 0; i < getDailyTaskRunsCount().size(); i++) {
        if (getDailyTaskRunsCount().get(i) != null) {
          joiner.add(getDailyTaskRunsCount().get(i).toUrlQueryString(String.format("%sdailyTaskRunsCount%s%s", prefix, suffix,
              "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    return joiner.toString();
  }

}

