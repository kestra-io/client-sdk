/*
 * Kestra EE
 * All API operations, except for Superadmin-only endpoints, require a tenant identifier in the HTTP path.<br/> Endpoints designated as Superadmin-only are not tenant-scoped.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.kestra.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Locale;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.kestra.sdk.model.AuditLogDetail;
import io.kestra.sdk.model.CrudEventType;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * AuditLog
 */
@JsonPropertyOrder({
  AuditLog.JSON_PROPERTY_TENANT_ID,
  AuditLog.JSON_PROPERTY_ID,
  AuditLog.JSON_PROPERTY_TYPE,
  AuditLog.JSON_PROPERTY_DETAIL,
  AuditLog.JSON_PROPERTY_DATE,
  AuditLog.JSON_PROPERTY_USER_ID,
  AuditLog.JSON_PROPERTY_IP_ADDRESS,
  AuditLog.JSON_PROPERTY_IMPERSONATED_BY,
  AuditLog.JSON_PROPERTY_DELETED,
  AuditLog.JSON_PROPERTY_APPLIED_PATCH,
  AuditLog.JSON_PROPERTY_REVERT_PATCH
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.16.0")
public class AuditLog {
  public static final String JSON_PROPERTY_TENANT_ID = "tenantId";
  @javax.annotation.Nullable
  private String tenantId;

  public static final String JSON_PROPERTY_ID = "id";
  @javax.annotation.Nonnull
  private String id;

  public static final String JSON_PROPERTY_TYPE = "type";
  @javax.annotation.Nonnull
  private CrudEventType type;

  public static final String JSON_PROPERTY_DETAIL = "detail";
  @javax.annotation.Nonnull
  private AuditLogDetail detail;

  public static final String JSON_PROPERTY_DATE = "date";
  @javax.annotation.Nonnull
  private OffsetDateTime date;

  public static final String JSON_PROPERTY_USER_ID = "userId";
  @javax.annotation.Nonnull
  private String userId;

  public static final String JSON_PROPERTY_IP_ADDRESS = "ipAddress";
  @javax.annotation.Nullable
  private String ipAddress;

  public static final String JSON_PROPERTY_IMPERSONATED_BY = "impersonatedBy";
  @javax.annotation.Nullable
  private String impersonatedBy;

  public static final String JSON_PROPERTY_DELETED = "deleted";
  @javax.annotation.Nullable
  private Boolean deleted;

  public static final String JSON_PROPERTY_APPLIED_PATCH = "appliedPatch";
  @javax.annotation.Nullable
  private List<Object> appliedPatch = new ArrayList<>();

  public static final String JSON_PROPERTY_REVERT_PATCH = "revertPatch";
  @javax.annotation.Nullable
  private List<Object> revertPatch = new ArrayList<>();

  public AuditLog() {
  }

  public AuditLog tenantId(@javax.annotation.Nullable String tenantId) {
    
    this.tenantId = tenantId;
    return this;
  }

  /**
   * Get tenantId
   * @return tenantId
   */
  @javax.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_TENANT_ID, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTenantId() {
    return tenantId;
  }


  @JsonProperty(value = JSON_PROPERTY_TENANT_ID, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTenantId(@javax.annotation.Nullable String tenantId) {
    this.tenantId = tenantId;
  }

  public AuditLog id(@javax.annotation.Nonnull String id) {
    
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nonnull
  @JsonProperty(value = JSON_PROPERTY_ID, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getId() {
    return id;
  }


  @JsonProperty(value = JSON_PROPERTY_ID, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(@javax.annotation.Nonnull String id) {
    this.id = id;
  }

  public AuditLog type(@javax.annotation.Nonnull CrudEventType type) {
    
    this.type = type;
    return this;
  }

  /**
   * Get type
   * @return type
   */
  @javax.annotation.Nonnull
  @JsonProperty(value = JSON_PROPERTY_TYPE, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public CrudEventType getType() {
    return type;
  }


  @JsonProperty(value = JSON_PROPERTY_TYPE, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setType(@javax.annotation.Nonnull CrudEventType type) {
    this.type = type;
  }

  public AuditLog detail(@javax.annotation.Nonnull AuditLogDetail detail) {
    
    this.detail = detail;
    return this;
  }

  /**
   * Get detail
   * @return detail
   */
  @javax.annotation.Nonnull
  @JsonProperty(value = JSON_PROPERTY_DETAIL, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public AuditLogDetail getDetail() {
    return detail;
  }


  @JsonProperty(value = JSON_PROPERTY_DETAIL, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDetail(@javax.annotation.Nonnull AuditLogDetail detail) {
    this.detail = detail;
  }

  public AuditLog date(@javax.annotation.Nonnull OffsetDateTime date) {
    
    this.date = date;
    return this;
  }

  /**
   * Get date
   * @return date
   */
  @javax.annotation.Nonnull
  @JsonProperty(value = JSON_PROPERTY_DATE, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getDate() {
    return date;
  }


  @JsonProperty(value = JSON_PROPERTY_DATE, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDate(@javax.annotation.Nonnull OffsetDateTime date) {
    this.date = date;
  }

  public AuditLog userId(@javax.annotation.Nonnull String userId) {
    
    this.userId = userId;
    return this;
  }

  /**
   * Get userId
   * @return userId
   */
  @javax.annotation.Nonnull
  @JsonProperty(value = JSON_PROPERTY_USER_ID, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getUserId() {
    return userId;
  }


  @JsonProperty(value = JSON_PROPERTY_USER_ID, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUserId(@javax.annotation.Nonnull String userId) {
    this.userId = userId;
  }

  public AuditLog ipAddress(@javax.annotation.Nullable String ipAddress) {
    
    this.ipAddress = ipAddress;
    return this;
  }

  /**
   * Get ipAddress
   * @return ipAddress
   */
  @javax.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_IP_ADDRESS, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getIpAddress() {
    return ipAddress;
  }


  @JsonProperty(value = JSON_PROPERTY_IP_ADDRESS, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIpAddress(@javax.annotation.Nullable String ipAddress) {
    this.ipAddress = ipAddress;
  }

  public AuditLog impersonatedBy(@javax.annotation.Nullable String impersonatedBy) {
    
    this.impersonatedBy = impersonatedBy;
    return this;
  }

  /**
   * Get impersonatedBy
   * @return impersonatedBy
   */
  @javax.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_IMPERSONATED_BY, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getImpersonatedBy() {
    return impersonatedBy;
  }


  @JsonProperty(value = JSON_PROPERTY_IMPERSONATED_BY, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setImpersonatedBy(@javax.annotation.Nullable String impersonatedBy) {
    this.impersonatedBy = impersonatedBy;
  }

  public AuditLog deleted(@javax.annotation.Nullable Boolean deleted) {
    
    this.deleted = deleted;
    return this;
  }

  /**
   * Get deleted
   * @return deleted
   */
  @javax.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_DELETED, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getDeleted() {
    return deleted;
  }


  @JsonProperty(value = JSON_PROPERTY_DELETED, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleted(@javax.annotation.Nullable Boolean deleted) {
    this.deleted = deleted;
  }

  public AuditLog appliedPatch(@javax.annotation.Nullable List<Object> appliedPatch) {
    
    this.appliedPatch = appliedPatch;
    return this;
  }

  public AuditLog addAppliedPatchItem(Object appliedPatchItem) {
    if (this.appliedPatch == null) {
      this.appliedPatch = new ArrayList<>();
    }
    this.appliedPatch.add(appliedPatchItem);
    return this;
  }

  /**
   * Get appliedPatch
   * @return appliedPatch
   */
  @javax.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_APPLIED_PATCH, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Object> getAppliedPatch() {
    return appliedPatch;
  }


  @JsonProperty(value = JSON_PROPERTY_APPLIED_PATCH, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAppliedPatch(@javax.annotation.Nullable List<Object> appliedPatch) {
    this.appliedPatch = appliedPatch;
  }

  public AuditLog revertPatch(@javax.annotation.Nullable List<Object> revertPatch) {
    
    this.revertPatch = revertPatch;
    return this;
  }

  public AuditLog addRevertPatchItem(Object revertPatchItem) {
    if (this.revertPatch == null) {
      this.revertPatch = new ArrayList<>();
    }
    this.revertPatch.add(revertPatchItem);
    return this;
  }

  /**
   * Get revertPatch
   * @return revertPatch
   */
  @javax.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_REVERT_PATCH, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Object> getRevertPatch() {
    return revertPatch;
  }


  @JsonProperty(value = JSON_PROPERTY_REVERT_PATCH, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRevertPatch(@javax.annotation.Nullable List<Object> revertPatch) {
    this.revertPatch = revertPatch;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AuditLog auditLog = (AuditLog) o;
    return Objects.equals(this.tenantId, auditLog.tenantId) &&
        Objects.equals(this.id, auditLog.id) &&
        Objects.equals(this.type, auditLog.type) &&
        Objects.equals(this.detail, auditLog.detail) &&
        Objects.equals(this.date, auditLog.date) &&
        Objects.equals(this.userId, auditLog.userId) &&
        Objects.equals(this.ipAddress, auditLog.ipAddress) &&
        Objects.equals(this.impersonatedBy, auditLog.impersonatedBy) &&
        Objects.equals(this.deleted, auditLog.deleted) &&
        Objects.equals(this.appliedPatch, auditLog.appliedPatch) &&
        Objects.equals(this.revertPatch, auditLog.revertPatch);
  }

  @Override
  public int hashCode() {
    return Objects.hash(tenantId, id, type, detail, date, userId, ipAddress, impersonatedBy, deleted, appliedPatch, revertPatch);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AuditLog {\n");
    sb.append("    tenantId: ").append(toIndentedString(tenantId)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    detail: ").append(toIndentedString(detail)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    ipAddress: ").append(toIndentedString(ipAddress)).append("\n");
    sb.append("    impersonatedBy: ").append(toIndentedString(impersonatedBy)).append("\n");
    sb.append("    deleted: ").append(toIndentedString(deleted)).append("\n");
    sb.append("    appliedPatch: ").append(toIndentedString(appliedPatch)).append("\n");
    sb.append("    revertPatch: ").append(toIndentedString(revertPatch)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

