/*
 * Kestra EE
 * All API operations, except for Superadmin-only endpoints, require a tenant identifier in the HTTP path.<br/> Endpoints designated as Superadmin-only are not tenant-scoped.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.kestra.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.kestra.sdk.model.AppsControllerApiBulkImportResponseError;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * AppsControllerApiBulkImportResponse
 */
@JsonPropertyOrder({
  AppsControllerApiBulkImportResponse.JSON_PROPERTY_SUCCESS,
  AppsControllerApiBulkImportResponse.JSON_PROPERTY_ERRORS
})
@JsonTypeName("AppsController.ApiBulkImportResponse")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.14.0-SNAPSHOT")
public class AppsControllerApiBulkImportResponse {
  public static final String JSON_PROPERTY_SUCCESS = "success";
  @javax.annotation.Nonnull
  private List<String> success = new ArrayList<>();

  public static final String JSON_PROPERTY_ERRORS = "errors";
  @javax.annotation.Nonnull
  private List<AppsControllerApiBulkImportResponseError> errors = new ArrayList<>();

  public AppsControllerApiBulkImportResponse() {
  }

  public AppsControllerApiBulkImportResponse success(@javax.annotation.Nonnull List<String> success) {
    
    this.success = success;
    return this;
  }

  public AppsControllerApiBulkImportResponse addSuccessItem(String successItem) {
    if (this.success == null) {
      this.success = new ArrayList<>();
    }
    this.success.add(successItem);
    return this;
  }

  /**
   * Get success
   * @return success
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SUCCESS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<String> getSuccess() {
    return success;
  }


  @JsonProperty(JSON_PROPERTY_SUCCESS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSuccess(@javax.annotation.Nonnull List<String> success) {
    this.success = success;
  }

  public AppsControllerApiBulkImportResponse errors(@javax.annotation.Nonnull List<AppsControllerApiBulkImportResponseError> errors) {
    
    this.errors = errors;
    return this;
  }

  public AppsControllerApiBulkImportResponse addErrorsItem(AppsControllerApiBulkImportResponseError errorsItem) {
    if (this.errors == null) {
      this.errors = new ArrayList<>();
    }
    this.errors.add(errorsItem);
    return this;
  }

  /**
   * Get errors
   * @return errors
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ERRORS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<AppsControllerApiBulkImportResponseError> getErrors() {
    return errors;
  }


  @JsonProperty(JSON_PROPERTY_ERRORS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setErrors(@javax.annotation.Nonnull List<AppsControllerApiBulkImportResponseError> errors) {
    this.errors = errors;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AppsControllerApiBulkImportResponse appsControllerApiBulkImportResponse = (AppsControllerApiBulkImportResponse) o;
    return Objects.equals(this.success, appsControllerApiBulkImportResponse.success) &&
        Objects.equals(this.errors, appsControllerApiBulkImportResponse.errors);
  }

  @Override
  public int hashCode() {
    return Objects.hash(success, errors);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AppsControllerApiBulkImportResponse {\n");
    sb.append("    success: ").append(toIndentedString(success)).append("\n");
    sb.append("    errors: ").append(toIndentedString(errors)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

