/*
 * Kestra EE
 * All API operations, except for Superadmin-only endpoints, require a tenant identifier in the HTTP path.<br/> Endpoints designated as Superadmin-only are not tenant-scoped.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.kestra.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.kestra.sdk.model.IAMInvitationControllerApiInvitationRole;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * IAMInvitationControllerApiInvitationCreateRequest
 */
@JsonPropertyOrder({
  IAMInvitationControllerApiInvitationCreateRequest.JSON_PROPERTY_CREATE_USER_IF_NOT_EXIST,
  IAMInvitationControllerApiInvitationCreateRequest.JSON_PROPERTY_SUPER_ADMIN,
  IAMInvitationControllerApiInvitationCreateRequest.JSON_PROPERTY_ROLES,
  IAMInvitationControllerApiInvitationCreateRequest.JSON_PROPERTY_GROUPS,
  IAMInvitationControllerApiInvitationCreateRequest.JSON_PROPERTY_EMAIL
})
@JsonTypeName("IAMInvitationController.ApiInvitationCreateRequest")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.16.0")
public class IAMInvitationControllerApiInvitationCreateRequest {
  public static final String JSON_PROPERTY_CREATE_USER_IF_NOT_EXIST = "createUserIfNotExist";
  @javax.annotation.Nullable  private Boolean createUserIfNotExist;

  public static final String JSON_PROPERTY_SUPER_ADMIN = "superAdmin";
  @javax.annotation.Nullable  private Boolean superAdmin;

  public static final String JSON_PROPERTY_ROLES = "roles";
  @javax.annotation.Nullable  private List<IAMInvitationControllerApiInvitationRole> roles = new ArrayList<>();

  public static final String JSON_PROPERTY_GROUPS = "groups";
  @javax.annotation.Nullable  private List<String> groups = new ArrayList<>();

  public static final String JSON_PROPERTY_EMAIL = "email";
  @javax.annotation.Nonnull  private String email;

  public IAMInvitationControllerApiInvitationCreateRequest() {
  }

  public IAMInvitationControllerApiInvitationCreateRequest createUserIfNotExist(@javax.annotation.Nullable Boolean createUserIfNotExist) {
    
    this.createUserIfNotExist = createUserIfNotExist;
    return this;
  }

  /**
   * Get createUserIfNotExist
   * @return createUserIfNotExist
   */
  @javax.annotation.Nullable  @JsonProperty(JSON_PROPERTY_CREATE_USER_IF_NOT_EXIST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getCreateUserIfNotExist() {
    return createUserIfNotExist;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_USER_IF_NOT_EXIST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateUserIfNotExist(@javax.annotation.Nullable Boolean createUserIfNotExist) {
    this.createUserIfNotExist = createUserIfNotExist;
  }

  public IAMInvitationControllerApiInvitationCreateRequest superAdmin(@javax.annotation.Nullable Boolean superAdmin) {
    
    this.superAdmin = superAdmin;
    return this;
  }

  /**
   * Get superAdmin
   * @return superAdmin
   */
  @javax.annotation.Nullable  @JsonProperty(JSON_PROPERTY_SUPER_ADMIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getSuperAdmin() {
    return superAdmin;
  }


  @JsonProperty(JSON_PROPERTY_SUPER_ADMIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSuperAdmin(@javax.annotation.Nullable Boolean superAdmin) {
    this.superAdmin = superAdmin;
  }

  public IAMInvitationControllerApiInvitationCreateRequest roles(@javax.annotation.Nullable List<IAMInvitationControllerApiInvitationRole> roles) {
    
    this.roles = roles;
    return this;
  }

  public IAMInvitationControllerApiInvitationCreateRequest addRolesItem(IAMInvitationControllerApiInvitationRole rolesItem) {
    if (this.roles == null) {
      this.roles = new ArrayList<>();
    }
    this.roles.add(rolesItem);
    return this;
  }

  /**
   * Get roles
   * @return roles
   */
  @javax.annotation.Nullable  @JsonProperty(JSON_PROPERTY_ROLES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<IAMInvitationControllerApiInvitationRole> getRoles() {
    return roles;
  }


  @JsonProperty(JSON_PROPERTY_ROLES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRoles(@javax.annotation.Nullable List<IAMInvitationControllerApiInvitationRole> roles) {
    this.roles = roles;
  }

  public IAMInvitationControllerApiInvitationCreateRequest groups(@javax.annotation.Nullable List<String> groups) {
    
    this.groups = groups;
    return this;
  }

  public IAMInvitationControllerApiInvitationCreateRequest addGroupsItem(String groupsItem) {
    if (this.groups == null) {
      this.groups = new ArrayList<>();
    }
    this.groups.add(groupsItem);
    return this;
  }

  /**
   * Get groups
   * @return groups
   */
  @javax.annotation.Nullable  @JsonProperty(JSON_PROPERTY_GROUPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getGroups() {
    return groups;
  }


  @JsonProperty(JSON_PROPERTY_GROUPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGroups(@javax.annotation.Nullable List<String> groups) {
    this.groups = groups;
  }

  public IAMInvitationControllerApiInvitationCreateRequest email(@javax.annotation.Nonnull String email) {
    
    this.email = email;
    return this;
  }

  /**
   * Get email
   * @return email
   */
  @javax.annotation.Nonnull  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getEmail() {
    return email;
  }


  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEmail(@javax.annotation.Nonnull String email) {
    this.email = email;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IAMInvitationControllerApiInvitationCreateRequest iaMInvitationControllerApiInvitationCreateRequest = (IAMInvitationControllerApiInvitationCreateRequest) o;
    return Objects.equals(this.createUserIfNotExist, iaMInvitationControllerApiInvitationCreateRequest.createUserIfNotExist) &&
        Objects.equals(this.superAdmin, iaMInvitationControllerApiInvitationCreateRequest.superAdmin) &&
        Objects.equals(this.roles, iaMInvitationControllerApiInvitationCreateRequest.roles) &&
        Objects.equals(this.groups, iaMInvitationControllerApiInvitationCreateRequest.groups) &&
        Objects.equals(this.email, iaMInvitationControllerApiInvitationCreateRequest.email);
  }

  @Override
  public int hashCode() {
    return Objects.hash(createUserIfNotExist, superAdmin, roles, groups, email);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IAMInvitationControllerApiInvitationCreateRequest {\n");
    sb.append("    createUserIfNotExist: ").append(toIndentedString(createUserIfNotExist)).append("\n");
    sb.append("    superAdmin: ").append(toIndentedString(superAdmin)).append("\n");
    sb.append("    roles: ").append(toIndentedString(roles)).append("\n");
    sb.append("    groups: ").append(toIndentedString(groups)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

