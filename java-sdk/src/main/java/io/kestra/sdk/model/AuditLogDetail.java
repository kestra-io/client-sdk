/*
 * Kestra EE
 * All API operations, except for Superadmin-only endpoints, require a tenant identifier in the HTTP path.<br/> Endpoints designated as Superadmin-only are not tenant-scoped.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.kestra.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.kestra.sdk.model.Permission;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * AuditLogDetail
 */
@JsonPropertyOrder({
  AuditLogDetail.JSON_PROPERTY_TYPE,
  AuditLogDetail.JSON_PROPERTY_CLS,
  AuditLogDetail.JSON_PROPERTY_PERMISSION,
  AuditLogDetail.JSON_PROPERTY_ID
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.14.0-SNAPSHOT")
public class AuditLogDetail {
  public static final String JSON_PROPERTY_TYPE = "type";
  @javax.annotation.Nonnull
  private String type;

  public static final String JSON_PROPERTY_CLS = "cls";
  @javax.annotation.Nonnull
  private String cls;

  public static final String JSON_PROPERTY_PERMISSION = "permission";
  @javax.annotation.Nonnull
  private Permission permission;

  public static final String JSON_PROPERTY_ID = "id";
  @javax.annotation.Nullable
  private String id;

  public AuditLogDetail() {
  }

  public AuditLogDetail type(@javax.annotation.Nonnull String type) {
    
    this.type = type;
    return this;
  }

  /**
   * Get type
   * @return type
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setType(@javax.annotation.Nonnull String type) {
    this.type = type;
  }

  public AuditLogDetail cls(@javax.annotation.Nonnull String cls) {
    
    this.cls = cls;
    return this;
  }

  /**
   * Get cls
   * @return cls
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CLS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCls() {
    return cls;
  }


  @JsonProperty(JSON_PROPERTY_CLS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCls(@javax.annotation.Nonnull String cls) {
    this.cls = cls;
  }

  public AuditLogDetail permission(@javax.annotation.Nonnull Permission permission) {
    
    this.permission = permission;
    return this;
  }

  /**
   * Get permission
   * @return permission
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PERMISSION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Permission getPermission() {
    return permission;
  }


  @JsonProperty(JSON_PROPERTY_PERMISSION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPermission(@javax.annotation.Nonnull Permission permission) {
    this.permission = permission;
  }

  public AuditLogDetail id(@javax.annotation.Nullable String id) {
    
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(@javax.annotation.Nullable String id) {
    this.id = id;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AuditLogDetail auditLogDetail = (AuditLogDetail) o;
    return Objects.equals(this.type, auditLogDetail.type) &&
        Objects.equals(this.cls, auditLogDetail.cls) &&
        Objects.equals(this.permission, auditLogDetail.permission) &&
        Objects.equals(this.id, auditLogDetail.id);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, cls, permission, id);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AuditLogDetail {\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    cls: ").append(toIndentedString(cls)).append("\n");
    sb.append("    permission: ").append(toIndentedString(permission)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

