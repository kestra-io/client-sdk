openapi: 3.0.1
info:
  description: |-
    All API operations allow an optional tenant identifier in the HTTP path, if you don't use multi-tenancy you must omit the tenant identifier.<br/>
    This means that, for example, when trying to access the Flows API, instead of using <code>/api/v1/{tenant}/flows</code> you must use <code>/api/v1/flows</code>.
  title: Kestra EE
  version: v1
servers:
- url: /
security:
- basic: []
- oauth2: []
tags:
- description: Flows api
  name: Flows
- description: Templates api
  name: Templates
- description: Executions api
  name: Executions
- description: Logs api
  name: Logs
- description: Namespaces api
  name: Namespaces
- description: Users api
  name: Users
- description: Groups api
  name: Groups
- description: Bindings api
  name: Bindings
- description: Roles api
  name: Roles
- description: Audit Logs api
  name: Audit Logs
- description: Auth api
  name: Auths
- description: Stats api
  name: Stats
- description: Tenants api
  name: Tenants
- description: Misc api
  name: Misc
paths:
  /api/v1/acls/actions:
    get:
      operationId: actions
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Action'
                type: array
          description: actions 200 response
      summary: Get list of actions
      tags:
      - Misc
      x-accepts:
      - application/json
  /api/v1/acls/permissions:
    get:
      operationId: permissions
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Permission'
                type: array
          description: permissions 200 response
      summary: Get list of permissions
      tags:
      - Misc
      x-accepts:
      - application/json
  /api/v1/apps:
    post:
      operationId: create
      requestBody:
        content:
          application/x-yaml:
            schema:
              type: string
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppsController.ApiAppSource'
          description: create 200 response
      summary: Create a new app
      tags:
      - Apps
      x-content-type: application/x-yaml
      x-accepts:
      - application/json
  /api/v1/apps/search:
    get:
      operationId: search
      parameters:
      - description: The current page
        explode: true
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: The current page size
        explode: true
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      - description: The sort of current page
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: A tags filter
        explode: true
        in: query
        name: tags
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A namespace filter prefix
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A flow id filter
        explode: true
        in: query
        name: flowId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResults_AppsController.ApiApp_'
          description: search 200 response
      summary: Search for apps
      tags:
      - Apps
      x-accepts:
      - application/json
  /api/v1/apps/tags:
    get:
      operationId: tags
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppsController.ApiAppTags'
          description: tags 200 response
      summary: Get all the app tags
      tags:
      - Apps
      x-accepts:
      - application/json
  /api/v1/apps/view/{id}/dispatch/{dispatch}:
    post:
      operationId: dispatch
      parameters:
      - description: The ID of the app.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID to dispatch
        explode: false
        in: path
        name: dispatch
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            encoding: {}
            schema:
              items:
                format: binary
                type: string
              nullable: true
              properties:
                parameters:
                  $ref: '#/components/schemas/HttpParameters'
              type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppResponse'
          description: dispatch 200 response
      summary: Dispatch for a given app.
      tags:
      - Apps
      x-content-type: multipart/form-data
      x-accepts:
      - application/json
  /api/v1/apps/view/{id}/file/download:
    get:
      operationId: getFileDownload
      parameters:
      - description: The ID of the app.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The internal storage uri
        explode: true
        in: query
        name: path
        required: true
        schema:
          format: uri
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                format: binary
                type: string
          description: getFileDownload 200 response
      summary: Download file for an app execution
      tags:
      - Apps
      x-accepts:
      - application/json
  /api/v1/apps/view/{id}/file/meta:
    get:
      operationId: getFileMeta
      parameters:
      - description: The ID of the app.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The internal storage uri
        explode: true
        in: query
        name: path
        required: true
        schema:
          format: uri
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileMetas'
          description: getFileMeta 200 response
      summary: Get file meta information for an app execution
      tags:
      - Apps
      x-accepts:
      - application/json
  /api/v1/apps/view/{id}/file/preview:
    get:
      operationId: getFilePreview
      parameters:
      - description: The ID of the app.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The internal storage uri
        explode: true
        in: query
        name: path
        required: true
        schema:
          format: uri
          type: string
        style: form
      - description: The max row returns
        explode: true
        in: query
        name: maxRows
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
      - description: The file encoding as Java charset name. Defaults to UTF-8
        example: ISO-8859-1
        explode: true
        in: query
        name: encoding
        required: true
        schema:
          default: UTF-8
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: getFilePreview 200 response
      summary: Get file preview for an app execution
      tags:
      - Apps
      x-accepts:
      - application/json
  /api/v1/apps/view/{id}/streams/{stream}:
    get:
      operationId: streams
      parameters:
      - description: The ID of the app.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the stream to get
        explode: false
        in: path
        name: stream
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: parameters
        required: true
        schema:
          $ref: '#/components/schemas/HttpParameters'
        style: form
      responses:
        "200":
          content:
            text/event-stream:
              schema:
                $ref: '#/components/schemas/Event_AppResponse_'
          description: streams 200 response
      summary: Get an event stream from a given app.
      tags:
      - Apps
      x-accepts:
      - text/event-stream
  /api/v1/apps/view/{uid}:
    get:
      operationId: open
      parameters:
      - description: The ID of the app
        explode: false
        in: path
        name: uid
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: parameters
        required: true
        schema:
          $ref: '#/components/schemas/HttpParameters'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppResponse'
          description: open 200 response
      summary: Open an app
      tags:
      - Apps
      x-accepts:
      - application/json
  /api/v1/apps/view/{uid}/logs/download:
    get:
      operationId: download
      parameters:
      - description: The ID of the app.
        explode: false
        in: path
        name: uid
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the execution.
        explode: true
        in: query
        name: executionId
        required: true
        schema:
          type: string
        style: form
      - description: The min log level filter
        explode: true
        in: query
        name: minLevel
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/Level'
          nullable: true
        style: form
      - description: The tasks' IDs
        explode: true
        in: query
        name: taskIds
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: download 200 response
      summary: Download logs for an app execution
      tags:
      - Apps
      x-accepts:
      - application/octet-stream
  /api/v1/apps/{uid}:
    delete:
      operationId: delete
      parameters:
      - description: The ID of the app
        explode: false
        in: path
        name: uid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: delete 200 response
      summary: Delete an existing app
      tags:
      - Apps
      x-accepts:
      - application/json
    get:
      operationId: get
      parameters:
      - description: The ID of the app
        explode: false
        in: path
        name: uid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppsController.ApiAppSource'
          description: get 200 response
      summary: Get a app
      tags:
      - Apps
      x-accepts:
      - application/json
    put:
      operationId: update
      parameters:
      - description: The ID of the app
        explode: false
        in: path
        name: uid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/x-yaml:
            schema:
              type: string
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppsController.ApiAppSource'
          description: update 200 response
      summary: Update an existing app
      tags:
      - Apps
      x-content-type: application/x-yaml
      x-accepts:
      - application/json
  /api/v1/apps/{uid}/disable:
    post:
      operationId: disable
      parameters:
      - description: The ID of app
        explode: false
        in: path
        name: uid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppsController.ApiApp'
          description: disable 200 response
      summary: Disable the app.
      tags:
      - Apps
      x-accepts:
      - application/json
  /api/v1/apps/{uid}/enable:
    post:
      operationId: enable
      parameters:
      - description: The ID of app
        explode: false
        in: path
        name: uid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppsController.ApiApp'
          description: enable 200 response
      summary: Enable the app.
      tags:
      - Apps
      x-accepts:
      - application/json
  /api/v1/auditlogs/find:
    post:
      operationId: find
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuditLogController.FindRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditLogController.AuditLogWithUser'
          description: find 200 response
      summary: Find audit logs
      tags:
      - Audit Logs
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/auditlogs/search:
    get:
      operationId: search_1
      parameters:
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The current page
        explode: true
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: The current page size
        explode: true
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      - description: The sort of current page
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: A namespace filter
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A flow id filter
        explode: true
        in: query
        name: flowId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: An execution filter
        explode: true
        in: query
        name: executionId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A user id filter
        explode: true
        in: query
        name: userId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A id filter
        explode: true
        in: query
        name: id
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A permission filter
        explode: true
        in: query
        name: permission
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/Permission'
          nullable: true
        style: form
      - description: The start datetime
        explode: true
        in: query
        name: startDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: The end datetime
        explode: true
        in: query
        name: endDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: A list of auditLog details
        explode: true
        in: query
        name: details
        required: false
        schema:
          additionalProperties:
            type: string
          nullable: true
          type: object
        style: form
      - description: The event that create the audit log
        explode: true
        in: query
        name: type
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/CrudEventType'
          nullable: true
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResults_AuditLogController.AuditLogWithUser_'
          description: search_1 200 response
      summary: Search for audit logs
      tags:
      - Audit Logs
      x-accepts:
      - application/json
  /api/v1/auditlogs/{id}/diff:
    get:
      operationId: diff
      parameters:
      - description: The id of the audit log
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditLogController.AuditLogDiff'
          description: diff 200 response
      summary: Get the diff of an audit log
      tags:
      - Audit Logs
      x-accepts:
      - application/json
  /api/v1/auths:
    get:
      operationId: index
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthController.Auth'
          description: index 200 response
      summary: Get list of authentification methods
      tags:
      - Auths
      x-accepts:
      - application/json
  /api/v1/banners:
    post:
      operationId: create_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Banner'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Banner'
          description: create_1 200 response
      summary: Create a new banner
      tags:
      - Banners
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/banners/search:
    get:
      operationId: find_1
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Banner'
                type: array
          description: find_1 200 response
      summary: Get banners
      tags:
      - Banners
      x-accepts:
      - application/json
  /api/v1/banners/{id}:
    delete:
      operationId: delete_1
      parameters:
      - description: The banner id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: delete_1 200 response
      summary: Delete a banner
      tags:
      - Banners
      x-accepts:
      - application/json
    put:
      operationId: update_1
      parameters:
      - description: The banner id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Banner'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Banner'
          description: update_1 200 response
      summary: Update a banner
      tags:
      - Banners
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/basicAuth:
    post:
      operationId: addBasicAuth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MiscController.BasicAuthCredentials'
        required: true
      responses:
        "200":
          description: addBasicAuth 200 response
      summary: Add basic auth to current instance
      tags:
      - Misc
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/bindings:
    post:
      operationId: create_2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Binding'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AbstractBindingController.BindingDetail'
          description: create_2 200 response
      summary: Create a binding
      tags:
      - Bindings
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/bindings/bulk:
    post:
      operationId: bulkCreate
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Binding'
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AbstractBindingController.BindingDetail'
                type: array
          description: bulkCreate 200 response
      summary: Create multiple bindings
      tags:
      - Bindings
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/bindings/search:
    get:
      operationId: find_2
      parameters:
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The current page
        explode: true
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: The current page size
        explode: true
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      - description: The sort of current page
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: Binding type filter
        explode: true
        in: query
        name: type
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/Binding.Type'
          nullable: true
        style: form
      - description: External id filter
        explode: true
        in: query
        name: id
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A namespace filter
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResults_AbstractBindingController.BindingDetail_'
          description: find_2 200 response
      summary: Search for bindings
      tags:
      - Bindings
      x-accepts:
      - application/json
  /api/v1/bindings/{id}:
    delete:
      operationId: delete_2
      parameters:
      - description: The binding id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: On success
      summary: Delete a binding
      tags:
      - Bindings
      x-accepts:
      - application/json
    get:
      operationId: index_1
      parameters:
      - description: The binding id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AbstractBindingController.BindingDetail'
          description: index_1 200 response
      summary: Get a binding
      tags:
      - Bindings
      x-accepts:
      - application/json
  /api/v1/blueprints/community:
    get:
      operationId: blueprints
      parameters:
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The sort of current page
        explode: true
        in: query
        name: sort
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A tags filter
        explode: true
        in: query
        name: tags
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: The current page
        explode: true
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: The current page size
        explode: true
        in: query
        name: size
        required: true
        schema:
          default: 1
          format: int32
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResults_BlueprintController.BlueprintItem_'
          description: blueprints 200 response
      summary: List all blueprints
      tags:
      - Blueprints
      x-accepts:
      - application/json
  /api/v1/blueprints/community/tags:
    get:
      operationId: blueprintTags
      parameters:
      - description: A string filter to get tags with matching blueprints only
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/BlueprintController.BlueprintTagItem'
                type: array
          description: blueprintTags 200 response
      summary: List blueprint tags matching the filter
      tags:
      - Blueprint Tags
      x-accepts:
      - application/json
  /api/v1/blueprints/community/{id}:
    get:
      operationId: blueprint
      parameters:
      - description: The blueprint id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlueprintController.BlueprintItemWithFlow'
          description: blueprint 200 response
      summary: Get a blueprint
      tags:
      - blueprints
      x-accepts:
      - application/json
  /api/v1/blueprints/community/{id}/flow:
    get:
      operationId: blueprintFlow
      parameters:
      - description: The blueprint id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/yaml:
              schema:
                type: string
          description: blueprintFlow 200 response
      summary: Get a blueprint flow
      tags:
      - blueprints
      x-accepts:
      - application/yaml
  /api/v1/blueprints/community/{id}/graph:
    get:
      operationId: blueprintGraph
      parameters:
      - description: The blueprint id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: blueprintGraph 200 response
      summary: Get a blueprint graph
      tags:
      - blueprints
      x-accepts:
      - application/json
  /api/v1/blueprints/custom:
    get:
      operationId: internalBlueprints
      parameters:
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The sort of current page
        explode: true
        in: query
        name: sort
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A tags filter
        explode: true
        in: query
        name: tags
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: The current page
        explode: true
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: The current page size
        explode: true
        in: query
        name: size
        required: true
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResults_Blueprint_'
          description: internalBlueprints 200 response
      summary: List all internal blueprints
      tags:
      - Blueprints
      x-accepts:
      - application/json
    post:
      operationId: createInternalBlueprints
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlueprintWithFlow'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlueprintWithFlow'
          description: createInternalBlueprints 200 response
      summary: Create a new internal blueprint
      tags:
      - Blueprints
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/blueprints/custom/tags:
    get:
      operationId: internalBlueprintTags
      parameters:
      - description: A string filter to get tags with matching blueprints only
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: internalBlueprintTags 200 response
      summary: List all internal blueprint tags
      tags:
      - Blueprint Tags
      x-accepts:
      - application/json
  /api/v1/blueprints/custom/{id}:
    delete:
      operationId: internalBlueprints_1
      parameters:
      - description: The internal blueprint id to delete
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: internalBlueprints_1 200 response
      summary: Delete an internal blueprint
      tags:
      - Blueprints
      x-accepts:
      - application/json
    get:
      operationId: internalBlueprint
      parameters:
      - description: The blueprint id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlueprintWithFlow'
          description: internalBlueprint 200 response
      summary: Get an internal blueprint
      tags:
      - blueprints
      x-accepts:
      - application/json
    put:
      operationId: updateInternalBlueprints
      parameters:
      - description: The id of the internal blueprint to update
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlueprintWithFlow'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlueprintWithFlow'
          description: updateInternalBlueprints 200 response
      summary: Update an internal blueprint
      tags:
      - Blueprints
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/blueprints/custom/{id}/flow:
    get:
      operationId: internalBlueprintFlow
      parameters:
      - description: The blueprint id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/yaml:
              schema:
                type: string
          description: internalBlueprintFlow 200 response
      summary: Get an internal blueprint flow
      tags:
      - blueprints
      x-accepts:
      - application/yaml
  /api/v1/cluster/services/active:
    get:
      operationId: active
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterController.ApiActiveServiceList'
          description: active 200 response
      summary: Get details about active services
      tags:
      - Services
      x-accepts:
      - application/json
  /api/v1/cluster/services/search:
    get:
      operationId: find_3
      parameters:
      - description: The current page
        explode: true
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: The current page size
        explode: true
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      - description: The sort of current page
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: The state filter
        explode: true
        in: query
        name: state
        required: false
        schema:
          items:
            $ref: '#/components/schemas/Service.ServiceState'
          nullable: true
          type: array
        style: form
      - description: The server type filter
        explode: true
        in: query
        name: type
        required: false
        schema:
          items:
            $ref: '#/components/schemas/Service.ServiceType'
          nullable: true
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResults_ClusterController.ApiServiceInstance_'
          description: find_3 200 response
      summary: Search for service
      tags:
      - Services
      x-accepts:
      - application/json
  /api/v1/cluster/services/{id}:
    get:
      operationId: index_2
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceInstance'
          description: index_2 200 response
      summary: Get details about a service
      tags:
      - Services
      x-accepts:
      - application/json
  /api/v1/cluster/workergroups:
    get:
      operationId: listWorkerGroups
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterController.ApiWorkerGroupList'
          description: listWorkerGroups 200 response
      summary: List all Worker Groups
      tags:
      - WorkerGroups
      x-accepts:
      - application/json
    post:
      operationId: createWorkerGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClusterController.ApiCreateOrUpdateWorkerGroupRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterController.ApiWorkerGroup'
          description: createWorkerGroup 200 response
      summary: Create a new worker group.
      tags:
      - WorkerGroups
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/cluster/workergroups/{id}:
    delete:
      operationId: deleteWorkerGroupById
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: deleteWorkerGroupById 200 response
      summary: Delete an existing worker group.
      tags:
      - WorkerGroups
      x-accepts:
      - application/json
    get:
      operationId: getWorkerGroupById
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterController.ApiWorkerGroupDetails'
          description: getWorkerGroupById 200 response
      summary: Get details about a worker group.
      tags:
      - WorkerGroups
      x-accepts:
      - application/json
    put:
      operationId: updateWorkerGroupById
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClusterController.ApiCreateOrUpdateWorkerGroupRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterController.ApiWorkerGroup'
          description: updateWorkerGroupById 200 response
      summary: Update an existing worker group.
      tags:
      - WorkerGroups
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/configs:
    get:
      operationId: configuration
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MiscController.ConfigurationEe'
          description: configuration 200 response
      summary: Get current configurations
      tags:
      - Misc
      x-accepts:
      - application/json
  /api/v1/dashboards:
    get:
      operationId: list
      parameters:
      - description: The current page
        explode: true
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: The current page size
        explode: true
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: The filter query
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The sort of current page
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResults_Dashboard_'
          description: list 200 response
      summary: List all dashboards
      tags:
      - Dashboards
      x-accepts:
      - application/json
    post:
      operationId: create_3
      requestBody:
        content:
          application/x-yaml:
            schema:
              type: string
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dashboard'
          description: create_3 200 response
      summary: Create a dashboard from yaml source
      tags:
      - Dashboards
      x-content-type: application/x-yaml
      x-accepts:
      - application/json
  /api/v1/dashboards/validate:
    post:
      operationId: validate
      requestBody:
        content:
          application/x-yaml:
            schema:
              type: string
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateConstraintViolation'
          description: validate 200 response
      summary: Validate dashboard from yaml source
      tags:
      - Dashboards
      x-content-type: application/x-yaml
      x-accepts:
      - application/json
  /api/v1/dashboards/{id}:
    delete:
      operationId: delete_3
      parameters:
      - description: The dashboard id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: delete_3 200 response
      summary: Delete a dashboard
      tags:
      - Dashboards
      x-accepts:
      - application/json
    get:
      operationId: get_1
      parameters:
      - description: The dashboard id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dashboard'
          description: get_1 200 response
      summary: Retrieve a dashboard
      tags:
      - Dashboards
      x-accepts:
      - application/json
    put:
      operationId: update_2
      parameters:
      - description: The dashboard id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/x-yaml:
            schema:
              type: string
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dashboard'
          description: update_2 200 response
      summary: Update a dashboard
      tags:
      - Dashboards
      x-content-type: application/x-yaml
      x-accepts:
      - application/json
  /api/v1/dashboards/{id}/charts/{chartId}:
    post:
      operationId: dashboardChart
      parameters:
      - description: The dashboard id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The chart id
        explode: false
        in: path
        name: chartId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties: true
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResults_Map_String.Object__'
          description: dashboardChart 200 response
      summary: Generate a dashboard chart data
      tags:
      - Dashboards
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/executions:
    get:
      operationId: findByFlowId
      parameters:
      - description: The flow namespace
        explode: true
        in: query
        name: namespace
        required: true
        schema:
          type: string
        style: form
      - description: The flow id
        explode: true
        in: query
        name: flowId
        required: true
        schema:
          type: string
        style: form
      - description: The current page
        explode: true
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: The current page size
        explode: true
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResults_Execution_'
          description: findByFlowId 200 response
      summary: Search for executions for a flow
      tags:
      - Executions
      x-accepts:
      - application/json
  /api/v1/executions/by-ids:
    delete:
      operationId: deleteByIds
      parameters:
      - description: Whether to delete non-terminated executions
        explode: true
        in: query
        name: includeNonTerminated
        required: false
        schema:
          default: false
          nullable: true
          type: boolean
        style: form
      - description: Whether to delete execution logs
        explode: true
        in: query
        name: deleteLogs
        required: true
        schema:
          default: true
          type: boolean
        style: form
      - description: Whether to delete execution metrics
        explode: true
        in: query
        name: deleteMetrics
        required: true
        schema:
          default: true
          type: boolean
        style: form
      - description: Whether to delete execution files in the internal storage
        explode: true
        in: query
        name: deleteStorage
        required: true
        schema:
          default: true
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkResponse'
          description: On success
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkErrorResponse'
          description: Deleted with errors
      summary: Delete a list of executions
      tags:
      - Executions
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/executions/by-query:
    delete:
      operationId: deleteByQuery
      parameters:
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The scope of the executions to include
        explode: true
        in: query
        name: scope
        required: false
        schema:
          items:
            $ref: '#/components/schemas/FlowScope'
          nullable: true
          type: array
        style: form
      - description: A namespace filter prefix
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A flow id filter
        explode: true
        in: query
        name: flowId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The start datetime
        explode: true
        in: query
        name: startDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: The end datetime
        explode: true
        in: query
        name: endDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: A time range filter relative to the current time
        examples:
          Filter last 5 minutes:
            value: PT5M
          Filter last 24 hours:
            value: P1D
        explode: true
        in: query
        name: timeRange
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A state filter
        explode: true
        in: query
        name: state
        required: false
        schema:
          items:
            $ref: '#/components/schemas/State.Type'
          nullable: true
          type: array
        style: form
      - description: A labels filter as a list of 'key:value'
        explode: true
        in: query
        name: labels
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: The trigger execution id
        explode: true
        in: query
        name: triggerExecutionId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A execution child filter
        explode: true
        in: query
        name: childFilter
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/ExecutionRepositoryInterface.ChildFilter'
          nullable: true
        style: form
      - description: Whether to delete non-terminated executions
        explode: true
        in: query
        name: includeNonTerminated
        required: false
        schema:
          default: false
          nullable: true
          type: boolean
        style: form
      - description: Whether to delete execution logs
        explode: true
        in: query
        name: deleteLogs
        required: true
        schema:
          default: true
          type: boolean
        style: form
      - description: Whether to delete execution metrics
        explode: true
        in: query
        name: deleteMetrics
        required: true
        schema:
          default: true
          type: boolean
        style: form
      - description: Whether to delete execution files in the internal storage
        explode: true
        in: query
        name: deleteStorage
        required: true
        schema:
          default: true
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: deleteByQuery 200 response
      summary: Delete executions filter by query parameters
      tags:
      - Executions
      x-accepts:
      - application/json
  /api/v1/executions/change-status/by-ids:
    post:
      operationId: changeStatusById
      parameters:
      - description: The new status of the executions
        explode: true
        in: query
        name: newStatus
        required: true
        schema:
          $ref: '#/components/schemas/State.Type'
        style: form
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkResponse'
          description: On success
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkErrorResponse'
          description: Changed status with errors
      summary: Change status of executions by id
      tags:
      - Executions
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/executions/change-status/by-query:
    post:
      operationId: changeStatusByQuery
      parameters:
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The scope of the executions to include
        explode: true
        in: query
        name: scope
        required: false
        schema:
          items:
            $ref: '#/components/schemas/FlowScope'
          nullable: true
          type: array
        style: form
      - description: A namespace filter prefix
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A flow id filter
        explode: true
        in: query
        name: flowId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The start datetime
        explode: true
        in: query
        name: startDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: The end datetime
        explode: true
        in: query
        name: endDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: A time range filter relative to the current time
        examples:
          Filter last 5 minutes:
            value: PT5M
          Filter last 24 hours:
            value: P1D
        explode: true
        in: query
        name: timeRange
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A state filter
        explode: true
        in: query
        name: state
        required: false
        schema:
          items:
            $ref: '#/components/schemas/State.Type'
          nullable: true
          type: array
        style: form
      - description: A labels filter as a list of 'key:value'
        explode: true
        in: query
        name: labels
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: The trigger execution id
        explode: true
        in: query
        name: triggerExecutionId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A execution child filter
        explode: true
        in: query
        name: childFilter
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/ExecutionRepositoryInterface.ChildFilter'
          nullable: true
        style: form
      - description: The new status of the executions
        explode: true
        in: query
        name: newStatus
        required: true
        schema:
          $ref: '#/components/schemas/State.Type'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkResponse'
          description: On success
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkErrorResponse'
          description: Changed status with errors
      summary: Change executions status by query parameters
      tags:
      - Executions
      x-accepts:
      - application/json
  /api/v1/executions/flows/{namespace}/{flowId}:
    get:
      operationId: getFlowForExecution
      parameters:
      - description: The namespace of the flow
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The flow id
        explode: false
        in: path
        name: flowId
        required: true
        schema:
          type: string
        style: simple
      - description: The flow revision
        explode: true
        in: query
        name: revision
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlowForExecution'
          description: getFlowForExecution 200 response
      summary: Get flow information's for an execution
      tags:
      - Executions
      x-accepts:
      - application/json
  /api/v1/executions/force-run/by-ids:
    post:
      operationId: forceRunByIds
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkResponse'
          description: On success
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkErrorResponse'
          description: Force run with errors
      summary: Force run a list of executions
      tags:
      - Executions
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/executions/force-run/by-query:
    post:
      operationId: forceRunByQuery
      parameters:
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The scope of the executions to include
        explode: true
        in: query
        name: scope
        required: false
        schema:
          items:
            $ref: '#/components/schemas/FlowScope'
          nullable: true
          type: array
        style: form
      - description: A namespace filter prefix
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A flow id filter
        explode: true
        in: query
        name: flowId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The start datetime
        explode: true
        in: query
        name: startDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: The end datetime
        explode: true
        in: query
        name: endDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: A time range filter relative to the current time
        examples:
          Filter last 5 minutes:
            value: PT5M
          Filter last 24 hours:
            value: P1D
        explode: true
        in: query
        name: timeRange
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A state filter
        explode: true
        in: query
        name: state
        required: false
        schema:
          items:
            $ref: '#/components/schemas/State.Type'
          nullable: true
          type: array
        style: form
      - description: A labels filter as a list of 'key:value'
        explode: true
        in: query
        name: labels
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: The trigger execution id
        explode: true
        in: query
        name: triggerExecutionId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A execution child filter
        explode: true
        in: query
        name: childFilter
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/ExecutionRepositoryInterface.ChildFilter'
          nullable: true
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: forceRunByQuery 200 response
      summary: Force run executions filter by query parameters
      tags:
      - Executions
      x-accepts:
      - application/json
  /api/v1/executions/kill/by-ids:
    delete:
      operationId: killByIds
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkResponse'
          description: On success
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkErrorResponse'
          description: Killed with errors
      summary: Kill a list of executions
      tags:
      - Executions
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/executions/kill/by-query:
    delete:
      operationId: killByQuery
      parameters:
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The scope of the executions to include
        explode: true
        in: query
        name: scope
        required: false
        schema:
          items:
            $ref: '#/components/schemas/FlowScope'
          nullable: true
          type: array
        style: form
      - description: A namespace filter prefix
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A flow id filter
        explode: true
        in: query
        name: flowId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The start datetime
        explode: true
        in: query
        name: startDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: The end datetime
        explode: true
        in: query
        name: endDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: A time range filter relative to the current time
        examples:
          Filter last 5 minutes:
            value: PT5M
          Filter last 24 hours:
            value: P1D
        explode: true
        in: query
        name: timeRange
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A state filter
        explode: true
        in: query
        name: state
        required: false
        schema:
          items:
            $ref: '#/components/schemas/State.Type'
          nullable: true
          type: array
        style: form
      - description: A labels filter as a list of 'key:value'
        explode: true
        in: query
        name: labels
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: The trigger execution id
        explode: true
        in: query
        name: triggerExecutionId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A execution child filter
        explode: true
        in: query
        name: childFilter
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/ExecutionRepositoryInterface.ChildFilter'
          nullable: true
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: killByQuery 200 response
      summary: Kill executions filter by query parameters
      tags:
      - Executions
      x-accepts:
      - application/json
  /api/v1/executions/labels/by-ids:
    post:
      operationId: setLabelsByIds
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExecutionController.SetLabelsByIdsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkResponse'
          description: On success
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkErrorResponse'
          description: Killed with errors
      summary: Set labels on a list of executions
      tags:
      - Executions
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/executions/labels/by-query:
    post:
      operationId: setLabelsByQuery
      parameters:
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The scope of the executions to include
        explode: true
        in: query
        name: scope
        required: false
        schema:
          items:
            $ref: '#/components/schemas/FlowScope'
          nullable: true
          type: array
        style: form
      - description: A namespace filter prefix
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A flow id filter
        explode: true
        in: query
        name: flowId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The start datetime
        explode: true
        in: query
        name: startDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: The end datetime
        explode: true
        in: query
        name: endDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: A time range filter relative to the current time
        examples:
          Filter last 5 minutes:
            value: PT5M
          Filter last 24 hours:
            value: P1D
        explode: true
        in: query
        name: timeRange
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A state filter
        explode: true
        in: query
        name: state
        required: false
        schema:
          items:
            $ref: '#/components/schemas/State.Type'
          nullable: true
          type: array
        style: form
      - description: A labels filter as a list of 'key:value'
        explode: true
        in: query
        name: labels
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: The trigger execution id
        explode: true
        in: query
        name: triggerExecutionId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A execution child filter
        explode: true
        in: query
        name: childFilter
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/ExecutionRepositoryInterface.ChildFilter'
          nullable: true
        style: form
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Label'
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: setLabelsByQuery 200 response
      summary: Set label on executions filter by query parameters
      tags:
      - Executions
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/executions/namespaces:
    get:
      operationId: listDistinctNamespace
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: listDistinctNamespace 200 response
      summary: Get all namespaces that have executable flows
      tags:
      - Executions
      x-accepts:
      - application/json
  /api/v1/executions/namespaces/{namespace}/flows:
    get:
      operationId: getFlowsByNamespace
      parameters:
      - description: The namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FlowForExecution'
                type: array
          description: getFlowsByNamespace 200 response
      summary: Get all flow ids for a namespace
      tags:
      - Executions
      x-accepts:
      - application/json
  /api/v1/executions/pause/by-ids:
    post:
      operationId: pauseByIds
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkResponse'
          description: On success
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkErrorResponse'
          description: Paused with errors
      summary: Pause a list of running executions
      tags:
      - Executions
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/executions/pause/by-query:
    post:
      operationId: pauseByQuery
      parameters:
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The scope of the executions to include
        explode: true
        in: query
        name: scope
        required: false
        schema:
          items:
            $ref: '#/components/schemas/FlowScope'
          nullable: true
          type: array
        style: form
      - description: A namespace filter prefix
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A flow id filter
        explode: true
        in: query
        name: flowId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The start datetime
        explode: true
        in: query
        name: startDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: The end datetime
        explode: true
        in: query
        name: endDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: A time range filter relative to the current time
        examples:
          Filter last 5 minutes:
            value: PT5M
          Filter last 24 hours:
            value: P1D
        explode: true
        in: query
        name: timeRange
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A state filter
        explode: true
        in: query
        name: state
        required: false
        schema:
          items:
            $ref: '#/components/schemas/State.Type'
          nullable: true
          type: array
        style: form
      - description: A labels filter as a list of 'key:value'
        explode: true
        in: query
        name: labels
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: The trigger execution id
        explode: true
        in: query
        name: triggerExecutionId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A execution child filter
        explode: true
        in: query
        name: childFilter
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/ExecutionRepositoryInterface.ChildFilter'
          nullable: true
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: pauseByQuery 200 response
      summary: Pause executions filter by query parameters
      tags:
      - Executions
      x-accepts:
      - application/json
  /api/v1/executions/replay/by-ids:
    post:
      operationId: replayByIds
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkResponse'
          description: On success
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkErrorResponse'
          description: Replayed with errors
      summary: Create new executions from old ones. Keep the flow revision
      tags:
      - Executions
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/executions/replay/by-query:
    post:
      operationId: replayByQuery
      parameters:
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The scope of the executions to include
        explode: true
        in: query
        name: scope
        required: false
        schema:
          items:
            $ref: '#/components/schemas/FlowScope'
          nullable: true
          type: array
        style: form
      - description: A namespace filter prefix
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A flow id filter
        explode: true
        in: query
        name: flowId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The start datetime
        explode: true
        in: query
        name: startDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: The end datetime
        explode: true
        in: query
        name: endDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: A time range filter relative to the current time
        examples:
          Filter last 5 minutes:
            value: PT5M
          Filter last 24 hours:
            value: P1D
        explode: true
        in: query
        name: timeRange
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A state filter
        explode: true
        in: query
        name: state
        required: false
        schema:
          items:
            $ref: '#/components/schemas/State.Type'
          nullable: true
          type: array
        style: form
      - description: A labels filter as a list of 'key:value'
        explode: true
        in: query
        name: labels
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: The trigger execution id
        explode: true
        in: query
        name: triggerExecutionId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A execution child filter
        explode: true
        in: query
        name: childFilter
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/ExecutionRepositoryInterface.ChildFilter'
          nullable: true
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: replayByQuery 200 response
      summary: Create new executions from old ones filter by query parameters. Keep
        the flow revision
      tags:
      - Executions
      x-accepts:
      - application/json
  /api/v1/executions/restart/by-ids:
    post:
      operationId: restartByIds
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkResponse'
          description: On success
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkErrorResponse'
          description: Restarted with errors
      summary: Restart a list of executions
      tags:
      - Executions
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/executions/restart/by-query:
    post:
      operationId: restartByQuery
      parameters:
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The scope of the executions to include
        explode: true
        in: query
        name: scope
        required: false
        schema:
          items:
            $ref: '#/components/schemas/FlowScope'
          nullable: true
          type: array
        style: form
      - description: A namespace filter prefix
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A flow id filter
        explode: true
        in: query
        name: flowId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The start datetime
        explode: true
        in: query
        name: startDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: The end datetime
        explode: true
        in: query
        name: endDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: A time range filter relative to the current time
        examples:
          Filter last 5 minutes:
            value: PT5M
          Filter last 24 hours:
            value: P1D
        explode: true
        in: query
        name: timeRange
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A state filter
        explode: true
        in: query
        name: state
        required: false
        schema:
          items:
            $ref: '#/components/schemas/State.Type'
          nullable: true
          type: array
        style: form
      - description: A labels filter as a list of 'key:value'
        explode: true
        in: query
        name: labels
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: The trigger execution id
        explode: true
        in: query
        name: triggerExecutionId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A execution child filter
        explode: true
        in: query
        name: childFilter
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/ExecutionRepositoryInterface.ChildFilter'
          nullable: true
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: restartByQuery 200 response
      summary: Restart executions filter by query parameters
      tags:
      - Executions
      x-accepts:
      - application/json
  /api/v1/executions/resume/by-ids:
    post:
      operationId: resumeByIds
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkResponse'
          description: On success
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkErrorResponse'
          description: Resumed with errors
      summary: Resume a list of paused executions
      tags:
      - Executions
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/executions/resume/by-query:
    post:
      operationId: resumeByQuery
      parameters:
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The scope of the executions to include
        explode: true
        in: query
        name: scope
        required: false
        schema:
          items:
            $ref: '#/components/schemas/FlowScope'
          nullable: true
          type: array
        style: form
      - description: A namespace filter prefix
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A flow id filter
        explode: true
        in: query
        name: flowId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The start datetime
        explode: true
        in: query
        name: startDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: The end datetime
        explode: true
        in: query
        name: endDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: A time range filter relative to the current time
        examples:
          Filter last 5 minutes:
            value: PT5M
          Filter last 24 hours:
            value: P1D
        explode: true
        in: query
        name: timeRange
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A state filter
        explode: true
        in: query
        name: state
        required: false
        schema:
          items:
            $ref: '#/components/schemas/State.Type'
          nullable: true
          type: array
        style: form
      - description: A labels filter as a list of 'key:value'
        explode: true
        in: query
        name: labels
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: The trigger execution id
        explode: true
        in: query
        name: triggerExecutionId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A execution child filter
        explode: true
        in: query
        name: childFilter
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/ExecutionRepositoryInterface.ChildFilter'
          nullable: true
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: resumeByQuery 200 response
      summary: Resume executions filter by query parameters
      tags:
      - Executions
      x-accepts:
      - application/json
  /api/v1/executions/search:
    get:
      operationId: find_4
      parameters:
      - description: The current page
        explode: true
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: The current page size
        explode: true
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: The sort of current page
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The scope of the executions to include
        explode: true
        in: query
        name: scope
        required: false
        schema:
          items:
            $ref: '#/components/schemas/FlowScope'
          nullable: true
          type: array
        style: form
      - description: A namespace filter prefix
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A flow id filter
        explode: true
        in: query
        name: flowId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The start datetime
        explode: true
        in: query
        name: startDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: The end datetime
        explode: true
        in: query
        name: endDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: A time range filter relative to the current time
        examples:
          Filter last 5 minutes:
            value: PT5M
          Filter last 24 hours:
            value: P1D
        explode: true
        in: query
        name: timeRange
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A state filter
        explode: true
        in: query
        name: state
        required: false
        schema:
          items:
            $ref: '#/components/schemas/State.Type'
          nullable: true
          type: array
        style: form
      - description: A labels filter as a list of 'key:value'
        explode: true
        in: query
        name: labels
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: The trigger execution id
        explode: true
        in: query
        name: triggerExecutionId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A execution child filter
        explode: true
        in: query
        name: childFilter
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/ExecutionRepositoryInterface.ChildFilter'
          nullable: true
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResults_Execution_'
          description: find_4 200 response
      summary: Search for executions
      tags:
      - Executions
      x-accepts:
      - application/json
  /api/v1/executions/trigger/{namespace}/{id}:
    post:
      operationId: trigger
      parameters:
      - description: The flow namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The flow id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The labels as a list of 'key:value'
        explode: true
        in: query
        name: labels
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: If the server will wait the end of the execution
        explode: true
        in: query
        name: wait
        required: true
        schema:
          default: false
          type: boolean
        style: form
      - description: The flow revision or latest if null
        explode: true
        in: query
        name: revision
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
      requestBody:
        content:
          multipart/form-data:
            schema:
              items:
                format: binary
                type: string
              nullable: true
              type: array
      responses:
        "409":
          description: if the flow is disabled
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ExecutionController.ExecutionResponse'
                type: array
          description: trigger 200 response
      summary: Trigger a new execution for a flow
      tags:
      - Executions
      x-content-type: multipart/form-data
      x-accepts:
      - application/json
  /api/v1/executions/unqueue/by-ids:
    post:
      operationId: unqueueByIds
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkResponse'
          description: On success
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkErrorResponse'
          description: Unqueued with errors
      summary: Unqueue a list of executions
      tags:
      - Executions
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/executions/unqueue/by-query:
    post:
      operationId: unqueueByQuery
      parameters:
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The scope of the executions to include
        explode: true
        in: query
        name: scope
        required: false
        schema:
          items:
            $ref: '#/components/schemas/FlowScope'
          nullable: true
          type: array
        style: form
      - description: A namespace filter prefix
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A flow id filter
        explode: true
        in: query
        name: flowId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The start datetime
        explode: true
        in: query
        name: startDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: The end datetime
        explode: true
        in: query
        name: endDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: A time range filter relative to the current time
        examples:
          Filter last 5 minutes:
            value: PT5M
          Filter last 24 hours:
            value: P1D
        explode: true
        in: query
        name: timeRange
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A state filter
        explode: true
        in: query
        name: state
        required: false
        schema:
          items:
            $ref: '#/components/schemas/State.Type'
          nullable: true
          type: array
        style: form
      - description: A labels filter as a list of 'key:value'
        explode: true
        in: query
        name: labels
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: The trigger execution id
        explode: true
        in: query
        name: triggerExecutionId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A execution child filter
        explode: true
        in: query
        name: childFilter
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/ExecutionRepositoryInterface.ChildFilter'
          nullable: true
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: unqueueByQuery 200 response
      summary: Unqueue executions filter by query parameters
      tags:
      - Executions
      x-accepts:
      - application/json
  /api/v1/executions/webhook/{namespace}/{id}/{key}:
    get:
      operationId: webhookTriggerGet
      parameters:
      - description: The flow namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The flow id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The webhook trigger uid
        explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Execution'
          description: webhookTriggerGet 200 response
      summary: Trigger a new execution by GET webhook trigger
      tags:
      - Executions
      x-accepts:
      - application/json
    post:
      operationId: webhookTriggerPost
      parameters:
      - description: The flow namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The flow id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The webhook trigger uid
        explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Execution'
          description: webhookTriggerPost 200 response
      summary: Trigger a new execution by POST webhook trigger
      tags:
      - Executions
      x-accepts:
      - application/json
    put:
      operationId: webhookTriggerPut
      parameters:
      - description: The flow namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The flow id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The webhook trigger uid
        explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Execution'
          description: webhookTriggerPut 200 response
      summary: Trigger a new execution by PUT webhook trigger
      tags:
      - Executions
      x-accepts:
      - application/json
  /api/v1/executions/{executionId}:
    delete:
      operationId: delete_4
      parameters:
      - description: The execution id
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      - description: Whether to delete execution logs
        explode: true
        in: query
        name: deleteLogs
        required: true
        schema:
          default: true
          type: boolean
        style: form
      - description: Whether to delete execution metrics
        explode: true
        in: query
        name: deleteMetrics
        required: true
        schema:
          default: true
          type: boolean
        style: form
      - description: Whether to delete execution files in the internal storage
        explode: true
        in: query
        name: deleteStorage
        required: true
        schema:
          default: true
          type: boolean
        style: form
      responses:
        "204":
          description: On success
        "200":
          description: delete_4 200 response
      summary: Delete an execution
      tags:
      - Executions
      x-accepts:
      - application/json
    get:
      operationId: get_2
      parameters:
      - description: The execution id
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Execution'
          description: get_2 200 response
      summary: Get an execution
      tags:
      - Executions
      x-accepts:
      - application/json
  /api/v1/executions/{executionId}/change-status:
    post:
      operationId: changeStatus
      parameters:
      - description: The execution id
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      - description: The new status of the execution
        explode: true
        in: query
        name: status
        required: true
        schema:
          $ref: '#/components/schemas/State.Type'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Execution'
          description: changeStatus 200 response
      summary: Change the status of an execution
      tags:
      - Executions
      x-accepts:
      - application/json
  /api/v1/executions/{executionId}/eval/{taskRunId}:
    post:
      operationId: eval
      parameters:
      - description: The execution id
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      - description: The taskrun id
        explode: false
        in: path
        name: taskRunId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          text/plain:
            schema:
              type: string
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecutionController.EvalResult'
          description: eval 200 response
      summary: Evaluate a variable expression for this taskrun
      tags:
      - Executions
      x-content-type: text/plain
      x-accepts:
      - application/json
  /api/v1/executions/{executionId}/file:
    get:
      operationId: file
      parameters:
      - description: The execution id
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      - description: The internal storage uri
        explode: true
        in: query
        name: path
        required: true
        schema:
          format: uri
          type: string
        style: form
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: file 200 response
      summary: Download file for an execution
      tags:
      - Executions
      x-accepts:
      - application/octet-stream
  /api/v1/executions/{executionId}/file/metas:
    get:
      operationId: filesize
      parameters:
      - description: The execution id
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      - description: The internal storage uri
        explode: true
        in: query
        name: path
        required: true
        schema:
          format: uri
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileMetas'
          description: filesize 200 response
      summary: Get file meta information for an execution
      tags:
      - Executions
      x-accepts:
      - application/json
  /api/v1/executions/{executionId}/file/preview:
    get:
      operationId: filePreview
      parameters:
      - description: The execution id
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      - description: The internal storage uri
        explode: true
        in: query
        name: path
        required: true
        schema:
          format: uri
          type: string
        style: form
      - description: The max row returns
        explode: true
        in: query
        name: maxRows
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - description: The file encoding as Java charset name. Defaults to UTF-8
        example: ISO-8859-1
        explode: true
        in: query
        name: encoding
        required: true
        schema:
          default: UTF-8
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: filePreview 200 response
      summary: Get file preview for an execution
      tags:
      - Executions
      x-accepts:
      - application/json
  /api/v1/executions/{executionId}/flow:
    get:
      operationId: getFlowForExecutionById
      parameters:
      - description: The execution that you want flow information's
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlowForExecution'
          description: getFlowForExecutionById 200 response
      summary: Get flow information's for an execution
      tags:
      - Executions
      x-accepts:
      - application/json
  /api/v1/executions/{executionId}/follow:
    get:
      operationId: follow
      parameters:
      - description: The execution id
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/event-stream:
              schema:
                $ref: '#/components/schemas/Event_Execution_'
          description: follow 200 response
      summary: Follow an execution
      tags:
      - Executions
      x-accepts:
      - text/event-stream
  /api/v1/executions/{executionId}/force-run:
    post:
      operationId: forceRun
      parameters:
      - description: The execution id
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Execution'
          description: forceRun 200 response
      summary: Force run an execution
      tags:
      - Executions
      x-accepts:
      - application/json
  /api/v1/executions/{executionId}/graph:
    get:
      operationId: flowGraph
      parameters:
      - description: The execution id
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      - description: The subflow tasks to display
        explode: true
        in: query
        name: subflows
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlowGraph'
          description: flowGraph 200 response
      summary: Generate a graph for an execution
      tags:
      - Executions
      x-accepts:
      - application/json
  /api/v1/executions/{executionId}/kill:
    delete:
      operationId: kill
      parameters:
      - description: The execution id
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      - description: Specifies whether killing the execution also kill all subflow
          executions.
        explode: true
        in: query
        name: isOnKillCascade
        required: true
        schema:
          default: true
          type: boolean
        style: form
      responses:
        "202":
          description: Execution kill was requested successfully
        "409":
          description: if the executions is already finished
        "404":
          description: if the executions is not found
        "200":
          content:
            text/json:
              schema:
                type: object
          description: kill 200 response
      summary: Kill an execution
      tags:
      - Executions
      x-accepts:
      - text/json
  /api/v1/executions/{executionId}/labels:
    post:
      operationId: setLabels
      parameters:
      - description: The execution id
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Label'
              type: array
        required: true
      responses:
        "404":
          description: If the execution cannot be found
        "400":
          description: If the execution is not terminated
        "200":
          content:
            application/json:
              schema:
                type: object
          description: setLabels 200 response
      summary: Add or update labels of a terminated execution
      tags:
      - Executions
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/executions/{executionId}/pause:
    post:
      operationId: pause
      parameters:
      - description: The execution id
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: On success
        "409":
          description: if the executions is not running
        "200":
          description: pause 200 response
      summary: Pause a running execution.
      tags:
      - Executions
      x-accepts:
      - application/json
  /api/v1/executions/{executionId}/replay:
    post:
      operationId: replay
      parameters:
      - description: the original execution id to clone
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      - description: The taskrun id
        explode: true
        in: query
        name: taskRunId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The flow revision to use for new execution
        explode: true
        in: query
        name: revision
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Execution'
          description: replay 200 response
      summary: Create a new execution from an old one and start it from a specified
        task run id
      tags:
      - Executions
      x-accepts:
      - application/json
  /api/v1/executions/{executionId}/restart:
    post:
      operationId: restart
      parameters:
      - description: The execution id
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      - description: The flow revision to use for new execution
        explode: true
        in: query
        name: revision
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Execution'
          description: restart 200 response
      summary: Restart a new execution from an old one
      tags:
      - Executions
      x-accepts:
      - application/json
  /api/v1/executions/{executionId}/resume:
    post:
      operationId: resume
      parameters:
      - description: The execution id
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              items:
                format: binary
                type: string
              type: array
        required: true
      responses:
        "204":
          description: On success
        "409":
          description: if the executions is not paused
        "200":
          content:
            application/json:
              schema:
                type: object
          description: resume 200 response
      summary: Resume a paused execution.
      tags:
      - Executions
      x-content-type: multipart/form-data
      x-accepts:
      - application/json
  /api/v1/executions/{executionId}/resume/validate:
    post:
      operationId: validateInputsOnResume
      parameters:
      - description: The execution id
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              items:
                format: binary
                type: string
              type: array
        required: true
      responses:
        "204":
          description: On success
        "409":
          description: if the executions is not paused
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ExecutionController.ApiValidateExecutionInputsResponse'
                type: array
          description: validateInputsOnResume 200 response
      summary: Validate inputs to resume a paused execution.
      tags:
      - Executions
      x-content-type: multipart/form-data
      x-accepts:
      - application/json
  /api/v1/executions/{executionId}/state:
    post:
      operationId: changeState
      parameters:
      - description: The execution id
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExecutionController.StateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Execution'
          description: changeState 200 response
      summary: Change state for a taskrun in an execution
      tags:
      - Executions
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/executions/{executionId}/unqueue:
    post:
      operationId: unqueue
      parameters:
      - description: The execution id
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Execution'
          description: unqueue 200 response
      summary: Unqueue an execution
      tags:
      - Executions
      x-accepts:
      - application/json
  /api/v1/executions/{namespace}/{id}:
    post:
      operationId: create_4
      parameters:
      - description: The flow namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The flow id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The labels as a list of 'key:value'
        explode: true
        in: query
        name: labels
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: If the server will wait the end of the execution
        explode: true
        in: query
        name: wait
        required: true
        schema:
          default: false
          type: boolean
        style: form
      - description: The flow revision or latest if null
        explode: true
        in: query
        name: revision
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
      - description: Schedule the flow on a specific date
        explode: true
        in: query
        name: scheduleDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      requestBody:
        content:
          multipart/form-data:
            schema:
              items:
                format: binary
                type: string
              nullable: true
              type: array
      responses:
        "409":
          description: if the flow is disabled
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ExecutionController.ExecutionResponse'
                type: array
          description: create_4 200 response
      summary: Create a new execution for a flow
      tags:
      - Executions
      x-content-type: multipart/form-data
      x-accepts:
      - application/json
  /api/v1/executions/{namespace}/{id}/validate:
    post:
      operationId: validateInputsOnCreate
      parameters:
      - description: The flow namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The flow id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The labels as a list of 'key:value'
        explode: true
        in: query
        name: labels
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: The flow revision or latest if null
        explode: true
        in: query
        name: revision
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
      requestBody:
        content:
          multipart/form-data:
            schema:
              items:
                format: binary
                type: string
              type: array
        required: true
      responses:
        "409":
          description: if the flow is disabled
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ExecutionController.ApiValidateExecutionInputsResponse'
                type: array
          description: validateInputsOnCreate 200 response
      summary: Validate the creation of a new execution for a flow
      tags:
      - Executions
      x-content-type: multipart/form-data
      x-accepts:
      - application/json
  /api/v1/flows:
    post:
      deprecated: true
      operationId: create_5
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Flow'
            example: null
          application/x-yaml:
            schema:
              type: string
            example: null
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/create_5_200_response'
              example: null
          description: create_5 200 response
      summary: Create a flow from json object
      tags:
      - Flows
      x-content-type: '*/*'
      x-accepts:
      - application/json
  /api/v1/flows/bulk:
    post:
      description: |-
        All flow will be created / updated for this namespace.
        Flow that already created but not in `flows` will be deleted if the query delete is `true`
      operationId: bulkUpdate
      parameters:
      - description: If missing flow should be deleted
        explode: true
        in: query
        name: delete
        required: true
        schema:
          default: true
          type: boolean
        style: form
      requestBody:
        content:
          application/x-yaml:
            schema:
              type: string
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FlowWithSource'
                type: array
          description: bulkUpdate 200 response
      summary: Update from multiples yaml sources
      tags:
      - Flows
      x-content-type: application/x-yaml
      x-accepts:
      - application/json
  /api/v1/flows/delete/by-ids:
    delete:
      operationId: deleteByIds_1
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/IdWithNamespace'
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkResponse'
          description: deleteByIds_1 200 response
      summary: Delete flows by their IDs.
      tags:
      - Flows
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/flows/delete/by-query:
    delete:
      operationId: deleteByQuery_1
      parameters:
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The scope of the flows to include
        explode: true
        in: query
        name: scope
        required: false
        schema:
          items:
            $ref: '#/components/schemas/FlowScope'
          nullable: true
          type: array
        style: form
      - description: A namespace filter prefix
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A labels filter as a list of 'key:value'
        explode: true
        in: query
        name: labels
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkResponse'
          description: deleteByQuery_1 200 response
      summary: Delete flows returned by the query parameters.
      tags:
      - Flows
      x-accepts:
      - application/json
  /api/v1/flows/disable/by-ids:
    post:
      operationId: disableByIds
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/IdWithNamespace'
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkResponse'
          description: disableByIds 200 response
      summary: Disable flows by their IDs.
      tags:
      - Flows
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/flows/disable/by-query:
    post:
      operationId: disableByQuery
      parameters:
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The scope of the flows to include
        explode: true
        in: query
        name: scope
        required: false
        schema:
          items:
            $ref: '#/components/schemas/FlowScope'
          nullable: true
          type: array
        style: form
      - description: A namespace filter prefix
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A labels filter as a list of 'key:value'
        explode: true
        in: query
        name: labels
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkResponse'
          description: disableByQuery 200 response
      summary: Disable flows returned by the query parameters.
      tags:
      - Flows
      x-accepts:
      - application/json
  /api/v1/flows/distinct-namespaces:
    get:
      operationId: listDistinctNamespace_1
      parameters:
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: listDistinctNamespace_1 200 response
      summary: List all distinct namespaces
      tags:
      - Flows
      x-accepts:
      - application/json
  /api/v1/flows/enable/by-ids:
    post:
      operationId: enableByIds
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/IdWithNamespace'
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkResponse'
          description: enableByIds 200 response
      summary: Enable flows by their IDs.
      tags:
      - Flows
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/flows/enable/by-query:
    post:
      operationId: enableByQuery
      parameters:
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The scope of the flows to include
        explode: true
        in: query
        name: scope
        required: false
        schema:
          items:
            $ref: '#/components/schemas/FlowScope'
          nullable: true
          type: array
        style: form
      - description: A namespace filter prefix
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A labels filter as a list of 'key:value'
        explode: true
        in: query
        name: labels
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkResponse'
          description: enableByQuery 200 response
      summary: Enable flows returned by the query parameters.
      tags:
      - Flows
      x-accepts:
      - application/json
  /api/v1/flows/export/by-ids:
    post:
      operationId: exportByIds
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/IdWithNamespace'
              type: array
        required: true
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                items:
                  format: byte
                  type: string
                type: array
          description: exportByIds 200 response
      summary: Export flows as a ZIP archive of yaml sources.
      tags:
      - Flows
      x-content-type: application/json
      x-accepts:
      - application/octet-stream
  /api/v1/flows/export/by-query:
    get:
      operationId: exportByQuery
      parameters:
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The scope of the flows to include
        explode: true
        in: query
        name: scope
        required: false
        schema:
          items:
            $ref: '#/components/schemas/FlowScope'
          nullable: true
          type: array
        style: form
      - description: A namespace filter prefix
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A labels filter as a list of 'key:value'
        explode: true
        in: query
        name: labels
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                items:
                  format: byte
                  type: string
                type: array
          description: exportByQuery 200 response
      summary: Export flows as a ZIP archive of yaml sources.
      tags:
      - Flows
      x-accepts:
      - application/octet-stream
  /api/v1/flows/graph:
    post:
      operationId: flowGraphSource
      parameters:
      - description: The subflow tasks to display
        explode: true
        in: query
        name: subflows
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      requestBody:
        content:
          application/x-yaml:
            schema:
              type: string
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlowGraph'
          description: flowGraphSource 200 response
      summary: Generate a graph for a flow source
      tags:
      - Flows
      x-content-type: application/x-yaml
      x-accepts:
      - application/json
  /api/v1/flows/import:
    post:
      operationId: importFlows
      requestBody:
        content:
          multipart/form-data:
            encoding:
              fileUpload:
                contentType: application/octet-stream
                style: form
            schema:
              $ref: '#/components/schemas/importFlows_request'
        required: true
      responses:
        "204":
          description: On success
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: importFlows 200 response
      summary: |2
            Import flows as a ZIP archive of yaml sources or a multi-objects YAML file.
            When sending a Yaml that contains one or more flows, a list of index is returned.
            When sending a ZIP archive, a list of files that couldn't be imported is returned.
      tags:
      - Flows
      x-content-type: multipart/form-data
      x-accepts:
      - application/json
  /api/v1/flows/search:
    get:
      operationId: find_5
      parameters:
      - description: The current page
        explode: true
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: The current page size
        explode: true
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: The sort of current page
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The scope of the flows to include
        explode: true
        in: query
        name: scope
        required: false
        schema:
          items:
            $ref: '#/components/schemas/FlowScope'
          nullable: true
          type: array
        style: form
      - description: A namespace filter prefix
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A labels filter as a list of 'key:value'
        explode: true
        in: query
        name: labels
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResults_Flow_'
          description: find_5 200 response
      summary: Search for flows
      tags:
      - Flows
      x-accepts:
      - application/json
  /api/v1/flows/source:
    get:
      operationId: source
      parameters:
      - description: The current page
        explode: true
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: The current page size
        explode: true
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: The sort of current page
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A namespace filter prefix
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResults_SearchResult_Flow__'
          description: source 200 response
      summary: Search for flows source code
      tags:
      - Flows
      x-accepts:
      - application/json
  /api/v1/flows/validate:
    post:
      operationId: validateFlows
      requestBody:
        content:
          application/x-yaml:
            schema:
              type: string
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ValidateConstraintViolation'
                type: array
          description: validateFlows 200 response
      summary: Validate a list of flows
      tags:
      - Flows
      x-content-type: application/x-yaml
      x-accepts:
      - application/json
  /api/v1/flows/validate/task:
    post:
      operationId: validateTask
      parameters:
      - description: Type of task
        explode: true
        in: query
        name: section
        required: true
        schema:
          $ref: '#/components/schemas/FlowController.TaskValidationType'
        style: form
      requestBody:
        content:
          application/x-yaml:
            schema:
              type: string
            example: null
          application/json:
            schema:
              type: string
            example: null
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateConstraintViolation'
          description: validateTask 200 response
      summary: Validate a list of flows
      tags:
      - Flows
      x-content-type: application/x-yaml
      x-accepts:
      - application/json
  /api/v1/flows/validate/trigger:
    post:
      operationId: validateTrigger
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateConstraintViolation'
          description: validateTrigger 200 response
      summary: Validate trigger
      tags:
      - Flows
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/flows/{namespace}:
    get:
      operationId: getFlowsByNamespace_1
      parameters:
      - description: Namespace to filter flows
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Flow'
                type: array
          description: getFlowsByNamespace_1 200 response
      summary: Retrieve all flows from a given namespace
      tags:
      - Flows
      x-accepts:
      - application/json
    post:
      deprecated: true
      description: |-
        All flow will be created / updated for this namespace.
        Flow that already created but not in `flows` will be deleted if the query delete is `true`
      operationId: updateNamespace
      parameters:
      - description: The flow namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: If missing flow should be deleted
        explode: true
        in: query
        name: delete
        required: true
        schema:
          default: true
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Flow'
              type: array
            example: null
          application/x-yaml:
            schema:
              type: string
            example: null
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/updateNamespace_200_response'
              example: null
          description: updateNamespace 200 response
      summary: Update a complete namespace from json object
      tags:
      - Flows
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/flows/{namespace}/{id}:
    delete:
      operationId: delete_5
      parameters:
      - description: The flow namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The flow id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: On success
        "200":
          description: delete_5 200 response
      summary: Delete a flow
      tags:
      - Flows
      x-accepts:
      - application/json
    get:
      operationId: index_3
      parameters:
      - description: The flow namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The flow id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Include the source code
        explode: true
        in: query
        name: source
        required: true
        schema:
          default: false
          type: boolean
        style: form
      - description: Get latest revision by default
        explode: true
        in: query
        name: revision
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
      - description: Get flow even if deleted
        explode: true
        in: query
        name: allowDeleted
        required: true
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: index_3 200 response
      summary: Get a flow
      tags:
      - Flows
      x-accepts:
      - application/json
    put:
      deprecated: true
      operationId: update_3
      parameters:
      - description: The flow namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The flow id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/x-yaml:
            schema:
              type: string
            example: null
          '*/*':
            schema:
              $ref: '#/components/schemas/Flow'
            example: null
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/update_3_200_response'
              example: null
          description: update_3 200 response
      summary: Update a flow
      tags:
      - Flows
      x-content-type: application/x-yaml
      x-accepts:
      - application/json
  /api/v1/flows/{namespace}/{id}/dependencies:
    get:
      operationId: dependencies
      parameters:
      - description: The flow namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The flow id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: "if true, list only destination dependencies, otherwise list\
          \ also source dependencies"
        explode: true
        in: query
        name: destinationOnly
        required: true
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlowTopologyGraph'
          description: dependencies 200 response
      summary: Get flow dependencies
      tags:
      - Flows
      x-accepts:
      - application/json
  /api/v1/flows/{namespace}/{id}/graph:
    get:
      operationId: flowGraph_1
      parameters:
      - description: The flow namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The flow id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The flow revision
        explode: true
        in: query
        name: revision
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
      - description: The subflow tasks to display
        explode: true
        in: query
        name: subflows
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlowGraph'
          description: flowGraph_1 200 response
      summary: Generate a graph for a flow
      tags:
      - Flows
      x-accepts:
      - application/json
  /api/v1/flows/{namespace}/{id}/revisions:
    get:
      operationId: revisions
      parameters:
      - description: The flow namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The flow id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FlowWithSource'
                type: array
          description: revisions 200 response
      summary: Get revisions for a flow
      tags:
      - Flows
      x-accepts:
      - application/json
  /api/v1/flows/{namespace}/{id}/tasks/{taskId}:
    get:
      operationId: flowTask
      parameters:
      - description: The flow namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The flow id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The task id
        explode: false
        in: path
        name: taskId
        required: true
        schema:
          type: string
        style: simple
      - description: The flow revision
        explode: true
        in: query
        name: revision
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: flowTask 200 response
      summary: Get a flow task
      tags:
      - Flows
      x-accepts:
      - application/json
  /api/v1/flows/{namespace}/{id}/{taskId}:
    patch:
      deprecated: true
      operationId: updateTask
      parameters:
      - description: The flow namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The flow id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The task id
        explode: false
        in: path
        name: taskId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Flow'
          description: updateTask 200 response
      summary: Update a single task on a flow
      tags:
      - Flows
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/forgotten-password:
    get:
      description: "Send an email to reset a password. Note that whatever the username\
        \ is found or not, the response will always be 200 to avoid leaking information."
      operationId: forgottenPassword
      parameters:
      - description: User that has forgotten his password
        explode: true
        in: query
        name: username
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: forgottenPassword 200 response
      summary: Send an email to reset a password.
      x-accepts:
      - application/json
  /api/v1/groups:
    post:
      operationId: create_6
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AbstractGroupController.GroupWithMembers'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: create_6 200 response
      summary: Create a group
      tags:
      - Groups
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/groups/autocomplete:
    post:
      operationId: autocomplete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiAutocomplete'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Group'
                type: array
          description: autocomplete 200 response
      summary: List groups for autocomplete
      tags:
      - Groups
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/groups/ids:
    post:
      operationId: ids
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiIds'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Group'
                type: array
          description: ids 200 response
      summary: List groups by ids
      tags:
      - Groups
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/groups/search:
    get:
      operationId: find_6
      parameters:
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The current page
        explode: true
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: The current page size
        explode: true
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      - description: The sort of current page
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResults_Group_'
          description: find_6 200 response
      summary: Search for groups
      tags:
      - Groups
      x-accepts:
      - application/json
  /api/v1/groups/{id}:
    delete:
      operationId: delete_6
      parameters:
      - description: The group id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: On success
      summary: Delete a group
      tags:
      - Groups
      x-accepts:
      - application/json
    get:
      operationId: index_4
      parameters:
      - description: The group id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: index_4 200 response
      summary: Get a group
      tags:
      - Groups
      x-accepts:
      - application/json
    put:
      operationId: update_4
      parameters:
      - description: The group id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: update_4 200 response
      summary: Update a group
      tags:
      - Groups
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/groups/{id}/members:
    get:
      operationId: members
      parameters:
      - description: The group id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The current page
        explode: true
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: The current page size
        explode: true
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      - description: The sort of current page
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResults_ApiUser_'
          description: members 200 response
      summary: Search for users in a group
      tags:
      - Groups
      x-accepts:
      - application/json
  /api/v1/groups/{id}/members/{userId}:
    delete:
      operationId: deleteGroup
      parameters:
      - description: The group id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The user id
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUser'
          description: deleteGroup 200 response
      summary: Delete a group for a user
      tags:
      - Groups
      x-accepts:
      - application/json
    put:
      operationId: addGroup
      parameters:
      - description: The group id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The user id
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUser'
          description: addGroup 200 response
      summary: Add a group for a user
      tags:
      - Groups
      x-accepts:
      - application/json
  /api/v1/integrations/{integration}/scim/v2/Groups:
    get:
      description: Find by a combination of query parameters
      operationId: query
      parameters:
      - explode: true
        in: query
        name: attributes
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: true
        in: query
        name: excludedAttributes
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: true
        in: query
        name: filter
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: true
        in: query
        name: sortBy
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/SortOrder'
          nullable: true
        style: form
      - explode: true
        in: query
        name: startIndex
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
      - explode: false
        in: path
        name: integration
        required: true
        schema:
          type: string
        style: simple
      responses:
        "400":
          description: Bad Request
        "404":
          description: Not found
        "500":
          description: Internal Server Error
        "501":
          description: Not Implemented
        "200":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimResource'
          description: OK response
      summary: "{@inheritDoc}"
      tags:
      - SCIM
      x-accepts:
      - application/scim+json
    post:
      description: Create
      operationId: create_7
      parameters:
      - explode: true
        in: query
        name: attributes
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: true
        in: query
        name: excludedAttributes
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: false
        in: path
        name: integration
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/scim+json:
            schema:
              $ref: '#/components/schemas/ScimUser'
          application/json:
            schema:
              $ref: '#/components/schemas/ScimGroup'
        required: true
      responses:
        "201":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimResource'
          description: Created
        "400":
          description: Bad Request
        "409":
          description: Conflict
        "500":
          description: Internal Server Error
        "501":
          description: Not Implemented
        "200":
          content:
            application/scim+json:
              schema:
                type: object
            application/json:
              schema:
                type: object
          description: create_7 200 response
      summary: "{@inheritDoc}"
      tags:
      - SCIM
      x-content-type: application/scim+json
      x-accepts:
      - application/json
      - application/scim+json
  /api/v1/integrations/{integration}/scim/v2/Groups/.search:
    post:
      description: Search
      operationId: find_7
      parameters:
      - explode: false
        in: path
        name: integration
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/scim+json:
            schema:
              $ref: '#/components/schemas/SearchRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/SearchRequest'
        required: true
      responses:
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
        "501":
          description: Not Implemented
        "200":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimResource'
          description: OK response
      summary: "{@inheritDoc}"
      tags:
      - SCIM
      x-content-type: application/scim+json
      x-accepts:
      - application/scim+json
  /api/v1/integrations/{integration}/scim/v2/Groups/{id}:
    delete:
      description: Delete from the backing store
      operationId: delete_7
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: integration
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "404":
          description: Not found
        "500":
          description: Internal Server Error
        "501":
          description: Not Implemented
        "200":
          content:
            application/scim+json:
              schema:
                type: object
            application/json:
              schema:
                type: object
          description: delete_7 200 response
      summary: "{@inheritDoc}"
      tags:
      - SCIM
      x-accepts:
      - application/json
      - application/scim+json
    get:
      description: Find by id
      operationId: getById
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: attributes
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: true
        in: query
        name: excludedAttributes
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: false
        in: path
        name: integration
        required: true
        schema:
          type: string
        style: simple
      responses:
        "400":
          description: Bad Request
        "404":
          description: Not found
        "500":
          description: Internal Server Error
        "501":
          description: Not Implemented
        "200":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimResource'
          description: OK response
      summary: "{@inheritDoc}"
      tags:
      - SCIM
      x-accepts:
      - application/scim+json
    patch:
      description: Patch a portion of the backing store
      operationId: patch
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: attributes
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: true
        in: query
        name: excludedAttributes
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: false
        in: path
        name: integration
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/scim+json:
            schema:
              $ref: '#/components/schemas/PatchRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchRequest'
        required: true
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "404":
          description: Not found
        "500":
          description: Internal Server Error
        "501":
          description: Not Implemented
        "200":
          content:
            application/scim+json:
              schema:
                type: object
            application/json:
              schema:
                type: object
          description: patch 200 response
      summary: "{@inheritDoc}"
      tags:
      - SCIM
      x-content-type: application/scim+json
      x-accepts:
      - application/json
      - application/scim+json
    put:
      description: Update
      operationId: update_5
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: attributes
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: true
        in: query
        name: excludedAttributes
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: false
        in: path
        name: integration
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/scim+json:
            schema:
              $ref: '#/components/schemas/ScimResource'
          application/json:
            schema:
              $ref: '#/components/schemas/ScimGroup'
        required: true
      responses:
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
        "501":
          description: Not Implemented
        "200":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimResource'
          description: OK response
      summary: "{@inheritDoc}"
      tags:
      - SCIM
      x-content-type: application/scim+json
      x-accepts:
      - application/scim+json
  /api/v1/integrations/{integration}/scim/v2/ResourceTypes:
    get:
      description: Get All Resource Types
      operationId: getAllResourceTypes
      parameters:
      - explode: false
        in: path
        name: integration
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/scim+json:
              schema:
                items:
                  $ref: '#/components/schemas/ResourceType'
                type: array
          description: OK response
      tags:
      - SCIM-Configuration
      x-accepts:
      - application/scim+json
  /api/v1/integrations/{integration}/scim/v2/ResourceTypes/{name}:
    get:
      description: Get Resource Type by URN
      operationId: getResourceType
      parameters:
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: integration
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ResourceType'
          description: OK response
      tags:
      - SCIM-Configuration
      x-accepts:
      - application/scim+json
  /api/v1/integrations/{integration}/scim/v2/Schemas:
    get:
      description: Get All Schemas
      operationId: getAllSchemas
      parameters:
      - explode: false
        in: path
        name: integration
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/scim+json:
              schema:
                items:
                  $ref: '#/components/schemas/Schema'
                type: array
          description: OK response
      tags:
      - SCIM-Configuration
      x-accepts:
      - application/scim+json
  /api/v1/integrations/{integration}/scim/v2/Schemas/{uri}:
    get:
      description: Get Schemas by URN
      operationId: getSchema
      parameters:
      - explode: false
        in: path
        name: uri
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: integration
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/Schema'
          description: OK response
      tags:
      - SCIM-Configuration
      x-accepts:
      - application/scim+json
  /api/v1/integrations/{integration}/scim/v2/ServiceProviderConfig:
    get:
      description: Get Service Provider Configuration
      operationId: getServiceProviderConfiguration
      parameters:
      - explode: false
        in: path
        name: integration
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ServiceProviderConfiguration'
          description: OK response
      tags:
      - SCIM-Configuration
      x-accepts:
      - application/scim+json
  /api/v1/integrations/{integration}/scim/v2/Users:
    get:
      description: Find by a combination of query parameters
      operationId: query_1
      parameters:
      - explode: true
        in: query
        name: attributes
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: true
        in: query
        name: excludedAttributes
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: true
        in: query
        name: filter
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: true
        in: query
        name: sortBy
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/SortOrder'
          nullable: true
        style: form
      - explode: true
        in: query
        name: startIndex
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
      - explode: false
        in: path
        name: integration
        required: true
        schema:
          type: string
        style: simple
      responses:
        "400":
          description: Bad Request
        "404":
          description: Not found
        "500":
          description: Internal Server Error
        "501":
          description: Not Implemented
        "200":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimResource'
          description: OK response
      summary: "{@inheritDoc}"
      tags:
      - SCIM
      x-accepts:
      - application/scim+json
    post:
      description: Create
      operationId: create_8
      parameters:
      - explode: true
        in: query
        name: attributes
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: true
        in: query
        name: excludedAttributes
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: false
        in: path
        name: integration
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/scim+json:
            schema:
              $ref: '#/components/schemas/ScimUser'
          application/json:
            schema:
              $ref: '#/components/schemas/ScimUser'
        required: true
      responses:
        "201":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimResource'
          description: Created
        "400":
          description: Bad Request
        "409":
          description: Conflict
        "500":
          description: Internal Server Error
        "501":
          description: Not Implemented
        "200":
          content:
            application/scim+json:
              schema:
                type: object
            application/json:
              schema:
                type: object
          description: create_8 200 response
      summary: "{@inheritDoc}"
      tags:
      - SCIM
      x-content-type: application/scim+json
      x-accepts:
      - application/json
      - application/scim+json
  /api/v1/integrations/{integration}/scim/v2/Users/.search:
    post:
      description: Search
      operationId: find_8
      parameters:
      - explode: false
        in: path
        name: integration
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/scim+json:
            schema:
              $ref: '#/components/schemas/SearchRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/SearchRequest'
        required: true
      responses:
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
        "501":
          description: Not Implemented
        "200":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimResource'
          description: OK response
      summary: "{@inheritDoc}"
      tags:
      - SCIM
      x-content-type: application/scim+json
      x-accepts:
      - application/scim+json
  /api/v1/integrations/{integration}/scim/v2/Users/{id}:
    delete:
      description: Delete from the backing store
      operationId: delete_8
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: integration
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "404":
          description: Not found
        "500":
          description: Internal Server Error
        "501":
          description: Not Implemented
        "200":
          content:
            application/scim+json:
              schema:
                type: object
            application/json:
              schema:
                type: object
          description: delete_8 200 response
      summary: "{@inheritDoc}"
      tags:
      - SCIM
      x-accepts:
      - application/json
      - application/scim+json
    get:
      description: Find by id
      operationId: getById_1
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: attributes
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: true
        in: query
        name: excludedAttributes
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: false
        in: path
        name: integration
        required: true
        schema:
          type: string
        style: simple
      responses:
        "400":
          description: Bad Request
        "404":
          description: Not found
        "500":
          description: Internal Server Error
        "501":
          description: Not Implemented
        "200":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimResource'
          description: OK response
      summary: "{@inheritDoc}"
      tags:
      - SCIM
      x-accepts:
      - application/scim+json
    patch:
      description: Patch a portion of the backing store
      operationId: patch_1
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: attributes
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: true
        in: query
        name: excludedAttributes
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: false
        in: path
        name: integration
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/scim+json:
            schema:
              $ref: '#/components/schemas/PatchRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchRequest'
        required: true
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "404":
          description: Not found
        "500":
          description: Internal Server Error
        "501":
          description: Not Implemented
        "200":
          content:
            application/scim+json:
              schema:
                type: object
            application/json:
              schema:
                type: object
          description: patch_1 200 response
      summary: "{@inheritDoc}"
      tags:
      - SCIM
      x-content-type: application/scim+json
      x-accepts:
      - application/json
      - application/scim+json
    put:
      description: Update
      operationId: update_6
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: attributes
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: true
        in: query
        name: excludedAttributes
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: false
        in: path
        name: integration
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/scim+json:
            schema:
              $ref: '#/components/schemas/ScimResource'
          application/json:
            schema:
              $ref: '#/components/schemas/ScimUser'
        required: true
      responses:
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
        "501":
          description: Not Implemented
        "200":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimResource'
          description: OK response
      summary: "{@inheritDoc}"
      tags:
      - SCIM
      x-content-type: application/scim+json
      x-accepts:
      - application/scim+json
  /api/v1/invitation/accept/{invitationId}:
    post:
      operationId: acceptInvitation
      parameters:
      - explode: false
        in: path
        name: invitationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invitation'
          description: acceptInvitation 200 response
      x-accepts:
      - application/json
  /api/v1/invitation/create/{invitationId}:
    post:
      operationId: createFromInvitation
      parameters:
      - explode: false
        in: path
        name: invitationId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthController.InvitationUserRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: createFromInvitation 200 response
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/invitations:
    post:
      operationId: create_9
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Invitation'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invitation'
          description: create_9 200 response
      summary: Create an invitation
      tags:
      - Invitations
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/invitations/email/{email}:
    get:
      operationId: findByEmail
      parameters:
      - description: The email address of the invited
        explode: false
        in: path
        name: email
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Invitation'
                type: array
          description: findByEmail 200 response
      summary: Get all invitations for a given email
      tags:
      - Invitations
      x-accepts:
      - application/json
  /api/v1/invitations/search:
    get:
      operationId: find_9
      parameters:
      - description: The email address of the invited
        explode: true
        in: query
        name: email
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The current status of the invitations
        explode: true
        in: query
        name: status
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/Invitation.InvitationStatus'
          nullable: true
        style: form
      - description: The current page
        explode: true
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: The current page size
        explode: true
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      - description: The sort of current page
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResults_Invitation_'
          description: find_9 200 response
      summary: Search for invitations
      tags:
      - Invitations
      x-accepts:
      - application/json
  /api/v1/invitations/{id}:
    delete:
      operationId: delete_9
      parameters:
      - description: The id of the invitation
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: delete_9 200 response
      summary: Delete an invitation
      tags:
      - Invitations
      x-accepts:
      - application/json
    get:
      operationId: get_3
      parameters:
      - description: The id of the invitation
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invitation'
          description: get_3 200 response
      summary: Delete an invitation
      tags:
      - Invitations
      x-accepts:
      - application/json
  /api/v1/license-info:
    get:
      operationId: licenseInfo
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MiscController.LicenseInfo'
          description: licenseInfo 200 response
      summary: Get current license information
      tags:
      - Misc
      x-accepts:
      - application/json
  /api/v1/logs/search:
    get:
      operationId: find_10
      parameters:
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The current page
        explode: true
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: The current page size
        explode: true
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: The sort of current page
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: A namespace filter prefix
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A flow id filter
        explode: true
        in: query
        name: flowId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A trigger id filter
        explode: true
        in: query
        name: triggerId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The min log level filter
        explode: true
        in: query
        name: minLevel
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/Level'
          nullable: true
        style: form
      - description: The start datetime
        explode: true
        in: query
        name: startDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: The end datetime
        explode: true
        in: query
        name: endDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResults_LogEntry_'
          description: find_10 200 response
      summary: Search for logs
      tags:
      - Logs
      x-accepts:
      - application/json
  /api/v1/logs/{executionId}:
    delete:
      operationId: delete_10
      parameters:
      - description: The execution id
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      - description: The min log level filter
        explode: true
        in: query
        name: minLevel
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/Level'
          nullable: true
        style: form
      - description: The taskrun id
        explode: true
        in: query
        name: taskRunId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The task id
        explode: true
        in: query
        name: taskId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The attempt number
        explode: true
        in: query
        name: attempt
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
      responses:
        "200":
          description: delete_10 200 response
      summary: "Delete logs for a specific execution, taskrun or task"
      tags:
      - Logs
      x-accepts:
      - application/json
    get:
      operationId: findByExecution
      parameters:
      - description: The execution id
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      - description: The min log level filter
        explode: true
        in: query
        name: minLevel
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/Level'
          nullable: true
        style: form
      - description: The taskrun id
        explode: true
        in: query
        name: taskRunId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The task id
        explode: true
        in: query
        name: taskId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The attempt number
        explode: true
        in: query
        name: attempt
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/LogEntry'
                type: array
          description: findByExecution 200 response
      summary: "Get logs for a specific execution, taskrun or task"
      tags:
      - Logs
      x-accepts:
      - application/json
  /api/v1/logs/{executionId}/download:
    get:
      operationId: download_1
      parameters:
      - description: The execution id
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      - description: The min log level filter
        explode: true
        in: query
        name: minLevel
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/Level'
          nullable: true
        style: form
      - description: The taskrun id
        explode: true
        in: query
        name: taskRunId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The task id
        explode: true
        in: query
        name: taskId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The attempt number
        explode: true
        in: query
        name: attempt
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                format: binary
                type: string
          description: download_1 200 response
      summary: "Download logs for a specific execution, taskrun or task"
      tags:
      - Logs
      x-accepts:
      - text/plain
  /api/v1/logs/{executionId}/follow:
    get:
      operationId: follow_1
      parameters:
      - description: The execution id
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      - description: The min log level filter
        explode: true
        in: query
        name: minLevel
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/Level'
          nullable: true
        style: form
      responses:
        "200":
          content:
            text/event-stream:
              schema:
                $ref: '#/components/schemas/Event_LogEntry_'
          description: follow_1 200 response
      summary: Follow logs for a specific execution
      tags:
      - Logs
      x-accepts:
      - text/event-stream
  /api/v1/logs/{namespace}/{flowId}:
    delete:
      operationId: deleteFromFlow
      parameters:
      - description: The namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The flow identifier
        explode: false
        in: path
        name: flowId
        required: true
        schema:
          type: string
        style: simple
      - description: The trigger id
        explode: true
        in: query
        name: triggerId
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          description: deleteFromFlow 200 response
      summary: "Delete logs for a specific execution, taskrun or task"
      tags:
      - Logs
      x-accepts:
      - application/json
  /api/v1/me:
    get:
      operationId: index_5
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeController.Me'
          description: index_5 200 response
      summary: Get current user
      tags:
      - Auths
      x-accepts:
      - application/json
    patch:
      operationId: patch_2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeController.UserDetailsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: patch_2 200 response
      summary: Updates details for the current user. Returns user's updated information
        upon success.
      tags:
      - Auths
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/me/api-tokens:
    get:
      operationId: listApiTokens
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: listApiTokens 200 response
      summary: List all API Tokens for the authenticated user
      tags:
      - Auths
      x-accepts:
      - application/json
    post:
      operationId: createApiToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateApiTokenRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: createApiToken 200 response
      summary: Create new API Token for authenticated user
      tags:
      - Auths
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/me/api-tokens/{tokenId}:
    delete:
      operationId: deleteApiToken
      parameters:
      - description: The token id
        explode: false
        in: path
        name: tokenId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: deleteApiToken 200 response
      summary: Delete an API Token for authenticated user
      tags:
      - Auths
      x-accepts:
      - application/json
  /api/v1/me/invitations:
    get:
      operationId: findByEmailAllTenant
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Invitation'
                type: array
          description: findByEmailAllTenant 200 response
      summary: Get all invitations for a given email
      tags:
      - Invitations
      x-accepts:
      - application/json
  /api/v1/me/password:
    put:
      operationId: updatePassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeController.UpdatePasswordRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: updatePassword 200 response
      summary: Update login password for the current user.
      tags:
      - Users
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/metrics/aggregates/{namespace}/{flowId}/{metric}:
    get:
      operationId: aggregateByFlowId
      parameters:
      - description: The namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The flow Id
        explode: false
        in: path
        name: flowId
        required: true
        schema:
          type: string
        style: simple
      - description: The metric name
        explode: false
        in: path
        name: metric
        required: true
        schema:
          type: string
        style: simple
      - description: "The start datetime, default to now - 30 days"
        explode: true
        in: query
        name: startDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: "The end datetime, default to now"
        explode: true
        in: query
        name: endDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: "The type of aggregation: avg, sum, min or max"
        explode: true
        in: query
        name: aggregation
        required: true
        schema:
          default: sum
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricAggregations'
          description: aggregateByFlowId 200 response
      summary: Get metrics aggregations for a specific flow
      tags:
      - Metrics
      x-accepts:
      - application/json
  /api/v1/metrics/aggregates/{namespace}/{flowId}/{taskId}/{metric}:
    get:
      operationId: aggregateByFlowIdAndTaskId
      parameters:
      - description: The namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The flow Id
        explode: false
        in: path
        name: flowId
        required: true
        schema:
          type: string
        style: simple
      - description: The task Id
        explode: false
        in: path
        name: taskId
        required: true
        schema:
          type: string
        style: simple
      - description: The metric name
        explode: false
        in: path
        name: metric
        required: true
        schema:
          type: string
        style: simple
      - description: "The start datetime, default to now - 30 days"
        explode: true
        in: query
        name: startDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: "The end datetime, default to now"
        explode: true
        in: query
        name: endDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: "The type of aggregation: avg, sum, min or max"
        explode: true
        in: query
        name: aggregation
        required: true
        schema:
          default: sum
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricAggregations'
          description: aggregateByFlowIdAndTaskId 200 response
      summary: Get metrics aggregations for a specific flow
      tags:
      - Metrics
      x-accepts:
      - application/json
  /api/v1/metrics/names/{namespace}/{flowId}:
    get:
      operationId: flowMetrics
      parameters:
      - description: The namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The flow Id
        explode: false
        in: path
        name: flowId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: flowMetrics 200 response
      summary: Get metrics names for a specific flow
      tags:
      - Metrics
      x-accepts:
      - application/json
  /api/v1/metrics/names/{namespace}/{flowId}/{taskId}:
    get:
      operationId: taskMetrics
      parameters:
      - description: The namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The flow Id
        explode: false
        in: path
        name: flowId
        required: true
        schema:
          type: string
        style: simple
      - description: The flow Id
        explode: false
        in: path
        name: taskId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: taskMetrics 200 response
      summary: Get metrics names for a specific task in a flow
      tags:
      - Metrics
      x-accepts:
      - application/json
  /api/v1/metrics/tasks/{namespace}/{flowId}:
    get:
      operationId: tasks
      parameters:
      - description: The namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The flow Id
        explode: false
        in: path
        name: flowId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: tasks 200 response
      summary: "Get tasks id that have metrics for a specific flow, include deleted\
        \ or renamed tasks"
      tags:
      - Metrics
      x-accepts:
      - application/json
  /api/v1/metrics/{executionId}:
    get:
      operationId: findByExecution_1
      parameters:
      - description: The current page
        explode: true
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: The current page size
        explode: true
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: The sort of current page
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: The execution id
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      - description: The taskrun id
        explode: true
        in: query
        name: taskRunId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The task id
        explode: true
        in: query
        name: taskId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResults_MetricEntry_'
          description: findByExecution_1 200 response
      summary: Get metrics for a specific execution
      tags:
      - Metrics
      x-accepts:
      - application/json
  /api/v1/namespaces:
    post:
      operationId: create_10
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Namespace'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Namespace'
          description: create_10 200 response
      summary: Create a namespace
      tags:
      - Namespaces
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/namespaces/autocomplete:
    post:
      operationId: autocomplete_1
      parameters:
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiIds'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: autocomplete_1 200 response
      summary: List namespaces for autocomplete
      tags:
      - Namespaces
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/namespaces/search:
    get:
      operationId: find_11
      parameters:
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The current page
        explode: true
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: The current page size
        explode: true
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: The sort of current page
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: Return only existing namespace
        explode: true
        in: query
        name: existing
        required: false
        schema:
          default: false
          nullable: true
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResults_NamespaceWithDisabled_'
          description: find_11 200 response
      summary: Search for namespaces
      tags:
      - Namespaces
      x-accepts:
      - application/json
  /api/v1/namespaces/{id}:
    delete:
      operationId: delete_11
      parameters:
      - description: The namespace id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: On success
      summary: Delete a flow
      tags:
      - Namespaces
      x-accepts:
      - application/json
    get:
      operationId: index_6
      parameters:
      - description: The namespace id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Namespace'
          description: index_6 200 response
      summary: Get a namespace
      tags:
      - Namespaces
      x-accepts:
      - application/json
    put:
      operationId: update_7
      parameters:
      - description: The namespace id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Namespace'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Namespace'
          description: update_7 200 response
      summary: Update a namespace
      tags:
      - Namespaces
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/namespaces/{id}/inherited-plugindefaults:
    get:
      operationId: inheritedPluginDefaults
      parameters:
      - description: The namespace id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PluginDefault'
                type: array
          description: inheritedPluginDefaults 200 response
      summary: List inherited plugin defaults
      tags:
      - Namespaces
      x-accepts:
      - application/json
  /api/v1/namespaces/{id}/inherited-variables:
    get:
      operationId: inheritedVariables
      parameters:
      - description: The namespace id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: inheritedVariables 200 response
      summary: List inherited variables
      tags:
      - Namespaces
      x-accepts:
      - application/json
  /api/v1/namespaces/{namespace}/dependencies:
    get:
      operationId: dependencies_1
      parameters:
      - description: The flow namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: "if true, list only destination dependencies, otherwise list\
          \ also source dependencies"
        explode: true
        in: query
        name: destinationOnly
        required: true
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlowTopologyGraph'
          description: dependencies_1 200 response
      summary: Get flow dependencies
      tags:
      - Flows
      x-accepts:
      - application/json
  /api/v1/namespaces/{namespace}/files:
    delete:
      operationId: delete_12
      parameters:
      - description: The namespace id
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The internal storage uri of the file / directory to delete
        explode: true
        in: query
        name: path
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          description: delete_12 200 response
      summary: Delete a file or directory
      tags:
      - Files
      x-accepts:
      - application/json
    get:
      operationId: file_1
      parameters:
      - description: The namespace id
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The internal storage uri
        explode: true
        in: query
        name: path
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: file_1 200 response
      summary: Get namespace file content
      tags:
      - Files
      x-accepts:
      - application/octet-stream
    post:
      operationId: createFile
      parameters:
      - description: The namespace id
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The internal storage uri
        explode: true
        in: query
        name: path
        required: true
        schema:
          type: string
        style: form
      requestBody:
        content:
          multipart/form-data:
            encoding:
              fileContent:
                contentType: application/octet-stream
                style: form
            schema:
              $ref: '#/components/schemas/createFile_request'
        required: true
      responses:
        "200":
          description: createFile 200 response
      summary: Create a file
      tags:
      - Files
      x-content-type: multipart/form-data
      x-accepts:
      - application/json
    put:
      operationId: move
      parameters:
      - description: The namespace id
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The internal storage uri to move from
        explode: true
        in: query
        name: from
        required: true
        schema:
          format: uri
          type: string
        style: form
      - description: The internal storage uri to move to
        explode: true
        in: query
        name: to
        required: true
        schema:
          format: uri
          type: string
        style: form
      responses:
        "200":
          description: move 200 response
      summary: Move a file or directory
      tags:
      - Files
      x-accepts:
      - application/json
  /api/v1/namespaces/{namespace}/files/directory:
    get:
      operationId: list_1
      parameters:
      - description: The namespace id
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The internal storage uri
        explode: true
        in: query
        name: path
        required: false
        schema:
          nullable: true
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FileAttributes'
                type: array
          description: list_1 200 response
      summary: List directory content
      tags:
      - Files
      x-accepts:
      - application/json
    post:
      operationId: createDirectory
      parameters:
      - description: The namespace id
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The internal storage uri
        explode: true
        in: query
        name: path
        required: false
        schema:
          nullable: true
          type: string
        style: form
      responses:
        "200":
          description: createDirectory 200 response
      summary: Create a directory
      tags:
      - Files
      x-accepts:
      - application/json
  /api/v1/namespaces/{namespace}/files/export:
    get:
      operationId: export
      parameters:
      - description: The namespace id
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                items:
                  format: byte
                  type: string
                type: array
          description: export 200 response
      summary: Export namespace files as a ZIP
      tags:
      - Files
      x-accepts:
      - application/octet-stream
  /api/v1/namespaces/{namespace}/files/search:
    get:
      operationId: search_2
      parameters:
      - description: The namespace id
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The string the file path should contain
        explode: true
        in: query
        name: q
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: search_2 200 response
      summary: Find files which path contain the given string in their URI
      tags:
      - Files
      x-accepts:
      - application/json
  /api/v1/namespaces/{namespace}/files/stats:
    get:
      operationId: stats
      parameters:
      - description: The namespace id
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The internal storage uri
        explode: true
        in: query
        name: path
        required: false
        schema:
          nullable: true
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileAttributes'
          description: stats 200 response
      summary: "Get namespace file stats such as size, creation & modification dates\
        \ and type"
      tags:
      - Files
      x-accepts:
      - application/json
  /api/v1/namespaces/{namespace}/inherited-secrets:
    get:
      operationId: inheritedSecrets
      parameters:
      - description: The namespace id
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  items:
                    type: string
                  type: array
                type: object
          description: inheritedSecrets 200 response
      summary: List inherited secrets
      tags:
      - Namespaces
      x-accepts:
      - application/json
  /api/v1/namespaces/{namespace}/kv:
    delete:
      operationId: deleteKeys
      parameters:
      - description: The namespace id
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KVController.ApiDeleteBulkRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KVController.ApiDeleteBulkResponse'
          description: deleteKeys 200 response
      summary: Bulk-delete multiple key/value pairs from the given namespace.
      tags:
      - KV
      x-content-type: application/json
      x-accepts:
      - application/json
    get:
      operationId: list_2
      parameters:
      - description: The namespace id
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/KVEntry'
                type: array
          description: list_2 200 response
      summary: List all keys for a namespace
      tags:
      - KV
      x-accepts:
      - application/json
  /api/v1/namespaces/{namespace}/kv/{key}:
    delete:
      operationId: delete_13
      parameters:
      - description: The namespace id
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The key
        explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: delete_13 200 response
      summary: Delete a key-value pair
      tags:
      - KV
      x-accepts:
      - application/json
    get:
      operationId: get_4
      parameters:
      - description: The namespace id
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The key
        explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KVController.TypedValue'
          description: get_4 200 response
      summary: Get value for a key
      tags:
      - KV
      x-accepts:
      - application/json
    put:
      operationId: put
      parameters:
      - description: The namespace id
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The key
        explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              type: string
          text/plain:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: put 200 response
      summary: Puts a key-value pair in store
      tags:
      - KV
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/namespaces/{namespace}/secrets:
    get:
      operationId: listSecret
      parameters:
      - description: The namespace id
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiSecretMeta'
                type: array
          description: listSecret 200 response
      summary: Get secrets for a namespace
      tags:
      - Namespaces
      x-accepts:
      - application/json
    put:
      operationId: putSecrets
      parameters:
      - description: The namespace id
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiSecretValue'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiSecretMeta'
                type: array
          description: putSecrets 200 response
      summary: Update secrets for a namespace
      tags:
      - Namespaces
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/namespaces/{namespace}/secrets/{key}:
    delete:
      operationId: deleteSecret
      parameters:
      - description: The namespace id
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The secret key
        explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: deleteSecret 200 response
      summary: Delete a secret for a namespace
      tags:
      - Namespaces
      x-accepts:
      - application/json
    patch:
      operationId: patchSecret
      parameters:
      - description: The namespace id
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiSecretMeta'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiSecretMeta'
                type: array
          description: patchSecret 200 response
      summary: Patch a secret metadata for a namespace
      tags:
      - Namespaces
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/plugins:
    get:
      operationId: search_3
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Plugin'
                type: array
          description: search_3 200 response
      summary: Get list of plugins
      tags:
      - Plugins
      x-accepts:
      - application/json
  /api/v1/plugins/groups/subgroups:
    get:
      operationId: subgroups
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Plugin'
                type: array
          description: subgroups 200 response
      summary: Get plugins group by subgroups
      tags:
      - Plugins
      x-accepts:
      - application/json
  /api/v1/plugins/icons:
    get:
      operationId: icons
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  $ref: '#/components/schemas/PluginIcon'
                type: object
          description: icons 200 response
      summary: Get plugins icons
      tags:
      - Plugins
      x-accepts:
      - application/json
  /api/v1/plugins/icons/groups:
    get:
      operationId: pluginGroupIcons
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  $ref: '#/components/schemas/PluginIcon'
                type: object
          description: pluginGroupIcons 200 response
      summary: Get plugins icons
      tags:
      - Plugins
      x-accepts:
      - application/json
  /api/v1/plugins/inputs:
    get:
      operationId: inputs
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/InputType'
                type: array
          description: inputs 200 response
      summary: Get all types for an inputs
      tags:
      - Plugins
      x-accepts:
      - application/json
  /api/v1/plugins/inputs/{type}:
    get:
      description: "The schema will be output as [http://json-schema.org/draft-07/schema](Json\
        \ Schema Draft 7)"
      operationId: inputSchemas
      parameters:
      - description: The schema needed
        explode: false
        in: path
        name: type
        required: true
        schema:
          $ref: '#/components/schemas/Type'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentationWithSchema'
          description: inputSchemas 200 response
      summary: Get all json schemas for a type
      tags:
      - Plugins
      x-accepts:
      - application/json
  /api/v1/plugins/schemas/{type}:
    get:
      description: "The schema will be output as [http://json-schema.org/draft-07/schema](Json\
        \ Schema Draft 7)"
      operationId: schemas
      parameters:
      - description: The schema needed
        explode: false
        in: path
        name: type
        required: true
        schema:
          $ref: '#/components/schemas/SchemaType'
        style: simple
      - description: If schema should be an array of requested type
        explode: true
        in: query
        name: arrayOf
        required: false
        schema:
          default: false
          nullable: true
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: schemas 200 response
      summary: Get all json schemas for a type
      tags:
      - Plugins
      x-accepts:
      - application/json
  /api/v1/plugins/{cls}:
    get:
      operationId: pluginDocumentation
      parameters:
      - description: The plugin full class name
        explode: false
        in: path
        name: cls
        required: true
        schema:
          type: string
        style: simple
      - description: Include all the properties
        explode: true
        in: query
        name: all
        required: true
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentationWithSchema'
          description: pluginDocumentation 200 response
      summary: Get plugin documentation
      tags:
      - Plugins
      x-accepts:
      - application/json
  /api/v1/reset-password:
    post:
      description: "Change a password for given token. If password does not match\
        \ password policy, use can still retry."
      operationId: resetPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthController.ResetPasswordRequest'
        description: An object containing the token and the new password.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: resetPassword 200 response
      summary: Change a password for given token.
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/roles:
    post:
      operationId: create_11
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: create_11 200 response
      summary: Create a role
      tags:
      - Roles
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/roles/autocomplete:
    post:
      operationId: autocomplete_2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiAutocomplete'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Role'
                type: array
          description: autocomplete_2 200 response
      summary: List roles for autocomplete
      tags:
      - Roles
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/roles/ids:
    post:
      description: List roles by ids
      operationId: ids_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiIds'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Role'
                type: array
          description: ids_1 200 response
      tags:
      - Roles
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/roles/search:
    get:
      operationId: find_12
      parameters:
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The current page
        explode: true
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: The current page size
        explode: true
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      - description: The sort of current page
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResults_Role_'
          description: find_12 200 response
      summary: Search for roles
      tags:
      - Roles
      x-accepts:
      - application/json
  /api/v1/roles/{id}:
    delete:
      operationId: delete_14
      parameters:
      - description: The role id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: On success
      summary: Delete a role
      tags:
      - Roles
      x-accepts:
      - application/json
    get:
      operationId: index_7
      parameters:
      - description: The role id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: index_7 200 response
      summary: Get a role
      tags:
      - Roles
      x-accepts:
      - application/json
    put:
      operationId: update_8
      parameters:
      - description: The role id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: update_8 200 response
      summary: Update a role
      tags:
      - Roles
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/security-integrations:
    get:
      operationId: list_3
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: list_3 200 response
      summary: List all security integrations.
      tags:
      - SecurityIntegrations
      x-accepts:
      - application/json
    post:
      operationId: create_12
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSecurityIntegrationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: create_12 200 response
      summary: Create a security integration.
      tags:
      - SecurityIntegrations
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/security-integrations/{id}:
    delete:
      operationId: delete_15
      parameters:
      - description: The ID of security integration
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: delete_15 200 response
      summary: Delete the security integration.
      tags:
      - SecurityIntegrations
      x-accepts:
      - application/json
    get:
      operationId: index_8
      parameters:
      - description: The ID of security integration
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: index_8 200 response
      summary: Get a security integration.
      tags:
      - SecurityIntegrations
      x-accepts:
      - application/json
  /api/v1/security-integrations/{id}/disable:
    post:
      operationId: disable_1
      parameters:
      - description: The ID of security integration
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: disable_1 200 response
      summary: Disable the security integration.
      tags:
      - SecurityIntegrations
      x-accepts:
      - application/json
  /api/v1/security-integrations/{id}/enable:
    post:
      operationId: enable_1
      parameters:
      - description: The ID of security integration
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: enable_1 200 response
      summary: Enable the security integration.
      tags:
      - SecurityIntegrations
      x-accepts:
      - application/json
  /api/v1/setup:
    get:
      operationId: setupConfiguration
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetupConfiguration'
          description: setupConfiguration 200 response
      summary: Currently running configuration
      tags:
      - Misc
      x-accepts:
      - application/json
    post:
      operationId: setupKestra
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetupConfiguration.SetupData'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUser'
          description: setupKestra 200 response
      summary: Create the first user
      tags:
      - Misc
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/stats/executions/daily:
    post:
      operationId: dailyStatistics
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StatsController.StatisticRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DailyExecutionStatistics'
                type: array
          description: dailyStatistics 200 response
      summary: Get daily statistics for executions
      tags:
      - Stats
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/stats/executions/daily/group-by-flow:
    post:
      operationId: dailyGroupByFlowStatistics
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StatsController.ByFlowStatisticRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  additionalProperties:
                    items:
                      $ref: '#/components/schemas/DailyExecutionStatistics'
                    type: array
                  type: object
                type: object
          description: dailyGroupByFlowStatistics 200 response
      summary: Get daily statistics for executions group by namespaces and flows
      tags:
      - Stats
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/stats/executions/daily/group-by-namespace:
    post:
      operationId: dailyStatisticsGroupByNamespace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StatsController.ByNamespaceStatisticRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  $ref: '#/components/schemas/ExecutionCountStatistics'
                type: object
          description: dailyStatisticsGroupByNamespace 200 response
      summary: Get daily statistics for executions grouped by namespace
      tags:
      - Stats
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/stats/executions/latest/group-by-flow:
    post:
      operationId: lastExecutions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StatsController.LastExecutionsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Execution'
                type: array
          description: lastExecutions 200 response
      summary: Get latest execution by flows
      tags:
      - Stats
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/stats/generate-reports:
    get:
      operationId: generate
      parameters:
      - description: The start date
        explode: true
        in: query
        name: from
        required: false
        schema:
          format: date
          nullable: true
          type: string
        style: form
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                items:
                  format: byte
                  type: string
                type: array
          description: generate 200 response
      x-accepts:
      - application/octet-stream
  /api/v1/stats/logs/daily:
    post:
      operationId: logsDailyStatistics
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StatsController.LogStatisticRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/LogStatistics'
                type: array
          description: logsDailyStatistics 200 response
      summary: Get daily statistics for logs
      tags:
      - Stats
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/stats/summary:
    post:
      operationId: summary
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StatsController.SummaryRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SummaryStatistics'
          description: summary 200 response
      summary: Get summary statistics
      tags:
      - Stats
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/stats/taskruns/daily:
    post:
      operationId: taskRunsDailyStatistics
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StatsController.StatisticRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DailyExecutionStatistics'
                type: array
          description: taskRunsDailyStatistics 200 response
      summary: Get daily statistics for taskRuns
      tags:
      - Stats
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/taskruns/search:
    get:
      operationId: findTaskRun
      parameters:
      - description: The current page
        explode: true
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: The current page size
        explode: true
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: The sort of current page
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A namespace filter prefix
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A flow id filter
        explode: true
        in: query
        name: flowId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The start datetime
        explode: true
        in: query
        name: startDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: The end datetime
        explode: true
        in: query
        name: endDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: A state filter
        explode: true
        in: query
        name: state
        required: false
        schema:
          items:
            $ref: '#/components/schemas/State.Type'
          nullable: true
          type: array
        style: form
      - description: A labels filter as a list of 'key:value'
        explode: true
        in: query
        name: labels
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: The trigger execution id
        explode: true
        in: query
        name: triggerExecutionId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A execution child filter
        explode: true
        in: query
        name: childFilter
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/ExecutionRepositoryInterface.ChildFilter'
          nullable: true
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResults_TaskRun_'
          description: findTaskRun 200 response
      summary: "Search for taskruns, only available with the Elasticsearch repository"
      tags:
      - Executions
      x-accepts:
      - application/json
  /api/v1/templates:
    post:
      operationId: create_13
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Template'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'
          description: create_13 200 response
      summary: Create a template
      tags:
      - Templates
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/templates/delete/by-ids:
    delete:
      operationId: deleteByIds_2
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/IdWithNamespace'
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkResponse'
          description: deleteByIds_2 200 response
      summary: Delete templates by their IDs.
      tags:
      - Templates
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/templates/delete/by-query:
    delete:
      operationId: deleteByQuery_2
      parameters:
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A namespace filter prefix
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkResponse'
          description: deleteByQuery_2 200 response
      summary: Delete templates returned by the query parameters.
      tags:
      - Templates
      x-accepts:
      - application/json
  /api/v1/templates/distinct-namespaces:
    get:
      operationId: listDistinctNamespace_2
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: listDistinctNamespace_2 200 response
      summary: List all distinct namespaces
      tags:
      - Templates
      x-accepts:
      - application/json
  /api/v1/templates/export/by-ids:
    post:
      operationId: exportByIds_1
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/IdWithNamespace'
              type: array
        required: true
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                items:
                  format: byte
                  type: string
                type: array
          description: exportByIds_1 200 response
      summary: Export templates as a ZIP archive of yaml sources.
      tags:
      - Templates
      x-content-type: application/json
      x-accepts:
      - application/octet-stream
  /api/v1/templates/export/by-query:
    get:
      operationId: exportByQuery_1
      parameters:
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A namespace filter prefix
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                items:
                  format: byte
                  type: string
                type: array
          description: exportByQuery_1 200 response
      summary: Export templates as a ZIP archive of yaml sources.
      tags:
      - Templates
      x-accepts:
      - application/octet-stream
  /api/v1/templates/import:
    post:
      operationId: importTemplates
      requestBody:
        content:
          multipart/form-data:
            encoding:
              fileUpload:
                contentType: application/octet-stream
                style: form
            schema:
              $ref: '#/components/schemas/importFlows_request'
        required: true
      responses:
        "204":
          description: On success
        "200":
          description: importTemplates 200 response
      summary: Import templates as a ZIP archive of yaml sources or a multi-objects
        YAML file.
      tags:
      - Templates
      x-content-type: multipart/form-data
      x-accepts:
      - application/json
  /api/v1/templates/search:
    get:
      operationId: find_13
      parameters:
      - description: The current page
        explode: true
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: The current page size
        explode: true
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: The sort of current page
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A namespace filter prefix
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResults_Template_'
          description: find_13 200 response
      summary: Search for templates
      tags:
      - Templates
      x-accepts:
      - application/json
  /api/v1/templates/validate:
    post:
      operationId: validateTemplates
      requestBody:
        content:
          application/x-yaml:
            schema:
              type: string
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ValidateConstraintViolation'
                type: array
          description: validateTemplates 200 response
      summary: Validate a list of templates
      tags:
      - Templates
      x-content-type: application/x-yaml
      x-accepts:
      - application/json
  /api/v1/templates/{namespace}:
    post:
      description: |-
        All Template will be created / updated for this namespace.
        Template already created but not in `templates` will be deleted if the query delete is `true`
      operationId: updateNamespace_1
      parameters:
      - description: The template namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: If missing template should be deleted
        explode: true
        in: query
        name: delete
        required: true
        schema:
          default: true
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Template'
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Template'
                type: array
          description: updateNamespace_1 200 response
      summary: Update a complete namespace from json object
      tags:
      - Templates
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/templates/{namespace}/{id}:
    delete:
      operationId: delete_16
      parameters:
      - description: The template namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The template id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: On success
        "200":
          description: delete_16 200 response
      summary: Delete a template
      tags:
      - Templates
      x-accepts:
      - application/json
    get:
      operationId: index_9
      parameters:
      - description: The template namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The template id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'
          description: index_9 200 response
      summary: Get a template
      tags:
      - Templates
      x-accepts:
      - application/json
    put:
      operationId: update_9
      parameters:
      - description: The template namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The template id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Template'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'
          description: update_9 200 response
      summary: Update a template
      tags:
      - Templates
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/tenants:
    post:
      operationId: create_14
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tenant'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tenant'
          description: create_14 200 response
      summary: Create a tenant
      tags:
      - Tenants
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/tenants/bindings:
    post:
      operationId: create_15
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Binding'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AbstractBindingController.BindingDetail'
          description: create_15 200 response
      summary: Create a binding
      tags:
      - Bindings
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/tenants/bindings/bulk:
    post:
      operationId: bulkCreate_1
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Binding'
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AbstractBindingController.BindingDetail'
                type: array
          description: bulkCreate_1 200 response
      summary: Create multiple bindings
      tags:
      - Bindings
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/tenants/bindings/search:
    get:
      operationId: find_14
      parameters:
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The current page
        explode: true
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: The current page size
        explode: true
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      - description: The sort of current page
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: Binding type filter
        explode: true
        in: query
        name: type
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/Binding.Type'
          nullable: true
        style: form
      - description: External id filter
        explode: true
        in: query
        name: id
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A namespace filter
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResults_AbstractBindingController.BindingDetail_'
          description: find_14 200 response
      summary: Search for bindings
      tags:
      - Bindings
      x-accepts:
      - application/json
  /api/v1/tenants/bindings/{id}:
    delete:
      operationId: delete_17
      parameters:
      - description: The binding id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: On success
      summary: Delete a binding
      tags:
      - Bindings
      x-accepts:
      - application/json
    get:
      operationId: index_10
      parameters:
      - description: The binding id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AbstractBindingController.BindingDetail'
          description: index_10 200 response
      summary: Get a binding
      tags:
      - Bindings
      x-accepts:
      - application/json
  /api/v1/tenants/groups:
    post:
      operationId: create_16
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AbstractGroupController.GroupWithMembers'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: create_16 200 response
      summary: Create a group
      tags:
      - Groups
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/tenants/groups/autocomplete:
    post:
      operationId: autocomplete_3
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiAutocomplete'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Group'
                type: array
          description: autocomplete_3 200 response
      summary: List groups for autocomplete
      tags:
      - Groups
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/tenants/groups/ids:
    post:
      operationId: ids_2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiIds'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Group'
                type: array
          description: ids_2 200 response
      summary: List groups by ids
      tags:
      - Groups
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/tenants/groups/search:
    get:
      operationId: find_15
      parameters:
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The current page
        explode: true
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: The current page size
        explode: true
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      - description: The sort of current page
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResults_Group_'
          description: find_15 200 response
      summary: Search for groups
      tags:
      - Groups
      x-accepts:
      - application/json
  /api/v1/tenants/groups/{id}:
    delete:
      operationId: delete_18
      parameters:
      - description: The group id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: On success
      summary: Delete a group
      tags:
      - Groups
      x-accepts:
      - application/json
    get:
      operationId: index_11
      parameters:
      - description: The group id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: index_11 200 response
      summary: Get a group
      tags:
      - Groups
      x-accepts:
      - application/json
    put:
      operationId: update_10
      parameters:
      - description: The group id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: update_10 200 response
      summary: Update a group
      tags:
      - Groups
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/tenants/groups/{id}/members:
    get:
      operationId: members_1
      parameters:
      - description: The group id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The current page
        explode: true
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: The current page size
        explode: true
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      - description: The sort of current page
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResults_ApiUser_'
          description: members_1 200 response
      summary: Search for users in a group
      tags:
      - Groups
      x-accepts:
      - application/json
  /api/v1/tenants/groups/{id}/members/{userId}:
    delete:
      operationId: deleteGroup_1
      parameters:
      - description: The group id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The user id
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUser'
          description: deleteGroup_1 200 response
      summary: Delete a group for a user
      tags:
      - Groups
      x-accepts:
      - application/json
    put:
      operationId: addGroup_1
      parameters:
      - description: The group id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The user id
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUser'
          description: addGroup_1 200 response
      summary: Add a group for a user
      tags:
      - Groups
      x-accepts:
      - application/json
  /api/v1/tenants/invitations:
    post:
      operationId: create_17
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Invitation'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invitation'
          description: create_17 200 response
      summary: Create an invitation
      tags:
      - Invitations
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/tenants/invitations/email/{email}:
    get:
      operationId: findByEmail_1
      parameters:
      - description: The email address of the invited
        explode: false
        in: path
        name: email
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Invitation'
                type: array
          description: findByEmail_1 200 response
      summary: Get all invitations for a given email
      tags:
      - Invitations
      x-accepts:
      - application/json
  /api/v1/tenants/invitations/search:
    get:
      operationId: find_16
      parameters:
      - description: The email address of the invited
        explode: true
        in: query
        name: email
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The current status of the invitations
        explode: true
        in: query
        name: status
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/Invitation.InvitationStatus'
          nullable: true
        style: form
      - description: The current page
        explode: true
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: The current page size
        explode: true
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      - description: The sort of current page
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResults_Invitation_'
          description: find_16 200 response
      summary: Search for invitations
      tags:
      - Invitations
      x-accepts:
      - application/json
  /api/v1/tenants/invitations/{id}:
    delete:
      operationId: delete_19
      parameters:
      - description: The id of the invitation
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: delete_19 200 response
      summary: Delete an invitation
      tags:
      - Invitations
      x-accepts:
      - application/json
    get:
      operationId: get_5
      parameters:
      - description: The id of the invitation
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invitation'
          description: get_5 200 response
      summary: Delete an invitation
      tags:
      - Invitations
      x-accepts:
      - application/json
  /api/v1/tenants/namespaces/autocomplete:
    post:
      operationId: autocomplete_4
      parameters:
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiIds'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: autocomplete_4 200 response
      summary: List namespaces for autocomplete
      tags:
      - Namespaces
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/tenants/roles:
    post:
      operationId: create_18
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: create_18 200 response
      summary: Create a role
      tags:
      - Roles
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/tenants/roles/autocomplete:
    post:
      operationId: autocomplete_5
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiAutocomplete'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Role'
                type: array
          description: autocomplete_5 200 response
      summary: List roles for autocomplete
      tags:
      - Roles
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/tenants/roles/ids:
    post:
      description: List roles by ids
      operationId: ids_3
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiIds'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Role'
                type: array
          description: ids_3 200 response
      tags:
      - Roles
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/tenants/roles/search:
    get:
      operationId: find_17
      parameters:
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The current page
        explode: true
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: The current page size
        explode: true
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      - description: The sort of current page
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResults_Role_'
          description: find_17 200 response
      summary: Search for roles
      tags:
      - Roles
      x-accepts:
      - application/json
  /api/v1/tenants/roles/{id}:
    delete:
      operationId: delete_20
      parameters:
      - description: The role id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: On success
      summary: Delete a role
      tags:
      - Roles
      x-accepts:
      - application/json
    get:
      operationId: index_12
      parameters:
      - description: The role id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: index_12 200 response
      summary: Get a role
      tags:
      - Roles
      x-accepts:
      - application/json
    put:
      operationId: update_11
      parameters:
      - description: The role id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: update_11 200 response
      summary: Update a role
      tags:
      - Roles
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/tenants/search:
    get:
      operationId: find_18
      parameters:
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The current page
        explode: true
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: The current page size
        explode: true
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      - description: The sort of current page
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResults_Tenant_'
          description: find_18 200 response
      summary: Search for tenants
      tags:
      - Tenants
      x-accepts:
      - application/json
  /api/v1/tenants/users:
    post:
      operationId: create_19
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiUser'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUser'
          description: create_19 200 response
      summary: Create a standard user
      tags:
      - Users
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/tenants/users/autocomplete:
    post:
      operationId: autocomplete_6
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AbstractUserController.UserApiAutocomplete'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiUser'
                type: array
          description: autocomplete_6 200 response
      summary: List users for autocomplete
      tags:
      - Users
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/tenants/users/instance:
    get:
      operationId: findAllForAllTenants
      parameters:
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The current page
        explode: true
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: The current page size
        explode: true
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      - description: The sort of current page
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: The type of user
        explode: true
        in: query
        name: type
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/UserType'
          nullable: true
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResults_ApiUser_'
          description: findAllForAllTenants 200 response
      summary: Get all users in the instance across all tenantd
      tags:
      - Users
      x-accepts:
      - application/json
  /api/v1/tenants/users/search:
    get:
      operationId: find_19
      parameters:
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The current page
        explode: true
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: The current page size
        explode: true
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      - description: The sort of current page
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: The type of user
        explode: true
        in: query
        name: type
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/UserType'
          nullable: true
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResults_ApiUser_'
          description: find_19 200 response
      summary: Search for users
      tags:
      - Users
      x-accepts:
      - application/json
  /api/v1/tenants/users/service-accounts:
    post:
      operationId: createServiceAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiServiceAccount'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServiceAccount'
          description: createServiceAccount 200 response
      summary: Create a user service account
      tags:
      - Users
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/tenants/users/service-accounts/{id}:
    put:
      operationId: updateServiceAccount
      parameters:
      - description: The user id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiServiceAccount'
        required: true
      responses:
        "404":
          description: On user not found
      summary: Update a user service account
      tags:
      - Users
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/tenants/users/{id}:
    delete:
      operationId: delete_21
      parameters:
      - description: The user id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: On success
        "404":
          description: On user not found
      summary: Delete a user
      tags:
      - Users
      x-accepts:
      - application/json
    get:
      operationId: index_13
      parameters:
      - description: The user id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "404":
          description: On user not found
      summary: Get a user
      tags:
      - Users
      x-accepts:
      - application/json
    put:
      operationId: update_12
      parameters:
      - description: The user id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiUser'
        required: true
      responses:
        "404":
          description: On user not found
      summary: Update a standard user
      tags:
      - Users
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/tenants/users/{id}/api-tokens:
    get:
      operationId: listApiTokens_1
      parameters:
      - description: The user id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: listApiTokens_1 200 response
      summary: List all API Tokens for specific user
      tags:
      - Users
      x-accepts:
      - application/json
    post:
      operationId: createApiTokensForUser
      parameters:
      - description: The user id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateApiTokenRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: createApiTokensForUser 200 response
      summary: Create new API Token for a specific user
      tags:
      - Users
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/tenants/users/{id}/api-tokens/{tokenId}:
    delete:
      operationId: deleteApiToken_1
      parameters:
      - description: The user id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The token id
        explode: false
        in: path
        name: tokenId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: deleteApiToken_1 200 response
      summary: Delete an API Token for specific user and token id
      tags:
      - Users
      x-accepts:
      - application/json
  /api/v1/tenants/users/{id}/auths/{uid}:
    delete:
      operationId: deleteAuth
      parameters:
      - description: The user id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The auth id
        explode: false
        in: path
        name: uid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "404":
          description: On user not found
      summary: Delete an Auth for a user
      tags:
      - Users
      x-accepts:
      - application/json
  /api/v1/tenants/users/{id}/impersonate:
    post:
      operationId: impersonate
      parameters:
      - description: The user id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: impersonate 200 response
      summary: Impersonate a user
      tags:
      - Users
      x-accepts:
      - application/json
  /api/v1/tenants/users/{id}/password:
    put:
      operationId: index_14
      parameters:
      - description: The user id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AbstractUserController.PasswordRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUser'
          description: index_14 200 response
      summary: Create a basic auth password for a standard user
      tags:
      - Users
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/tenants/users/{id}/refresh-token:
    delete:
      operationId: deleteRefreshToken
      parameters:
      - description: The user id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUser'
          description: deleteRefreshToken 200 response
      summary: Delete a user refresh token
      tags:
      - Users
      x-accepts:
      - application/json
  /api/v1/tenants/users/{id}/set-superadmin:
    put:
      operationId: setSuperAdmin
      parameters:
      - description: The user id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              type: boolean
        required: true
      responses:
        "404":
          description: On user not found
      summary: Update a user service account
      tags:
      - Users
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/tenants/{id}:
    delete:
      operationId: delete_22
      parameters:
      - description: The tenant id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: On success
      summary: Delete a tenant
      tags:
      - Tenants
      x-accepts:
      - application/json
    get:
      operationId: get_6
      parameters:
      - description: The tenant id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tenant'
          description: get_6 200 response
      summary: Get a tenant
      tags:
      - Tenants
      x-accepts:
      - application/json
    put:
      operationId: update_13
      parameters:
      - description: The tenant id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tenant'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tenant'
          description: update_13 200 response
      summary: Update a tenant
      tags:
      - Tenants
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/tenants/{id}/logo:
    post:
      operationId: setLogo
      parameters:
      - description: The tenant id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            encoding:
              logo:
                contentType: application/octet-stream
                style: form
            schema:
              $ref: '#/components/schemas/setLogo_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiTenant'
          description: setLogo 200 response
      summary: Set a tenant logo
      tags:
      - Tenants
      x-content-type: multipart/form-data
      x-accepts:
      - application/json
  /api/v1/tenants/{ressourceTenant}/bindings:
    post:
      operationId: create_20
      parameters:
      - explode: false
        in: path
        name: ressourceTenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Binding'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AbstractBindingController.BindingDetail'
          description: create_20 200 response
      summary: Create a binding
      tags:
      - Bindings
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/tenants/{ressourceTenant}/bindings/bulk:
    post:
      operationId: bulkCreate_2
      parameters:
      - explode: false
        in: path
        name: ressourceTenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Binding'
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AbstractBindingController.BindingDetail'
                type: array
          description: bulkCreate_2 200 response
      summary: Create multiple bindings
      tags:
      - Bindings
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/tenants/{ressourceTenant}/bindings/search:
    get:
      operationId: find_20
      parameters:
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The current page
        explode: true
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: The current page size
        explode: true
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      - description: The sort of current page
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: Binding type filter
        explode: true
        in: query
        name: type
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/Binding.Type'
          nullable: true
        style: form
      - description: External id filter
        explode: true
        in: query
        name: id
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A namespace filter
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: false
        in: path
        name: ressourceTenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResults_AbstractBindingController.BindingDetail_'
          description: find_20 200 response
      summary: Search for bindings
      tags:
      - Bindings
      x-accepts:
      - application/json
  /api/v1/tenants/{ressourceTenant}/bindings/{id}:
    delete:
      operationId: delete_23
      parameters:
      - description: The binding id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: ressourceTenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: On success
      summary: Delete a binding
      tags:
      - Bindings
      x-accepts:
      - application/json
    get:
      operationId: index_15
      parameters:
      - description: The binding id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: ressourceTenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AbstractBindingController.BindingDetail'
          description: index_15 200 response
      summary: Get a binding
      tags:
      - Bindings
      x-accepts:
      - application/json
  /api/v1/tenants/{ressourceTenant}/groups:
    post:
      operationId: create_21
      parameters:
      - explode: false
        in: path
        name: ressourceTenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AbstractGroupController.GroupWithMembers'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: create_21 200 response
      summary: Create a group
      tags:
      - Groups
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/tenants/{ressourceTenant}/groups/autocomplete:
    post:
      operationId: autocomplete_7
      parameters:
      - explode: false
        in: path
        name: ressourceTenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiAutocomplete'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Group'
                type: array
          description: autocomplete_7 200 response
      summary: List groups for autocomplete
      tags:
      - Groups
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/tenants/{ressourceTenant}/groups/ids:
    post:
      operationId: ids_4
      parameters:
      - explode: false
        in: path
        name: ressourceTenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiIds'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Group'
                type: array
          description: ids_4 200 response
      summary: List groups by ids
      tags:
      - Groups
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/tenants/{ressourceTenant}/groups/search:
    get:
      operationId: find_21
      parameters:
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The current page
        explode: true
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: The current page size
        explode: true
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      - description: The sort of current page
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - explode: false
        in: path
        name: ressourceTenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResults_Group_'
          description: find_21 200 response
      summary: Search for groups
      tags:
      - Groups
      x-accepts:
      - application/json
  /api/v1/tenants/{ressourceTenant}/groups/{id}:
    delete:
      operationId: delete_24
      parameters:
      - description: The group id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: ressourceTenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: On success
      summary: Delete a group
      tags:
      - Groups
      x-accepts:
      - application/json
    get:
      operationId: index_16
      parameters:
      - description: The group id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: ressourceTenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: index_16 200 response
      summary: Get a group
      tags:
      - Groups
      x-accepts:
      - application/json
    put:
      operationId: update_14
      parameters:
      - description: The group id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: ressourceTenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: update_14 200 response
      summary: Update a group
      tags:
      - Groups
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/tenants/{ressourceTenant}/groups/{id}/members:
    get:
      operationId: members_2
      parameters:
      - description: The group id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The current page
        explode: true
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: The current page size
        explode: true
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      - description: The sort of current page
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - explode: false
        in: path
        name: ressourceTenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResults_ApiUser_'
          description: members_2 200 response
      summary: Search for users in a group
      tags:
      - Groups
      x-accepts:
      - application/json
  /api/v1/tenants/{ressourceTenant}/groups/{id}/members/{userId}:
    delete:
      operationId: deleteGroup_2
      parameters:
      - description: The group id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The user id
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: ressourceTenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUser'
          description: deleteGroup_2 200 response
      summary: Delete a group for a user
      tags:
      - Groups
      x-accepts:
      - application/json
    put:
      operationId: addGroup_2
      parameters:
      - description: The group id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The user id
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: ressourceTenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUser'
          description: addGroup_2 200 response
      summary: Add a group for a user
      tags:
      - Groups
      x-accepts:
      - application/json
  /api/v1/tenants/{ressourceTenant}/invitations:
    post:
      operationId: create_22
      parameters:
      - explode: false
        in: path
        name: ressourceTenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Invitation'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invitation'
          description: create_22 200 response
      summary: Create an invitation
      tags:
      - Invitations
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/tenants/{ressourceTenant}/invitations/email/{email}:
    get:
      operationId: findByEmail_2
      parameters:
      - description: The email address of the invited
        explode: false
        in: path
        name: email
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: ressourceTenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Invitation'
                type: array
          description: findByEmail_2 200 response
      summary: Get all invitations for a given email
      tags:
      - Invitations
      x-accepts:
      - application/json
  /api/v1/tenants/{ressourceTenant}/invitations/search:
    get:
      operationId: find_22
      parameters:
      - description: The email address of the invited
        explode: true
        in: query
        name: email
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The current status of the invitations
        explode: true
        in: query
        name: status
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/Invitation.InvitationStatus'
          nullable: true
        style: form
      - description: The current page
        explode: true
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: The current page size
        explode: true
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      - description: The sort of current page
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - explode: false
        in: path
        name: ressourceTenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResults_Invitation_'
          description: find_22 200 response
      summary: Search for invitations
      tags:
      - Invitations
      x-accepts:
      - application/json
  /api/v1/tenants/{ressourceTenant}/invitations/{id}:
    delete:
      operationId: delete_25
      parameters:
      - description: The id of the invitation
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: ressourceTenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: delete_25 200 response
      summary: Delete an invitation
      tags:
      - Invitations
      x-accepts:
      - application/json
    get:
      operationId: get_7
      parameters:
      - description: The id of the invitation
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: ressourceTenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invitation'
          description: get_7 200 response
      summary: Delete an invitation
      tags:
      - Invitations
      x-accepts:
      - application/json
  /api/v1/tenants/{ressourceTenant}/namespaces/autocomplete:
    post:
      operationId: autocomplete_8
      parameters:
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: false
        in: path
        name: ressourceTenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiIds'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: autocomplete_8 200 response
      summary: List namespaces for autocomplete
      tags:
      - Namespaces
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/tenants/{ressourceTenant}/roles:
    post:
      operationId: create_23
      parameters:
      - explode: false
        in: path
        name: ressourceTenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: create_23 200 response
      summary: Create a role
      tags:
      - Roles
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/tenants/{ressourceTenant}/roles/autocomplete:
    post:
      operationId: autocomplete_9
      parameters:
      - explode: false
        in: path
        name: ressourceTenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiAutocomplete'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Role'
                type: array
          description: autocomplete_9 200 response
      summary: List roles for autocomplete
      tags:
      - Roles
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/tenants/{ressourceTenant}/roles/ids:
    post:
      description: List roles by ids
      operationId: ids_5
      parameters:
      - explode: false
        in: path
        name: ressourceTenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiIds'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Role'
                type: array
          description: ids_5 200 response
      tags:
      - Roles
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/tenants/{ressourceTenant}/roles/search:
    get:
      operationId: find_23
      parameters:
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The current page
        explode: true
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: The current page size
        explode: true
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      - description: The sort of current page
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - explode: false
        in: path
        name: ressourceTenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResults_Role_'
          description: find_23 200 response
      summary: Search for roles
      tags:
      - Roles
      x-accepts:
      - application/json
  /api/v1/tenants/{ressourceTenant}/roles/{id}:
    delete:
      operationId: delete_26
      parameters:
      - description: The role id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: ressourceTenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: On success
      summary: Delete a role
      tags:
      - Roles
      x-accepts:
      - application/json
    get:
      operationId: index_17
      parameters:
      - description: The role id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: ressourceTenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: index_17 200 response
      summary: Get a role
      tags:
      - Roles
      x-accepts:
      - application/json
    put:
      operationId: update_15
      parameters:
      - description: The role id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: ressourceTenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: update_15 200 response
      summary: Update a role
      tags:
      - Roles
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/tenants/{ressourceTenant}/users:
    post:
      operationId: create_24
      parameters:
      - explode: false
        in: path
        name: ressourceTenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiUser'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUser'
          description: create_24 200 response
      summary: Create a standard user
      tags:
      - Users
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/tenants/{ressourceTenant}/users/autocomplete:
    post:
      operationId: autocomplete_10
      parameters:
      - explode: false
        in: path
        name: ressourceTenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AbstractUserController.UserApiAutocomplete'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiUser'
                type: array
          description: autocomplete_10 200 response
      summary: List users for autocomplete
      tags:
      - Users
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/tenants/{ressourceTenant}/users/instance:
    get:
      operationId: findAllForAllTenants_1
      parameters:
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The current page
        explode: true
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: The current page size
        explode: true
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      - description: The sort of current page
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: The type of user
        explode: true
        in: query
        name: type
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/UserType'
          nullable: true
        style: form
      - explode: false
        in: path
        name: ressourceTenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResults_ApiUser_'
          description: findAllForAllTenants_1 200 response
      summary: Get all users in the instance across all tenantd
      tags:
      - Users
      x-accepts:
      - application/json
  /api/v1/tenants/{ressourceTenant}/users/search:
    get:
      operationId: find_24
      parameters:
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The current page
        explode: true
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: The current page size
        explode: true
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      - description: The sort of current page
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: The type of user
        explode: true
        in: query
        name: type
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/UserType'
          nullable: true
        style: form
      - explode: false
        in: path
        name: ressourceTenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResults_ApiUser_'
          description: find_24 200 response
      summary: Search for users
      tags:
      - Users
      x-accepts:
      - application/json
  /api/v1/tenants/{ressourceTenant}/users/service-accounts:
    post:
      operationId: createServiceAccount_1
      parameters:
      - explode: false
        in: path
        name: ressourceTenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiServiceAccount'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServiceAccount'
          description: createServiceAccount_1 200 response
      summary: Create a user service account
      tags:
      - Users
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/tenants/{ressourceTenant}/users/service-accounts/{id}:
    put:
      operationId: updateServiceAccount_1
      parameters:
      - description: The user id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: ressourceTenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiServiceAccount'
        required: true
      responses:
        "404":
          description: On user not found
      summary: Update a user service account
      tags:
      - Users
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/tenants/{ressourceTenant}/users/{id}:
    delete:
      operationId: delete_27
      parameters:
      - description: The user id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: ressourceTenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: On success
        "404":
          description: On user not found
      summary: Delete a user
      tags:
      - Users
      x-accepts:
      - application/json
    get:
      operationId: index_18
      parameters:
      - description: The user id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: ressourceTenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "404":
          description: On user not found
      summary: Get a user
      tags:
      - Users
      x-accepts:
      - application/json
    put:
      operationId: update_16
      parameters:
      - description: The user id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: ressourceTenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiUser'
        required: true
      responses:
        "404":
          description: On user not found
      summary: Update a standard user
      tags:
      - Users
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/tenants/{ressourceTenant}/users/{id}/api-tokens:
    get:
      operationId: listApiTokens_2
      parameters:
      - description: The user id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: ressourceTenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: listApiTokens_2 200 response
      summary: List all API Tokens for specific user
      tags:
      - Users
      x-accepts:
      - application/json
    post:
      operationId: createApiTokensForUser_1
      parameters:
      - description: The user id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: ressourceTenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateApiTokenRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: createApiTokensForUser_1 200 response
      summary: Create new API Token for a specific user
      tags:
      - Users
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/tenants/{ressourceTenant}/users/{id}/api-tokens/{tokenId}:
    delete:
      operationId: deleteApiToken_2
      parameters:
      - description: The user id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The token id
        explode: false
        in: path
        name: tokenId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: ressourceTenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: deleteApiToken_2 200 response
      summary: Delete an API Token for specific user and token id
      tags:
      - Users
      x-accepts:
      - application/json
  /api/v1/tenants/{ressourceTenant}/users/{id}/auths/{uid}:
    delete:
      operationId: deleteAuth_1
      parameters:
      - description: The user id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The auth id
        explode: false
        in: path
        name: uid
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: ressourceTenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "404":
          description: On user not found
      summary: Delete an Auth for a user
      tags:
      - Users
      x-accepts:
      - application/json
  /api/v1/tenants/{ressourceTenant}/users/{id}/impersonate:
    post:
      operationId: impersonate_1
      parameters:
      - description: The user id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: ressourceTenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: impersonate_1 200 response
      summary: Impersonate a user
      tags:
      - Users
      x-accepts:
      - application/json
  /api/v1/tenants/{ressourceTenant}/users/{id}/password:
    put:
      operationId: index_19
      parameters:
      - description: The user id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: ressourceTenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AbstractUserController.PasswordRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUser'
          description: index_19 200 response
      summary: Create a basic auth password for a standard user
      tags:
      - Users
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/tenants/{ressourceTenant}/users/{id}/refresh-token:
    delete:
      operationId: deleteRefreshToken_1
      parameters:
      - description: The user id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: ressourceTenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUser'
          description: deleteRefreshToken_1 200 response
      summary: Delete a user refresh token
      tags:
      - Users
      x-accepts:
      - application/json
  /api/v1/tenants/{ressourceTenant}/users/{id}/set-superadmin:
    put:
      operationId: setSuperAdmin_1
      parameters:
      - description: The user id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: ressourceTenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              type: boolean
        required: true
      responses:
        "404":
          description: On user not found
      summary: Update a user service account
      tags:
      - Users
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/triggers:
    put:
      operationId: update_17
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Trigger'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trigger'
          description: update_17 200 response
      summary: Update a trigger
      tags:
      - Triggers
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/triggers/backfill/delete:
    post:
      operationId: deleteBackfill
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Trigger'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trigger'
          description: deleteBackfill 200 response
      summary: Delete a backfill
      tags:
      - Triggers
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/triggers/backfill/delete/by-query:
    post:
      operationId: deleteBackfillByQuery
      parameters:
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A namespace filter prefix
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: deleteBackfillByQuery 200 response
      summary: Delete backfill for given triggers
      tags:
      - Triggers
      x-accepts:
      - application/json
  /api/v1/triggers/backfill/delete/by-triggers:
    post:
      operationId: deleteBackfillByIds
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Trigger'
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: deleteBackfillByIds 200 response
      summary: Delete backfill for given triggers
      tags:
      - Triggers
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/triggers/backfill/pause:
    put:
      operationId: pauseBackfill
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Trigger'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trigger'
          description: pauseBackfill 200 response
      summary: Pause a backfill
      tags:
      - Triggers
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/triggers/backfill/pause/by-query:
    post:
      operationId: pauseBackfillByQuery
      parameters:
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A namespace filter prefix
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: pauseBackfillByQuery 200 response
      summary: Pause backfill for given triggers
      tags:
      - Triggers
      x-accepts:
      - application/json
  /api/v1/triggers/backfill/pause/by-triggers:
    post:
      operationId: pauseBackfillByIds
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Trigger'
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: pauseBackfillByIds 200 response
      summary: Pause backfill for given triggers
      tags:
      - Triggers
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/triggers/backfill/unpause:
    put:
      operationId: unpauseBackfill
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Trigger'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trigger'
          description: unpauseBackfill 200 response
      summary: Unpause a backfill
      tags:
      - Triggers
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/triggers/backfill/unpause/by-query:
    post:
      operationId: unpauseBackfillByQuery
      parameters:
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A namespace filter prefix
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: unpauseBackfillByQuery 200 response
      summary: Unpause backfill for given triggers
      tags:
      - Triggers
      x-accepts:
      - application/json
  /api/v1/triggers/backfill/unpause/by-triggers:
    post:
      operationId: unpauseBackfillByIds
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Trigger'
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: unpauseBackfillByIds 200 response
      summary: Unpause backfill for given triggers
      tags:
      - Triggers
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/triggers/search:
    get:
      operationId: search_4
      parameters:
      - description: The current page
        explode: true
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: The current page size
        explode: true
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: The sort of current page
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A namespace filter prefix
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The identifier of the worker currently evaluating the trigger
        explode: true
        in: query
        name: workerId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The flow identifier
        explode: true
        in: query
        name: flowId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResults_TriggerController.Triggers_'
          description: search_4 200 response
      summary: Search for triggers
      tags:
      - Triggers
      x-accepts:
      - application/json
  /api/v1/triggers/set-disabled/by-query:
    post:
      operationId: setDisabledByQuery
      parameters:
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A namespace filter prefix
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The disabled state
        explode: true
        in: query
        name: disabled
        required: true
        schema:
          default: true
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: setDisabledByQuery 200 response
      summary: Delete backfill for given triggers
      tags:
      - Triggers
      x-accepts:
      - application/json
  /api/v1/triggers/set-disabled/by-triggers:
    post:
      operationId: setDisabledByIds
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TriggerController.SetDisabledRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: setDisabledByIds 200 response
      summary: Delete backfill for given triggers
      tags:
      - Triggers
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/triggers/unlock/by-query:
    post:
      operationId: unlockByQuery
      parameters:
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A namespace filter prefix
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: unlockByQuery 200 response
      summary: Unlock triggers by query parameters
      tags:
      - Triggers
      x-accepts:
      - application/json
  /api/v1/triggers/unlock/by-triggers:
    post:
      operationId: unlockByIds
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Trigger'
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: unlockByIds 200 response
      summary: Unlock given triggers
      tags:
      - Triggers
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/triggers/{namespace}/{flowId}:
    get:
      operationId: find_25
      parameters:
      - description: The current page
        explode: true
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: The current page size
        explode: true
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: The sort of current page
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          nullable: true
          type: string
        style: simple
      - description: The flow id
        explode: false
        in: path
        name: flowId
        required: true
        schema:
          nullable: true
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResults_Trigger_'
          description: find_25 200 response
      summary: Get all triggers for a flow
      tags:
      - Triggers
      x-accepts:
      - application/json
  /api/v1/triggers/{namespace}/{flowId}/{triggerId}/restart:
    post:
      operationId: restart_1
      parameters:
      - description: The namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The flow id
        explode: false
        in: path
        name: flowId
        required: true
        schema:
          type: string
        style: simple
      - description: The trigger id
        explode: false
        in: path
        name: triggerId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: restart_1 200 response
      summary: Restart a trigger
      tags:
      - Triggers
      x-accepts:
      - application/json
  /api/v1/triggers/{namespace}/{flowId}/{triggerId}/unlock:
    post:
      operationId: unlock
      parameters:
      - description: The namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The flow id
        explode: false
        in: path
        name: flowId
        required: true
        schema:
          type: string
        style: simple
      - description: The trigger id
        explode: false
        in: path
        name: triggerId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trigger'
          description: unlock 200 response
      summary: Unlock a trigger
      tags:
      - Triggers
      x-accepts:
      - application/json
  /api/v1/usages:
    get:
      operationId: tenantUsage
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tenantUsage_200_response'
              example: null
          description: tenantUsage 200 response
      summary: Get instance usage information for the current tenant
      tags:
      - Misc
      x-accepts:
      - application/json
  /api/v1/usages/all:
    get:
      operationId: usages
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usage'
          description: usages 200 response
      summary: Get instance usage information
      tags:
      - Misc
      x-accepts:
      - application/json
  /api/v1/users:
    post:
      operationId: create_25
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiUser'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUser'
          description: create_25 200 response
      summary: Create a standard user
      tags:
      - Users
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/users/autocomplete:
    post:
      operationId: autocomplete_11
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AbstractUserController.UserApiAutocomplete'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiUser'
                type: array
          description: autocomplete_11 200 response
      summary: List users for autocomplete
      tags:
      - Users
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/users/search:
    get:
      operationId: find_26
      parameters:
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The current page
        explode: true
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: The current page size
        explode: true
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      - description: The sort of current page
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: The type of user
        explode: true
        in: query
        name: type
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/UserType'
          nullable: true
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResults_ApiUser_'
          description: find_26 200 response
      summary: Search for users
      tags:
      - Users
      x-accepts:
      - application/json
  /api/v1/users/service-accounts:
    post:
      operationId: createServiceAccount_2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiServiceAccount'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServiceAccount'
          description: createServiceAccount_2 200 response
      summary: Create a user service account
      tags:
      - Users
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/users/service-accounts/{id}:
    put:
      operationId: updateServiceAccount_2
      parameters:
      - description: The user id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiServiceAccount'
        required: true
      responses:
        "404":
          description: On user not found
      summary: Update a user service account
      tags:
      - Users
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/users/{id}:
    delete:
      operationId: delete_28
      parameters:
      - description: The user id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: On success
        "404":
          description: On user not found
      summary: Delete a user
      tags:
      - Users
      x-accepts:
      - application/json
    get:
      operationId: index_20
      parameters:
      - description: The user id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "404":
          description: On user not found
      summary: Get a user
      tags:
      - Users
      x-accepts:
      - application/json
    put:
      operationId: update_18
      parameters:
      - description: The user id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiUser'
        required: true
      responses:
        "404":
          description: On user not found
      summary: Update a standard user
      tags:
      - Users
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/users/{id}/api-tokens:
    get:
      operationId: listApiTokens_3
      parameters:
      - description: The user id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: listApiTokens_3 200 response
      summary: List all API Tokens for specific user
      tags:
      - Users
      x-accepts:
      - application/json
    post:
      operationId: createApiTokensForUser_2
      parameters:
      - description: The user id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateApiTokenRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: createApiTokensForUser_2 200 response
      summary: Create new API Token for a specific user
      tags:
      - Users
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/users/{id}/api-tokens/{tokenId}:
    delete:
      operationId: deleteApiToken_3
      parameters:
      - description: The user id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The token id
        explode: false
        in: path
        name: tokenId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: deleteApiToken_3 200 response
      summary: Delete an API Token for specific user and token id
      tags:
      - Users
      x-accepts:
      - application/json
  /api/v1/users/{id}/auths/{uid}:
    delete:
      operationId: deleteAuth_2
      parameters:
      - description: The user id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The auth id
        explode: false
        in: path
        name: uid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "404":
          description: On user not found
      summary: Delete an Auth for a user
      tags:
      - Users
      x-accepts:
      - application/json
  /api/v1/users/{id}/password:
    put:
      operationId: index_21
      parameters:
      - description: The user id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AbstractUserController.PasswordRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUser'
          description: index_21 200 response
      summary: Create a basic auth password for a standard user
      tags:
      - Users
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/users/{id}/refresh-token:
    delete:
      operationId: deleteRefreshToken_2
      parameters:
      - description: The user id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUser'
          description: deleteRefreshToken_2 200 response
      summary: Delete a user refresh token
      tags:
      - Users
      x-accepts:
      - application/json
  /api/v1/{tenant}/acls/actions:
    get:
      operationId: actions_1
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Action'
                type: array
          description: actions_1 200 response
      summary: Get list of actions
      tags:
      - Misc
      x-accepts:
      - application/json
  /api/v1/{tenant}/acls/permissions:
    get:
      operationId: permissions_1
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Permission'
                type: array
          description: permissions_1 200 response
      summary: Get list of permissions
      tags:
      - Misc
      x-accepts:
      - application/json
  /api/v1/{tenant}/apps:
    post:
      operationId: create_26
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/x-yaml:
            schema:
              type: string
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppsController.ApiAppSource'
          description: create_26 200 response
      summary: Create a new app
      tags:
      - Apps
      x-content-type: application/x-yaml
      x-accepts:
      - application/json
  /api/v1/{tenant}/apps/search:
    get:
      operationId: search_5
      parameters:
      - description: The current page
        explode: true
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: The current page size
        explode: true
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      - description: The sort of current page
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: A tags filter
        explode: true
        in: query
        name: tags
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A namespace filter prefix
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A flow id filter
        explode: true
        in: query
        name: flowId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResults_AppsController.ApiApp_'
          description: search_5 200 response
      summary: Search for apps
      tags:
      - Apps
      x-accepts:
      - application/json
  /api/v1/{tenant}/apps/tags:
    get:
      operationId: tags_1
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppsController.ApiAppTags'
          description: tags_1 200 response
      summary: Get all the app tags
      tags:
      - Apps
      x-accepts:
      - application/json
  /api/v1/{tenant}/apps/view/{id}/dispatch/{dispatch}:
    post:
      operationId: dispatch_1
      parameters:
      - description: The ID of the app.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID to dispatch
        explode: false
        in: path
        name: dispatch
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            encoding: {}
            schema:
              items:
                format: binary
                type: string
              nullable: true
              properties:
                parameters:
                  $ref: '#/components/schemas/HttpParameters'
              type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppResponse'
          description: dispatch_1 200 response
      summary: Dispatch for a given app.
      tags:
      - Apps
      x-content-type: multipart/form-data
      x-accepts:
      - application/json
  /api/v1/{tenant}/apps/view/{id}/file/download:
    get:
      operationId: getFileDownload_1
      parameters:
      - description: The ID of the app.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The internal storage uri
        explode: true
        in: query
        name: path
        required: true
        schema:
          format: uri
          type: string
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                format: binary
                type: string
          description: getFileDownload_1 200 response
      summary: Download file for an app execution
      tags:
      - Apps
      x-accepts:
      - application/json
  /api/v1/{tenant}/apps/view/{id}/file/meta:
    get:
      operationId: getFileMeta_1
      parameters:
      - description: The ID of the app.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The internal storage uri
        explode: true
        in: query
        name: path
        required: true
        schema:
          format: uri
          type: string
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileMetas'
          description: getFileMeta_1 200 response
      summary: Get file meta information for an app execution
      tags:
      - Apps
      x-accepts:
      - application/json
  /api/v1/{tenant}/apps/view/{id}/file/preview:
    get:
      operationId: getFilePreview_1
      parameters:
      - description: The ID of the app.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The internal storage uri
        explode: true
        in: query
        name: path
        required: true
        schema:
          format: uri
          type: string
        style: form
      - description: The max row returns
        explode: true
        in: query
        name: maxRows
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
      - description: The file encoding as Java charset name. Defaults to UTF-8
        example: ISO-8859-1
        explode: true
        in: query
        name: encoding
        required: true
        schema:
          default: UTF-8
          type: string
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: getFilePreview_1 200 response
      summary: Get file preview for an app execution
      tags:
      - Apps
      x-accepts:
      - application/json
  /api/v1/{tenant}/apps/view/{id}/streams/{stream}:
    get:
      operationId: streams_1
      parameters:
      - description: The ID of the app.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the stream to get
        explode: false
        in: path
        name: stream
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: parameters
        required: true
        schema:
          $ref: '#/components/schemas/HttpParameters'
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/event-stream:
              schema:
                $ref: '#/components/schemas/Event_AppResponse_'
          description: streams_1 200 response
      summary: Get an event stream from a given app.
      tags:
      - Apps
      x-accepts:
      - text/event-stream
  /api/v1/{tenant}/apps/view/{uid}:
    get:
      operationId: open_1
      parameters:
      - description: The ID of the app
        explode: false
        in: path
        name: uid
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: parameters
        required: true
        schema:
          $ref: '#/components/schemas/HttpParameters'
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppResponse'
          description: open_1 200 response
      summary: Open an app
      tags:
      - Apps
      x-accepts:
      - application/json
  /api/v1/{tenant}/apps/view/{uid}/logs/download:
    get:
      operationId: download_2
      parameters:
      - description: The ID of the app.
        explode: false
        in: path
        name: uid
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the execution.
        explode: true
        in: query
        name: executionId
        required: true
        schema:
          type: string
        style: form
      - description: The min log level filter
        explode: true
        in: query
        name: minLevel
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/Level'
          nullable: true
        style: form
      - description: The tasks' IDs
        explode: true
        in: query
        name: taskIds
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: download_2 200 response
      summary: Download logs for an app execution
      tags:
      - Apps
      x-accepts:
      - application/octet-stream
  /api/v1/{tenant}/apps/{uid}:
    delete:
      operationId: delete_29
      parameters:
      - description: The ID of the app
        explode: false
        in: path
        name: uid
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: delete_29 200 response
      summary: Delete an existing app
      tags:
      - Apps
      x-accepts:
      - application/json
    get:
      operationId: get_8
      parameters:
      - description: The ID of the app
        explode: false
        in: path
        name: uid
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppsController.ApiAppSource'
          description: get_8 200 response
      summary: Get a app
      tags:
      - Apps
      x-accepts:
      - application/json
    put:
      operationId: update_19
      parameters:
      - description: The ID of the app
        explode: false
        in: path
        name: uid
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/x-yaml:
            schema:
              type: string
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppsController.ApiAppSource'
          description: update_19 200 response
      summary: Update an existing app
      tags:
      - Apps
      x-content-type: application/x-yaml
      x-accepts:
      - application/json
  /api/v1/{tenant}/apps/{uid}/disable:
    post:
      operationId: disable_2
      parameters:
      - description: The ID of app
        explode: false
        in: path
        name: uid
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppsController.ApiApp'
          description: disable_2 200 response
      summary: Disable the app.
      tags:
      - Apps
      x-accepts:
      - application/json
  /api/v1/{tenant}/apps/{uid}/enable:
    post:
      operationId: enable_2
      parameters:
      - description: The ID of app
        explode: false
        in: path
        name: uid
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppsController.ApiApp'
          description: enable_2 200 response
      summary: Enable the app.
      tags:
      - Apps
      x-accepts:
      - application/json
  /api/v1/{tenant}/auditlogs/find:
    post:
      operationId: find_27
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuditLogController.FindRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditLogController.AuditLogWithUser'
          description: find_27 200 response
      summary: Find audit logs
      tags:
      - Audit Logs
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/auditlogs/search:
    get:
      operationId: search_6
      parameters:
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The current page
        explode: true
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: The current page size
        explode: true
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      - description: The sort of current page
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: A namespace filter
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A flow id filter
        explode: true
        in: query
        name: flowId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: An execution filter
        explode: true
        in: query
        name: executionId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A user id filter
        explode: true
        in: query
        name: userId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A id filter
        explode: true
        in: query
        name: id
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A permission filter
        explode: true
        in: query
        name: permission
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/Permission'
          nullable: true
        style: form
      - description: The start datetime
        explode: true
        in: query
        name: startDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: The end datetime
        explode: true
        in: query
        name: endDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: A list of auditLog details
        explode: true
        in: query
        name: details
        required: false
        schema:
          additionalProperties:
            type: string
          nullable: true
          type: object
        style: form
      - description: The event that create the audit log
        explode: true
        in: query
        name: type
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/CrudEventType'
          nullable: true
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResults_AuditLogController.AuditLogWithUser_'
          description: search_6 200 response
      summary: Search for audit logs
      tags:
      - Audit Logs
      x-accepts:
      - application/json
  /api/v1/{tenant}/auditlogs/{id}/diff:
    get:
      operationId: diff_1
      parameters:
      - description: The id of the audit log
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditLogController.AuditLogDiff'
          description: diff_1 200 response
      summary: Get the diff of an audit log
      tags:
      - Audit Logs
      x-accepts:
      - application/json
  /api/v1/{tenant}/basicAuth:
    post:
      operationId: addBasicAuth_1
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MiscController.BasicAuthCredentials'
        required: true
      responses:
        "200":
          description: addBasicAuth_1 200 response
      summary: Add basic auth to current instance
      tags:
      - Misc
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/bindings:
    post:
      operationId: create_27
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Binding'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AbstractBindingController.BindingDetail'
          description: create_27 200 response
      summary: Create a binding
      tags:
      - Bindings
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/bindings/bulk:
    post:
      operationId: bulkCreate_3
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Binding'
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AbstractBindingController.BindingDetail'
                type: array
          description: bulkCreate_3 200 response
      summary: Create multiple bindings
      tags:
      - Bindings
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/bindings/search:
    get:
      operationId: find_28
      parameters:
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The current page
        explode: true
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: The current page size
        explode: true
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      - description: The sort of current page
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: Binding type filter
        explode: true
        in: query
        name: type
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/Binding.Type'
          nullable: true
        style: form
      - description: External id filter
        explode: true
        in: query
        name: id
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A namespace filter
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResults_AbstractBindingController.BindingDetail_'
          description: find_28 200 response
      summary: Search for bindings
      tags:
      - Bindings
      x-accepts:
      - application/json
  /api/v1/{tenant}/bindings/{id}:
    delete:
      operationId: delete_30
      parameters:
      - description: The binding id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: On success
      summary: Delete a binding
      tags:
      - Bindings
      x-accepts:
      - application/json
    get:
      operationId: index_22
      parameters:
      - description: The binding id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AbstractBindingController.BindingDetail'
          description: index_22 200 response
      summary: Get a binding
      tags:
      - Bindings
      x-accepts:
      - application/json
  /api/v1/{tenant}/blueprints/community:
    get:
      operationId: blueprints_1
      parameters:
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The sort of current page
        explode: true
        in: query
        name: sort
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A tags filter
        explode: true
        in: query
        name: tags
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: The current page
        explode: true
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: The current page size
        explode: true
        in: query
        name: size
        required: true
        schema:
          default: 1
          format: int32
          minimum: 1
          type: integer
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResults_BlueprintController.BlueprintItem_'
          description: blueprints_1 200 response
      summary: List all blueprints
      tags:
      - Blueprints
      x-accepts:
      - application/json
  /api/v1/{tenant}/blueprints/community/tags:
    get:
      operationId: blueprintTags_1
      parameters:
      - description: A string filter to get tags with matching blueprints only
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/BlueprintController.BlueprintTagItem'
                type: array
          description: blueprintTags_1 200 response
      summary: List blueprint tags matching the filter
      tags:
      - Blueprint Tags
      x-accepts:
      - application/json
  /api/v1/{tenant}/blueprints/community/{id}:
    get:
      operationId: blueprint_1
      parameters:
      - description: The blueprint id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlueprintController.BlueprintItemWithFlow'
          description: blueprint_1 200 response
      summary: Get a blueprint
      tags:
      - blueprints
      x-accepts:
      - application/json
  /api/v1/{tenant}/blueprints/community/{id}/flow:
    get:
      operationId: blueprintFlow_1
      parameters:
      - description: The blueprint id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/yaml:
              schema:
                type: string
          description: blueprintFlow_1 200 response
      summary: Get a blueprint flow
      tags:
      - blueprints
      x-accepts:
      - application/yaml
  /api/v1/{tenant}/blueprints/community/{id}/graph:
    get:
      operationId: blueprintGraph_1
      parameters:
      - description: The blueprint id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: blueprintGraph_1 200 response
      summary: Get a blueprint graph
      tags:
      - blueprints
      x-accepts:
      - application/json
  /api/v1/{tenant}/blueprints/custom:
    get:
      operationId: internalBlueprints_2
      parameters:
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The sort of current page
        explode: true
        in: query
        name: sort
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A tags filter
        explode: true
        in: query
        name: tags
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: The current page
        explode: true
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: The current page size
        explode: true
        in: query
        name: size
        required: true
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResults_Blueprint_'
          description: internalBlueprints_2 200 response
      summary: List all internal blueprints
      tags:
      - Blueprints
      x-accepts:
      - application/json
    post:
      operationId: createInternalBlueprints_1
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlueprintWithFlow'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlueprintWithFlow'
          description: createInternalBlueprints_1 200 response
      summary: Create a new internal blueprint
      tags:
      - Blueprints
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/blueprints/custom/tags:
    get:
      operationId: internalBlueprintTags_1
      parameters:
      - description: A string filter to get tags with matching blueprints only
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: internalBlueprintTags_1 200 response
      summary: List all internal blueprint tags
      tags:
      - Blueprint Tags
      x-accepts:
      - application/json
  /api/v1/{tenant}/blueprints/custom/{id}:
    delete:
      operationId: internalBlueprints_3
      parameters:
      - description: The internal blueprint id to delete
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: internalBlueprints_3 200 response
      summary: Delete an internal blueprint
      tags:
      - Blueprints
      x-accepts:
      - application/json
    get:
      operationId: internalBlueprint_1
      parameters:
      - description: The blueprint id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlueprintWithFlow'
          description: internalBlueprint_1 200 response
      summary: Get an internal blueprint
      tags:
      - blueprints
      x-accepts:
      - application/json
    put:
      operationId: updateInternalBlueprints_1
      parameters:
      - description: The id of the internal blueprint to update
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlueprintWithFlow'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlueprintWithFlow'
          description: updateInternalBlueprints_1 200 response
      summary: Update an internal blueprint
      tags:
      - Blueprints
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/blueprints/custom/{id}/flow:
    get:
      operationId: internalBlueprintFlow_1
      parameters:
      - description: The blueprint id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/yaml:
              schema:
                type: string
          description: internalBlueprintFlow_1 200 response
      summary: Get an internal blueprint flow
      tags:
      - blueprints
      x-accepts:
      - application/yaml
  /api/v1/{tenant}/cluster/services/active:
    get:
      operationId: active_1
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterController.ApiActiveServiceList'
          description: active_1 200 response
      summary: Get details about active services
      tags:
      - Services
      x-accepts:
      - application/json
  /api/v1/{tenant}/cluster/services/search:
    get:
      operationId: find_29
      parameters:
      - description: The current page
        explode: true
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: The current page size
        explode: true
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      - description: The sort of current page
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: The state filter
        explode: true
        in: query
        name: state
        required: false
        schema:
          items:
            $ref: '#/components/schemas/Service.ServiceState'
          nullable: true
          type: array
        style: form
      - description: The server type filter
        explode: true
        in: query
        name: type
        required: false
        schema:
          items:
            $ref: '#/components/schemas/Service.ServiceType'
          nullable: true
          type: array
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResults_ClusterController.ApiServiceInstance_'
          description: find_29 200 response
      summary: Search for service
      tags:
      - Services
      x-accepts:
      - application/json
  /api/v1/{tenant}/cluster/services/{id}:
    get:
      operationId: index_23
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceInstance'
          description: index_23 200 response
      summary: Get details about a service
      tags:
      - Services
      x-accepts:
      - application/json
  /api/v1/{tenant}/cluster/workergroups:
    get:
      operationId: listWorkerGroups_1
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterController.ApiWorkerGroupList'
          description: listWorkerGroups_1 200 response
      summary: List all Worker Groups
      tags:
      - WorkerGroups
      x-accepts:
      - application/json
    post:
      operationId: createWorkerGroup_1
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClusterController.ApiCreateOrUpdateWorkerGroupRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterController.ApiWorkerGroup'
          description: createWorkerGroup_1 200 response
      summary: Create a new worker group.
      tags:
      - WorkerGroups
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/cluster/workergroups/{id}:
    delete:
      operationId: deleteWorkerGroupById_1
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: deleteWorkerGroupById_1 200 response
      summary: Delete an existing worker group.
      tags:
      - WorkerGroups
      x-accepts:
      - application/json
    get:
      operationId: getWorkerGroupById_1
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterController.ApiWorkerGroupDetails'
          description: getWorkerGroupById_1 200 response
      summary: Get details about a worker group.
      tags:
      - WorkerGroups
      x-accepts:
      - application/json
    put:
      operationId: updateWorkerGroupById_1
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClusterController.ApiCreateOrUpdateWorkerGroupRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterController.ApiWorkerGroup'
          description: updateWorkerGroupById_1 200 response
      summary: Update an existing worker group.
      tags:
      - WorkerGroups
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/configs:
    get:
      operationId: configuration_1
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MiscController.ConfigurationEe'
          description: configuration_1 200 response
      summary: Get current configurations
      tags:
      - Misc
      x-accepts:
      - application/json
  /api/v1/{tenant}/dashboards:
    get:
      operationId: list_4
      parameters:
      - description: The current page
        explode: true
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: The current page size
        explode: true
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: The filter query
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The sort of current page
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResults_Dashboard_'
          description: list_4 200 response
      summary: List all dashboards
      tags:
      - Dashboards
      x-accepts:
      - application/json
    post:
      operationId: create_28
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/x-yaml:
            schema:
              type: string
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dashboard'
          description: create_28 200 response
      summary: Create a dashboard from yaml source
      tags:
      - Dashboards
      x-content-type: application/x-yaml
      x-accepts:
      - application/json
  /api/v1/{tenant}/dashboards/validate:
    post:
      operationId: validate_1
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/x-yaml:
            schema:
              type: string
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateConstraintViolation'
          description: validate_1 200 response
      summary: Validate dashboard from yaml source
      tags:
      - Dashboards
      x-content-type: application/x-yaml
      x-accepts:
      - application/json
  /api/v1/{tenant}/dashboards/{id}:
    delete:
      operationId: delete_31
      parameters:
      - description: The dashboard id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: delete_31 200 response
      summary: Delete a dashboard
      tags:
      - Dashboards
      x-accepts:
      - application/json
    get:
      operationId: get_9
      parameters:
      - description: The dashboard id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dashboard'
          description: get_9 200 response
      summary: Retrieve a dashboard
      tags:
      - Dashboards
      x-accepts:
      - application/json
    put:
      operationId: update_20
      parameters:
      - description: The dashboard id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/x-yaml:
            schema:
              type: string
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dashboard'
          description: update_20 200 response
      summary: Update a dashboard
      tags:
      - Dashboards
      x-content-type: application/x-yaml
      x-accepts:
      - application/json
  /api/v1/{tenant}/dashboards/{id}/charts/{chartId}:
    post:
      operationId: dashboardChart_1
      parameters:
      - description: The dashboard id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The chart id
        explode: false
        in: path
        name: chartId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties: true
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResults_Map_String.Object__'
          description: dashboardChart_1 200 response
      summary: Generate a dashboard chart data
      tags:
      - Dashboards
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/executions:
    get:
      operationId: findByFlowId_1
      parameters:
      - description: The flow namespace
        explode: true
        in: query
        name: namespace
        required: true
        schema:
          type: string
        style: form
      - description: The flow id
        explode: true
        in: query
        name: flowId
        required: true
        schema:
          type: string
        style: form
      - description: The current page
        explode: true
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: The current page size
        explode: true
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          minimum: 1
          type: integer
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResults_Execution_'
          description: findByFlowId_1 200 response
      summary: Search for executions for a flow
      tags:
      - Executions
      x-accepts:
      - application/json
  /api/v1/{tenant}/executions/by-ids:
    delete:
      operationId: deleteByIds_3
      parameters:
      - description: Whether to delete non-terminated executions
        explode: true
        in: query
        name: includeNonTerminated
        required: false
        schema:
          default: false
          nullable: true
          type: boolean
        style: form
      - description: Whether to delete execution logs
        explode: true
        in: query
        name: deleteLogs
        required: true
        schema:
          default: true
          type: boolean
        style: form
      - description: Whether to delete execution metrics
        explode: true
        in: query
        name: deleteMetrics
        required: true
        schema:
          default: true
          type: boolean
        style: form
      - description: Whether to delete execution files in the internal storage
        explode: true
        in: query
        name: deleteStorage
        required: true
        schema:
          default: true
          type: boolean
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkResponse'
          description: On success
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkErrorResponse'
          description: Deleted with errors
      summary: Delete a list of executions
      tags:
      - Executions
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/executions/by-query:
    delete:
      operationId: deleteByQuery_3
      parameters:
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The scope of the executions to include
        explode: true
        in: query
        name: scope
        required: false
        schema:
          items:
            $ref: '#/components/schemas/FlowScope'
          nullable: true
          type: array
        style: form
      - description: A namespace filter prefix
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A flow id filter
        explode: true
        in: query
        name: flowId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The start datetime
        explode: true
        in: query
        name: startDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: The end datetime
        explode: true
        in: query
        name: endDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: A time range filter relative to the current time
        examples:
          Filter last 5 minutes:
            value: PT5M
          Filter last 24 hours:
            value: P1D
        explode: true
        in: query
        name: timeRange
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A state filter
        explode: true
        in: query
        name: state
        required: false
        schema:
          items:
            $ref: '#/components/schemas/State.Type'
          nullable: true
          type: array
        style: form
      - description: A labels filter as a list of 'key:value'
        explode: true
        in: query
        name: labels
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: The trigger execution id
        explode: true
        in: query
        name: triggerExecutionId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A execution child filter
        explode: true
        in: query
        name: childFilter
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/ExecutionRepositoryInterface.ChildFilter'
          nullable: true
        style: form
      - description: Whether to delete non-terminated executions
        explode: true
        in: query
        name: includeNonTerminated
        required: false
        schema:
          default: false
          nullable: true
          type: boolean
        style: form
      - description: Whether to delete execution logs
        explode: true
        in: query
        name: deleteLogs
        required: true
        schema:
          default: true
          type: boolean
        style: form
      - description: Whether to delete execution metrics
        explode: true
        in: query
        name: deleteMetrics
        required: true
        schema:
          default: true
          type: boolean
        style: form
      - description: Whether to delete execution files in the internal storage
        explode: true
        in: query
        name: deleteStorage
        required: true
        schema:
          default: true
          type: boolean
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: deleteByQuery_3 200 response
      summary: Delete executions filter by query parameters
      tags:
      - Executions
      x-accepts:
      - application/json
  /api/v1/{tenant}/executions/change-status/by-ids:
    post:
      operationId: changeStatusById_1
      parameters:
      - description: The new status of the executions
        explode: true
        in: query
        name: newStatus
        required: true
        schema:
          $ref: '#/components/schemas/State.Type'
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkResponse'
          description: On success
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkErrorResponse'
          description: Changed status with errors
      summary: Change status of executions by id
      tags:
      - Executions
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/executions/change-status/by-query:
    post:
      operationId: changeStatusByQuery_1
      parameters:
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The scope of the executions to include
        explode: true
        in: query
        name: scope
        required: false
        schema:
          items:
            $ref: '#/components/schemas/FlowScope'
          nullable: true
          type: array
        style: form
      - description: A namespace filter prefix
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A flow id filter
        explode: true
        in: query
        name: flowId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The start datetime
        explode: true
        in: query
        name: startDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: The end datetime
        explode: true
        in: query
        name: endDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: A time range filter relative to the current time
        examples:
          Filter last 5 minutes:
            value: PT5M
          Filter last 24 hours:
            value: P1D
        explode: true
        in: query
        name: timeRange
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A state filter
        explode: true
        in: query
        name: state
        required: false
        schema:
          items:
            $ref: '#/components/schemas/State.Type'
          nullable: true
          type: array
        style: form
      - description: A labels filter as a list of 'key:value'
        explode: true
        in: query
        name: labels
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: The trigger execution id
        explode: true
        in: query
        name: triggerExecutionId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A execution child filter
        explode: true
        in: query
        name: childFilter
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/ExecutionRepositoryInterface.ChildFilter'
          nullable: true
        style: form
      - description: The new status of the executions
        explode: true
        in: query
        name: newStatus
        required: true
        schema:
          $ref: '#/components/schemas/State.Type'
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkResponse'
          description: On success
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkErrorResponse'
          description: Changed status with errors
      summary: Change executions status by query parameters
      tags:
      - Executions
      x-accepts:
      - application/json
  /api/v1/{tenant}/executions/flows/{namespace}/{flowId}:
    get:
      operationId: getFlowForExecution_1
      parameters:
      - description: The namespace of the flow
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The flow id
        explode: false
        in: path
        name: flowId
        required: true
        schema:
          type: string
        style: simple
      - description: The flow revision
        explode: true
        in: query
        name: revision
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlowForExecution'
          description: getFlowForExecution_1 200 response
      summary: Get flow information's for an execution
      tags:
      - Executions
      x-accepts:
      - application/json
  /api/v1/{tenant}/executions/force-run/by-ids:
    post:
      operationId: forceRunByIds_1
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkResponse'
          description: On success
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkErrorResponse'
          description: Force run with errors
      summary: Force run a list of executions
      tags:
      - Executions
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/executions/force-run/by-query:
    post:
      operationId: forceRunByQuery_1
      parameters:
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The scope of the executions to include
        explode: true
        in: query
        name: scope
        required: false
        schema:
          items:
            $ref: '#/components/schemas/FlowScope'
          nullable: true
          type: array
        style: form
      - description: A namespace filter prefix
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A flow id filter
        explode: true
        in: query
        name: flowId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The start datetime
        explode: true
        in: query
        name: startDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: The end datetime
        explode: true
        in: query
        name: endDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: A time range filter relative to the current time
        examples:
          Filter last 5 minutes:
            value: PT5M
          Filter last 24 hours:
            value: P1D
        explode: true
        in: query
        name: timeRange
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A state filter
        explode: true
        in: query
        name: state
        required: false
        schema:
          items:
            $ref: '#/components/schemas/State.Type'
          nullable: true
          type: array
        style: form
      - description: A labels filter as a list of 'key:value'
        explode: true
        in: query
        name: labels
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: The trigger execution id
        explode: true
        in: query
        name: triggerExecutionId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A execution child filter
        explode: true
        in: query
        name: childFilter
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/ExecutionRepositoryInterface.ChildFilter'
          nullable: true
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: forceRunByQuery_1 200 response
      summary: Force run executions filter by query parameters
      tags:
      - Executions
      x-accepts:
      - application/json
  /api/v1/{tenant}/executions/kill/by-ids:
    delete:
      operationId: killByIds_1
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkResponse'
          description: On success
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkErrorResponse'
          description: Killed with errors
      summary: Kill a list of executions
      tags:
      - Executions
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/executions/kill/by-query:
    delete:
      operationId: killByQuery_1
      parameters:
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The scope of the executions to include
        explode: true
        in: query
        name: scope
        required: false
        schema:
          items:
            $ref: '#/components/schemas/FlowScope'
          nullable: true
          type: array
        style: form
      - description: A namespace filter prefix
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A flow id filter
        explode: true
        in: query
        name: flowId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The start datetime
        explode: true
        in: query
        name: startDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: The end datetime
        explode: true
        in: query
        name: endDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: A time range filter relative to the current time
        examples:
          Filter last 5 minutes:
            value: PT5M
          Filter last 24 hours:
            value: P1D
        explode: true
        in: query
        name: timeRange
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A state filter
        explode: true
        in: query
        name: state
        required: false
        schema:
          items:
            $ref: '#/components/schemas/State.Type'
          nullable: true
          type: array
        style: form
      - description: A labels filter as a list of 'key:value'
        explode: true
        in: query
        name: labels
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: The trigger execution id
        explode: true
        in: query
        name: triggerExecutionId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A execution child filter
        explode: true
        in: query
        name: childFilter
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/ExecutionRepositoryInterface.ChildFilter'
          nullable: true
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: killByQuery_1 200 response
      summary: Kill executions filter by query parameters
      tags:
      - Executions
      x-accepts:
      - application/json
  /api/v1/{tenant}/executions/labels/by-ids:
    post:
      operationId: setLabelsByIds_1
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExecutionController.SetLabelsByIdsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkResponse'
          description: On success
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkErrorResponse'
          description: Killed with errors
      summary: Set labels on a list of executions
      tags:
      - Executions
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/executions/labels/by-query:
    post:
      operationId: setLabelsByQuery_1
      parameters:
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The scope of the executions to include
        explode: true
        in: query
        name: scope
        required: false
        schema:
          items:
            $ref: '#/components/schemas/FlowScope'
          nullable: true
          type: array
        style: form
      - description: A namespace filter prefix
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A flow id filter
        explode: true
        in: query
        name: flowId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The start datetime
        explode: true
        in: query
        name: startDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: The end datetime
        explode: true
        in: query
        name: endDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: A time range filter relative to the current time
        examples:
          Filter last 5 minutes:
            value: PT5M
          Filter last 24 hours:
            value: P1D
        explode: true
        in: query
        name: timeRange
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A state filter
        explode: true
        in: query
        name: state
        required: false
        schema:
          items:
            $ref: '#/components/schemas/State.Type'
          nullable: true
          type: array
        style: form
      - description: A labels filter as a list of 'key:value'
        explode: true
        in: query
        name: labels
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: The trigger execution id
        explode: true
        in: query
        name: triggerExecutionId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A execution child filter
        explode: true
        in: query
        name: childFilter
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/ExecutionRepositoryInterface.ChildFilter'
          nullable: true
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Label'
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: setLabelsByQuery_1 200 response
      summary: Set label on executions filter by query parameters
      tags:
      - Executions
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/executions/namespaces:
    get:
      operationId: listDistinctNamespace_3
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: listDistinctNamespace_3 200 response
      summary: Get all namespaces that have executable flows
      tags:
      - Executions
      x-accepts:
      - application/json
  /api/v1/{tenant}/executions/namespaces/{namespace}/flows:
    get:
      operationId: getFlowsByNamespace_2
      parameters:
      - description: The namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FlowForExecution'
                type: array
          description: getFlowsByNamespace_2 200 response
      summary: Get all flow ids for a namespace
      tags:
      - Executions
      x-accepts:
      - application/json
  /api/v1/{tenant}/executions/pause/by-ids:
    post:
      operationId: pauseByIds_1
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkResponse'
          description: On success
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkErrorResponse'
          description: Paused with errors
      summary: Pause a list of running executions
      tags:
      - Executions
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/executions/pause/by-query:
    post:
      operationId: pauseByQuery_1
      parameters:
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The scope of the executions to include
        explode: true
        in: query
        name: scope
        required: false
        schema:
          items:
            $ref: '#/components/schemas/FlowScope'
          nullable: true
          type: array
        style: form
      - description: A namespace filter prefix
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A flow id filter
        explode: true
        in: query
        name: flowId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The start datetime
        explode: true
        in: query
        name: startDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: The end datetime
        explode: true
        in: query
        name: endDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: A time range filter relative to the current time
        examples:
          Filter last 5 minutes:
            value: PT5M
          Filter last 24 hours:
            value: P1D
        explode: true
        in: query
        name: timeRange
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A state filter
        explode: true
        in: query
        name: state
        required: false
        schema:
          items:
            $ref: '#/components/schemas/State.Type'
          nullable: true
          type: array
        style: form
      - description: A labels filter as a list of 'key:value'
        explode: true
        in: query
        name: labels
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: The trigger execution id
        explode: true
        in: query
        name: triggerExecutionId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A execution child filter
        explode: true
        in: query
        name: childFilter
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/ExecutionRepositoryInterface.ChildFilter'
          nullable: true
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: pauseByQuery_1 200 response
      summary: Pause executions filter by query parameters
      tags:
      - Executions
      x-accepts:
      - application/json
  /api/v1/{tenant}/executions/replay/by-ids:
    post:
      operationId: replayByIds_1
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkResponse'
          description: On success
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkErrorResponse'
          description: Replayed with errors
      summary: Create new executions from old ones. Keep the flow revision
      tags:
      - Executions
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/executions/replay/by-query:
    post:
      operationId: replayByQuery_1
      parameters:
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The scope of the executions to include
        explode: true
        in: query
        name: scope
        required: false
        schema:
          items:
            $ref: '#/components/schemas/FlowScope'
          nullable: true
          type: array
        style: form
      - description: A namespace filter prefix
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A flow id filter
        explode: true
        in: query
        name: flowId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The start datetime
        explode: true
        in: query
        name: startDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: The end datetime
        explode: true
        in: query
        name: endDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: A time range filter relative to the current time
        examples:
          Filter last 5 minutes:
            value: PT5M
          Filter last 24 hours:
            value: P1D
        explode: true
        in: query
        name: timeRange
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A state filter
        explode: true
        in: query
        name: state
        required: false
        schema:
          items:
            $ref: '#/components/schemas/State.Type'
          nullable: true
          type: array
        style: form
      - description: A labels filter as a list of 'key:value'
        explode: true
        in: query
        name: labels
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: The trigger execution id
        explode: true
        in: query
        name: triggerExecutionId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A execution child filter
        explode: true
        in: query
        name: childFilter
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/ExecutionRepositoryInterface.ChildFilter'
          nullable: true
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: replayByQuery_1 200 response
      summary: Create new executions from old ones filter by query parameters. Keep
        the flow revision
      tags:
      - Executions
      x-accepts:
      - application/json
  /api/v1/{tenant}/executions/restart/by-ids:
    post:
      operationId: restartByIds_1
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkResponse'
          description: On success
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkErrorResponse'
          description: Restarted with errors
      summary: Restart a list of executions
      tags:
      - Executions
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/executions/restart/by-query:
    post:
      operationId: restartByQuery_1
      parameters:
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The scope of the executions to include
        explode: true
        in: query
        name: scope
        required: false
        schema:
          items:
            $ref: '#/components/schemas/FlowScope'
          nullable: true
          type: array
        style: form
      - description: A namespace filter prefix
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A flow id filter
        explode: true
        in: query
        name: flowId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The start datetime
        explode: true
        in: query
        name: startDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: The end datetime
        explode: true
        in: query
        name: endDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: A time range filter relative to the current time
        examples:
          Filter last 5 minutes:
            value: PT5M
          Filter last 24 hours:
            value: P1D
        explode: true
        in: query
        name: timeRange
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A state filter
        explode: true
        in: query
        name: state
        required: false
        schema:
          items:
            $ref: '#/components/schemas/State.Type'
          nullable: true
          type: array
        style: form
      - description: A labels filter as a list of 'key:value'
        explode: true
        in: query
        name: labels
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: The trigger execution id
        explode: true
        in: query
        name: triggerExecutionId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A execution child filter
        explode: true
        in: query
        name: childFilter
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/ExecutionRepositoryInterface.ChildFilter'
          nullable: true
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: restartByQuery_1 200 response
      summary: Restart executions filter by query parameters
      tags:
      - Executions
      x-accepts:
      - application/json
  /api/v1/{tenant}/executions/resume/by-ids:
    post:
      operationId: resumeByIds_1
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkResponse'
          description: On success
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkErrorResponse'
          description: Resumed with errors
      summary: Resume a list of paused executions
      tags:
      - Executions
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/executions/resume/by-query:
    post:
      operationId: resumeByQuery_1
      parameters:
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The scope of the executions to include
        explode: true
        in: query
        name: scope
        required: false
        schema:
          items:
            $ref: '#/components/schemas/FlowScope'
          nullable: true
          type: array
        style: form
      - description: A namespace filter prefix
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A flow id filter
        explode: true
        in: query
        name: flowId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The start datetime
        explode: true
        in: query
        name: startDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: The end datetime
        explode: true
        in: query
        name: endDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: A time range filter relative to the current time
        examples:
          Filter last 5 minutes:
            value: PT5M
          Filter last 24 hours:
            value: P1D
        explode: true
        in: query
        name: timeRange
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A state filter
        explode: true
        in: query
        name: state
        required: false
        schema:
          items:
            $ref: '#/components/schemas/State.Type'
          nullable: true
          type: array
        style: form
      - description: A labels filter as a list of 'key:value'
        explode: true
        in: query
        name: labels
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: The trigger execution id
        explode: true
        in: query
        name: triggerExecutionId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A execution child filter
        explode: true
        in: query
        name: childFilter
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/ExecutionRepositoryInterface.ChildFilter'
          nullable: true
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: resumeByQuery_1 200 response
      summary: Resume executions filter by query parameters
      tags:
      - Executions
      x-accepts:
      - application/json
  /api/v1/{tenant}/executions/search:
    get:
      operationId: find_30
      parameters:
      - description: The current page
        explode: true
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: The current page size
        explode: true
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: The sort of current page
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The scope of the executions to include
        explode: true
        in: query
        name: scope
        required: false
        schema:
          items:
            $ref: '#/components/schemas/FlowScope'
          nullable: true
          type: array
        style: form
      - description: A namespace filter prefix
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A flow id filter
        explode: true
        in: query
        name: flowId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The start datetime
        explode: true
        in: query
        name: startDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: The end datetime
        explode: true
        in: query
        name: endDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: A time range filter relative to the current time
        examples:
          Filter last 5 minutes:
            value: PT5M
          Filter last 24 hours:
            value: P1D
        explode: true
        in: query
        name: timeRange
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A state filter
        explode: true
        in: query
        name: state
        required: false
        schema:
          items:
            $ref: '#/components/schemas/State.Type'
          nullable: true
          type: array
        style: form
      - description: A labels filter as a list of 'key:value'
        explode: true
        in: query
        name: labels
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: The trigger execution id
        explode: true
        in: query
        name: triggerExecutionId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A execution child filter
        explode: true
        in: query
        name: childFilter
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/ExecutionRepositoryInterface.ChildFilter'
          nullable: true
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResults_Execution_'
          description: find_30 200 response
      summary: Search for executions
      tags:
      - Executions
      x-accepts:
      - application/json
  /api/v1/{tenant}/executions/trigger/{namespace}/{id}:
    post:
      operationId: trigger_1
      parameters:
      - description: The flow namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The flow id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The labels as a list of 'key:value'
        explode: true
        in: query
        name: labels
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: If the server will wait the end of the execution
        explode: true
        in: query
        name: wait
        required: true
        schema:
          default: false
          type: boolean
        style: form
      - description: The flow revision or latest if null
        explode: true
        in: query
        name: revision
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              items:
                format: binary
                type: string
              nullable: true
              type: array
      responses:
        "409":
          description: if the flow is disabled
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ExecutionController.ExecutionResponse'
                type: array
          description: trigger_1 200 response
      summary: Trigger a new execution for a flow
      tags:
      - Executions
      x-content-type: multipart/form-data
      x-accepts:
      - application/json
  /api/v1/{tenant}/executions/unqueue/by-ids:
    post:
      operationId: unqueueByIds_1
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkResponse'
          description: On success
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkErrorResponse'
          description: Unqueued with errors
      summary: Unqueue a list of executions
      tags:
      - Executions
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/executions/unqueue/by-query:
    post:
      operationId: unqueueByQuery_1
      parameters:
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The scope of the executions to include
        explode: true
        in: query
        name: scope
        required: false
        schema:
          items:
            $ref: '#/components/schemas/FlowScope'
          nullable: true
          type: array
        style: form
      - description: A namespace filter prefix
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A flow id filter
        explode: true
        in: query
        name: flowId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The start datetime
        explode: true
        in: query
        name: startDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: The end datetime
        explode: true
        in: query
        name: endDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: A time range filter relative to the current time
        examples:
          Filter last 5 minutes:
            value: PT5M
          Filter last 24 hours:
            value: P1D
        explode: true
        in: query
        name: timeRange
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A state filter
        explode: true
        in: query
        name: state
        required: false
        schema:
          items:
            $ref: '#/components/schemas/State.Type'
          nullable: true
          type: array
        style: form
      - description: A labels filter as a list of 'key:value'
        explode: true
        in: query
        name: labels
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: The trigger execution id
        explode: true
        in: query
        name: triggerExecutionId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A execution child filter
        explode: true
        in: query
        name: childFilter
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/ExecutionRepositoryInterface.ChildFilter'
          nullable: true
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: unqueueByQuery_1 200 response
      summary: Unqueue executions filter by query parameters
      tags:
      - Executions
      x-accepts:
      - application/json
  /api/v1/{tenant}/executions/webhook/{namespace}/{id}/{key}:
    get:
      operationId: webhookTriggerGet_1
      parameters:
      - description: The flow namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The flow id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The webhook trigger uid
        explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Execution'
          description: webhookTriggerGet_1 200 response
      summary: Trigger a new execution by GET webhook trigger
      tags:
      - Executions
      x-accepts:
      - application/json
    post:
      operationId: webhookTriggerPost_1
      parameters:
      - description: The flow namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The flow id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The webhook trigger uid
        explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Execution'
          description: webhookTriggerPost_1 200 response
      summary: Trigger a new execution by POST webhook trigger
      tags:
      - Executions
      x-accepts:
      - application/json
    put:
      operationId: webhookTriggerPut_1
      parameters:
      - description: The flow namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The flow id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The webhook trigger uid
        explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Execution'
          description: webhookTriggerPut_1 200 response
      summary: Trigger a new execution by PUT webhook trigger
      tags:
      - Executions
      x-accepts:
      - application/json
  /api/v1/{tenant}/executions/{executionId}:
    delete:
      operationId: delete_32
      parameters:
      - description: The execution id
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      - description: Whether to delete execution logs
        explode: true
        in: query
        name: deleteLogs
        required: true
        schema:
          default: true
          type: boolean
        style: form
      - description: Whether to delete execution metrics
        explode: true
        in: query
        name: deleteMetrics
        required: true
        schema:
          default: true
          type: boolean
        style: form
      - description: Whether to delete execution files in the internal storage
        explode: true
        in: query
        name: deleteStorage
        required: true
        schema:
          default: true
          type: boolean
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: On success
        "200":
          description: delete_32 200 response
      summary: Delete an execution
      tags:
      - Executions
      x-accepts:
      - application/json
    get:
      operationId: get_10
      parameters:
      - description: The execution id
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Execution'
          description: get_10 200 response
      summary: Get an execution
      tags:
      - Executions
      x-accepts:
      - application/json
  /api/v1/{tenant}/executions/{executionId}/change-status:
    post:
      operationId: changeStatus_1
      parameters:
      - description: The execution id
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      - description: The new status of the execution
        explode: true
        in: query
        name: status
        required: true
        schema:
          $ref: '#/components/schemas/State.Type'
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Execution'
          description: changeStatus_1 200 response
      summary: Change the status of an execution
      tags:
      - Executions
      x-accepts:
      - application/json
  /api/v1/{tenant}/executions/{executionId}/eval/{taskRunId}:
    post:
      operationId: eval_1
      parameters:
      - description: The execution id
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      - description: The taskrun id
        explode: false
        in: path
        name: taskRunId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          text/plain:
            schema:
              type: string
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecutionController.EvalResult'
          description: eval_1 200 response
      summary: Evaluate a variable expression for this taskrun
      tags:
      - Executions
      x-content-type: text/plain
      x-accepts:
      - application/json
  /api/v1/{tenant}/executions/{executionId}/file:
    get:
      operationId: file_2
      parameters:
      - description: The execution id
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      - description: The internal storage uri
        explode: true
        in: query
        name: path
        required: true
        schema:
          format: uri
          type: string
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: file_2 200 response
      summary: Download file for an execution
      tags:
      - Executions
      x-accepts:
      - application/octet-stream
  /api/v1/{tenant}/executions/{executionId}/file/metas:
    get:
      operationId: filesize_1
      parameters:
      - description: The execution id
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      - description: The internal storage uri
        explode: true
        in: query
        name: path
        required: true
        schema:
          format: uri
          type: string
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileMetas'
          description: filesize_1 200 response
      summary: Get file meta information for an execution
      tags:
      - Executions
      x-accepts:
      - application/json
  /api/v1/{tenant}/executions/{executionId}/file/preview:
    get:
      operationId: filePreview_1
      parameters:
      - description: The execution id
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      - description: The internal storage uri
        explode: true
        in: query
        name: path
        required: true
        schema:
          format: uri
          type: string
        style: form
      - description: The max row returns
        explode: true
        in: query
        name: maxRows
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - description: The file encoding as Java charset name. Defaults to UTF-8
        example: ISO-8859-1
        explode: true
        in: query
        name: encoding
        required: true
        schema:
          default: UTF-8
          type: string
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: filePreview_1 200 response
      summary: Get file preview for an execution
      tags:
      - Executions
      x-accepts:
      - application/json
  /api/v1/{tenant}/executions/{executionId}/flow:
    get:
      operationId: getFlowForExecutionById_1
      parameters:
      - description: The execution that you want flow information's
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlowForExecution'
          description: getFlowForExecutionById_1 200 response
      summary: Get flow information's for an execution
      tags:
      - Executions
      x-accepts:
      - application/json
  /api/v1/{tenant}/executions/{executionId}/follow:
    get:
      operationId: follow_2
      parameters:
      - description: The execution id
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/event-stream:
              schema:
                $ref: '#/components/schemas/Event_Execution_'
          description: follow_2 200 response
      summary: Follow an execution
      tags:
      - Executions
      x-accepts:
      - text/event-stream
  /api/v1/{tenant}/executions/{executionId}/force-run:
    post:
      operationId: forceRun_1
      parameters:
      - description: The execution id
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Execution'
          description: forceRun_1 200 response
      summary: Force run an execution
      tags:
      - Executions
      x-accepts:
      - application/json
  /api/v1/{tenant}/executions/{executionId}/graph:
    get:
      operationId: flowGraph_2
      parameters:
      - description: The execution id
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      - description: The subflow tasks to display
        explode: true
        in: query
        name: subflows
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlowGraph'
          description: flowGraph_2 200 response
      summary: Generate a graph for an execution
      tags:
      - Executions
      x-accepts:
      - application/json
  /api/v1/{tenant}/executions/{executionId}/kill:
    delete:
      operationId: kill_1
      parameters:
      - description: The execution id
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      - description: Specifies whether killing the execution also kill all subflow
          executions.
        explode: true
        in: query
        name: isOnKillCascade
        required: true
        schema:
          default: true
          type: boolean
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "202":
          description: Execution kill_1 was requested successfully
        "409":
          description: if the executions is already finished
        "404":
          description: if the executions is not found
        "200":
          content:
            text/json:
              schema:
                type: object
          description: kill_1 200 response
      summary: Kill an execution
      tags:
      - Executions
      x-accepts:
      - text/json
  /api/v1/{tenant}/executions/{executionId}/labels:
    post:
      operationId: setLabels_1
      parameters:
      - description: The execution id
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Label'
              type: array
        required: true
      responses:
        "404":
          description: If the execution cannot be found
        "400":
          description: If the execution is not terminated
        "200":
          content:
            application/json:
              schema:
                type: object
          description: setLabels_1 200 response
      summary: Add or update labels of a terminated execution
      tags:
      - Executions
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/executions/{executionId}/pause:
    post:
      operationId: pause_1
      parameters:
      - description: The execution id
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: On success
        "409":
          description: if the executions is not running
        "200":
          description: pause_1 200 response
      summary: Pause a running execution.
      tags:
      - Executions
      x-accepts:
      - application/json
  /api/v1/{tenant}/executions/{executionId}/replay:
    post:
      operationId: replay_1
      parameters:
      - description: the original execution id to clone
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      - description: The taskrun id
        explode: true
        in: query
        name: taskRunId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The flow revision to use for new execution
        explode: true
        in: query
        name: revision
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Execution'
          description: replay_1 200 response
      summary: Create a new execution from an old one and start it from a specified
        task run id
      tags:
      - Executions
      x-accepts:
      - application/json
  /api/v1/{tenant}/executions/{executionId}/restart:
    post:
      operationId: restart_2
      parameters:
      - description: The execution id
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      - description: The flow revision to use for new execution
        explode: true
        in: query
        name: revision
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Execution'
          description: restart_2 200 response
      summary: Restart a new execution from an old one
      tags:
      - Executions
      x-accepts:
      - application/json
  /api/v1/{tenant}/executions/{executionId}/resume:
    post:
      operationId: resume_1
      parameters:
      - description: The execution id
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              items:
                format: binary
                type: string
              type: array
        required: true
      responses:
        "204":
          description: On success
        "409":
          description: if the executions is not paused
        "200":
          content:
            application/json:
              schema:
                type: object
          description: resume_1 200 response
      summary: Resume a paused execution.
      tags:
      - Executions
      x-content-type: multipart/form-data
      x-accepts:
      - application/json
  /api/v1/{tenant}/executions/{executionId}/resume/validate:
    post:
      operationId: validateInputsOnResume_1
      parameters:
      - description: The execution id
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              items:
                format: binary
                type: string
              type: array
        required: true
      responses:
        "204":
          description: On success
        "409":
          description: if the executions is not paused
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ExecutionController.ApiValidateExecutionInputsResponse'
                type: array
          description: validateInputsOnResume_1 200 response
      summary: Validate inputs to resume a paused execution.
      tags:
      - Executions
      x-content-type: multipart/form-data
      x-accepts:
      - application/json
  /api/v1/{tenant}/executions/{executionId}/state:
    post:
      operationId: changeState_1
      parameters:
      - description: The execution id
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExecutionController.StateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Execution'
          description: changeState_1 200 response
      summary: Change state for a taskrun in an execution
      tags:
      - Executions
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/executions/{executionId}/unqueue:
    post:
      operationId: unqueue_1
      parameters:
      - description: The execution id
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Execution'
          description: unqueue_1 200 response
      summary: Unqueue an execution
      tags:
      - Executions
      x-accepts:
      - application/json
  /api/v1/{tenant}/executions/{namespace}/{id}:
    post:
      operationId: create_29
      parameters:
      - description: The flow namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The flow id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The labels as a list of 'key:value'
        explode: true
        in: query
        name: labels
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: If the server will wait the end of the execution
        explode: true
        in: query
        name: wait
        required: true
        schema:
          default: false
          type: boolean
        style: form
      - description: The flow revision or latest if null
        explode: true
        in: query
        name: revision
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
      - description: Schedule the flow on a specific date
        explode: true
        in: query
        name: scheduleDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              items:
                format: binary
                type: string
              nullable: true
              type: array
      responses:
        "409":
          description: if the flow is disabled
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ExecutionController.ExecutionResponse'
                type: array
          description: create_29 200 response
      summary: Create a new execution for a flow
      tags:
      - Executions
      x-content-type: multipart/form-data
      x-accepts:
      - application/json
  /api/v1/{tenant}/executions/{namespace}/{id}/validate:
    post:
      operationId: validateInputsOnCreate_1
      parameters:
      - description: The flow namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The flow id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The labels as a list of 'key:value'
        explode: true
        in: query
        name: labels
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: The flow revision or latest if null
        explode: true
        in: query
        name: revision
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              items:
                format: binary
                type: string
              type: array
        required: true
      responses:
        "409":
          description: if the flow is disabled
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ExecutionController.ApiValidateExecutionInputsResponse'
                type: array
          description: validateInputsOnCreate_1 200 response
      summary: Validate the creation of a new execution for a flow
      tags:
      - Executions
      x-content-type: multipart/form-data
      x-accepts:
      - application/json
  /api/v1/{tenant}/flows:
    post:
      deprecated: true
      operationId: create_30
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Flow'
          application/x-yaml:
            schema:
              type: string
            example: null
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/create_5_200_response'
              example: null
          description: create_30 200 response
      summary: Create a flow from json object
      tags:
      - Flows
      x-content-type: '*/*'
      x-accepts:
      - application/json
  /api/v1/{tenant}/flows/bulk:
    post:
      description: |-
        All flow will be created / updated for this namespace.
        Flow that already created but not in `flows` will be deleted if the query delete is `true`
      operationId: bulkUpdate_1
      parameters:
      - description: If missing flow should be deleted
        explode: true
        in: query
        name: delete
        required: true
        schema:
          default: true
          type: boolean
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/x-yaml:
            schema:
              type: string
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FlowWithSource'
                type: array
          description: bulkUpdate_1 200 response
      summary: Update from multiples yaml sources
      tags:
      - Flows
      x-content-type: application/x-yaml
      x-accepts:
      - application/json
  /api/v1/{tenant}/flows/delete/by-ids:
    delete:
      operationId: deleteByIds_4
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/IdWithNamespace'
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkResponse'
          description: deleteByIds_4 200 response
      summary: Delete flows by their IDs.
      tags:
      - Flows
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/flows/delete/by-query:
    delete:
      operationId: deleteByQuery_4
      parameters:
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The scope of the flows to include
        explode: true
        in: query
        name: scope
        required: false
        schema:
          items:
            $ref: '#/components/schemas/FlowScope'
          nullable: true
          type: array
        style: form
      - description: A namespace filter prefix
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A labels filter as a list of 'key:value'
        explode: true
        in: query
        name: labels
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkResponse'
          description: deleteByQuery_4 200 response
      summary: Delete flows returned by the query parameters.
      tags:
      - Flows
      x-accepts:
      - application/json
  /api/v1/{tenant}/flows/disable/by-ids:
    post:
      operationId: disableByIds_1
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/IdWithNamespace'
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkResponse'
          description: disableByIds_1 200 response
      summary: Disable flows by their IDs.
      tags:
      - Flows
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/flows/disable/by-query:
    post:
      operationId: disableByQuery_1
      parameters:
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The scope of the flows to include
        explode: true
        in: query
        name: scope
        required: false
        schema:
          items:
            $ref: '#/components/schemas/FlowScope'
          nullable: true
          type: array
        style: form
      - description: A namespace filter prefix
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A labels filter as a list of 'key:value'
        explode: true
        in: query
        name: labels
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkResponse'
          description: disableByQuery_1 200 response
      summary: Disable flows returned by the query parameters.
      tags:
      - Flows
      x-accepts:
      - application/json
  /api/v1/{tenant}/flows/distinct-namespaces:
    get:
      operationId: listDistinctNamespace_4
      parameters:
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: listDistinctNamespace_4 200 response
      summary: List all distinct namespaces
      tags:
      - Flows
      x-accepts:
      - application/json
  /api/v1/{tenant}/flows/enable/by-ids:
    post:
      operationId: enableByIds_1
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/IdWithNamespace'
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkResponse'
          description: enableByIds_1 200 response
      summary: Enable flows by their IDs.
      tags:
      - Flows
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/flows/enable/by-query:
    post:
      operationId: enableByQuery_1
      parameters:
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The scope of the flows to include
        explode: true
        in: query
        name: scope
        required: false
        schema:
          items:
            $ref: '#/components/schemas/FlowScope'
          nullable: true
          type: array
        style: form
      - description: A namespace filter prefix
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A labels filter as a list of 'key:value'
        explode: true
        in: query
        name: labels
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkResponse'
          description: enableByQuery_1 200 response
      summary: Enable flows returned by the query parameters.
      tags:
      - Flows
      x-accepts:
      - application/json
  /api/v1/{tenant}/flows/export/by-ids:
    post:
      operationId: exportByIds_2
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/IdWithNamespace'
              type: array
        required: true
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                items:
                  format: byte
                  type: string
                type: array
          description: exportByIds_2 200 response
      summary: Export flows as a ZIP archive of yaml sources.
      tags:
      - Flows
      x-content-type: application/json
      x-accepts:
      - application/octet-stream
  /api/v1/{tenant}/flows/export/by-query:
    get:
      operationId: exportByQuery_2
      parameters:
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The scope of the flows to include
        explode: true
        in: query
        name: scope
        required: false
        schema:
          items:
            $ref: '#/components/schemas/FlowScope'
          nullable: true
          type: array
        style: form
      - description: A namespace filter prefix
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A labels filter as a list of 'key:value'
        explode: true
        in: query
        name: labels
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                items:
                  format: byte
                  type: string
                type: array
          description: exportByQuery_2 200 response
      summary: Export flows as a ZIP archive of yaml sources.
      tags:
      - Flows
      x-accepts:
      - application/octet-stream
  /api/v1/{tenant}/flows/graph:
    post:
      operationId: flowGraphSource_1
      parameters:
      - description: The subflow tasks to display
        explode: true
        in: query
        name: subflows
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/x-yaml:
            schema:
              type: string
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlowGraph'
          description: flowGraphSource_1 200 response
      summary: Generate a graph for a flow source
      tags:
      - Flows
      x-content-type: application/x-yaml
      x-accepts:
      - application/json
  /api/v1/{tenant}/flows/import:
    post:
      operationId: importFlows_1
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            encoding:
              fileUpload:
                contentType: application/octet-stream
                style: form
            schema:
              $ref: '#/components/schemas/importFlows_request'
        required: true
      responses:
        "204":
          description: On success
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: importFlows_1 200 response
      summary: |2
            Import flows as a ZIP archive of yaml sources or a multi-objects YAML file.
            When sending a Yaml that contains one or more flows, a list of index is returned.
            When sending a ZIP archive, a list of files that couldn't be imported is returned.
      tags:
      - Flows
      x-content-type: multipart/form-data
      x-accepts:
      - application/json
  /api/v1/{tenant}/flows/search:
    get:
      operationId: find_31
      parameters:
      - description: The current page
        explode: true
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: The current page size
        explode: true
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: The sort of current page
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The scope of the flows to include
        explode: true
        in: query
        name: scope
        required: false
        schema:
          items:
            $ref: '#/components/schemas/FlowScope'
          nullable: true
          type: array
        style: form
      - description: A namespace filter prefix
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A labels filter as a list of 'key:value'
        explode: true
        in: query
        name: labels
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResults_Flow_'
          description: find_31 200 response
      summary: Search for flows
      tags:
      - Flows
      x-accepts:
      - application/json
  /api/v1/{tenant}/flows/source:
    get:
      operationId: source_1
      parameters:
      - description: The current page
        explode: true
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: The current page size
        explode: true
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: The sort of current page
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A namespace filter prefix
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResults_SearchResult_Flow__'
          description: source_1 200 response
      summary: Search for flows source code
      tags:
      - Flows
      x-accepts:
      - application/json
  /api/v1/{tenant}/flows/validate:
    post:
      operationId: validateFlows_1
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/x-yaml:
            schema:
              type: string
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ValidateConstraintViolation'
                type: array
          description: validateFlows_1 200 response
      summary: Validate a list of flows
      tags:
      - Flows
      x-content-type: application/x-yaml
      x-accepts:
      - application/json
  /api/v1/{tenant}/flows/validate/task:
    post:
      operationId: validateTask_1
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      - description: Type of task
        explode: true
        in: query
        name: section
        required: true
        schema:
          $ref: '#/components/schemas/FlowController.TaskValidationType'
        style: form
      requestBody:
        content:
          application/x-yaml:
            schema:
              type: string
          application/json:
            schema:
              type: string
            example: null
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateConstraintViolation'
          description: validateTask_1 200 response
      summary: Validate a list of flows
      tags:
      - Flows
      x-content-type: application/x-yaml
      x-accepts:
      - application/json
  /api/v1/{tenant}/flows/validate/trigger:
    post:
      operationId: validateTrigger_1
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateConstraintViolation'
          description: validateTrigger_1 200 response
      summary: Validate trigger
      tags:
      - Flows
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/flows/{namespace}:
    get:
      operationId: getFlowsByNamespace_3
      parameters:
      - description: Namespace to filter flows
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Flow'
                type: array
          description: getFlowsByNamespace_3 200 response
      summary: Retrieve all flows from a given namespace
      tags:
      - Flows
      x-accepts:
      - application/json
    post:
      deprecated: true
      description: |-
        All flow will be created / updated for this namespace.
        Flow that already created but not in `flows` will be deleted if the query delete is `true`
      operationId: updateNamespace_2
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      - description: The flow namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: If missing flow should be deleted
        explode: true
        in: query
        name: delete
        required: true
        schema:
          default: true
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Flow'
              type: array
            example: null
          application/x-yaml:
            schema:
              type: string
            example: null
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/updateNamespace_200_response'
              example: null
          description: updateNamespace_2 200 response
      summary: Update a complete namespace from json object
      tags:
      - Flows
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/flows/{namespace}/{id}:
    delete:
      operationId: delete_33
      parameters:
      - description: The flow namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The flow id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: On success
        "200":
          description: delete_33 200 response
      summary: Delete a flow
      tags:
      - Flows
      x-accepts:
      - application/json
    get:
      operationId: index_24
      parameters:
      - description: The flow namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The flow id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Include the source code
        explode: true
        in: query
        name: source
        required: true
        schema:
          default: false
          type: boolean
        style: form
      - description: Get latest revision by default
        explode: true
        in: query
        name: revision
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
      - description: Get flow even if deleted
        explode: true
        in: query
        name: allowDeleted
        required: true
        schema:
          default: false
          type: boolean
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: index_24 200 response
      summary: Get a flow
      tags:
      - Flows
      x-accepts:
      - application/json
    put:
      deprecated: true
      operationId: update_21
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      - description: The flow namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The flow id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/x-yaml:
            schema:
              type: string
            example: null
          '*/*':
            schema:
              $ref: '#/components/schemas/Flow'
            example: null
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/update_3_200_response'
              example: null
          description: update_21 200 response
      summary: Update a flow
      tags:
      - Flows
      x-content-type: application/x-yaml
      x-accepts:
      - application/json
  /api/v1/{tenant}/flows/{namespace}/{id}/dependencies:
    get:
      operationId: dependencies_2
      parameters:
      - description: The flow namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The flow id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: "if true, list only destination dependencies, otherwise list\
          \ also source dependencies"
        explode: true
        in: query
        name: destinationOnly
        required: true
        schema:
          default: false
          type: boolean
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlowTopologyGraph'
          description: dependencies_2 200 response
      summary: Get flow dependencies
      tags:
      - Flows
      x-accepts:
      - application/json
  /api/v1/{tenant}/flows/{namespace}/{id}/graph:
    get:
      operationId: flowGraph_3
      parameters:
      - description: The flow namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The flow id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The flow revision
        explode: true
        in: query
        name: revision
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
      - description: The subflow tasks to display
        explode: true
        in: query
        name: subflows
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlowGraph'
          description: flowGraph_3 200 response
      summary: Generate a graph for a flow
      tags:
      - Flows
      x-accepts:
      - application/json
  /api/v1/{tenant}/flows/{namespace}/{id}/revisions:
    get:
      operationId: revisions_1
      parameters:
      - description: The flow namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The flow id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FlowWithSource'
                type: array
          description: revisions_1 200 response
      summary: Get revisions for a flow
      tags:
      - Flows
      x-accepts:
      - application/json
  /api/v1/{tenant}/flows/{namespace}/{id}/tasks/{taskId}:
    get:
      operationId: flowTask_1
      parameters:
      - description: The flow namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The flow id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The task id
        explode: false
        in: path
        name: taskId
        required: true
        schema:
          type: string
        style: simple
      - description: The flow revision
        explode: true
        in: query
        name: revision
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: flowTask_1 200 response
      summary: Get a flow task
      tags:
      - Flows
      x-accepts:
      - application/json
  /api/v1/{tenant}/flows/{namespace}/{id}/{taskId}:
    patch:
      deprecated: true
      operationId: updateTask_1
      parameters:
      - description: The flow namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The flow id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The task id
        explode: false
        in: path
        name: taskId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Flow'
          description: updateTask_1 200 response
      summary: Update a single task on a flow
      tags:
      - Flows
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/groups:
    post:
      operationId: create_31
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AbstractGroupController.GroupWithMembers'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: create_31 200 response
      summary: Create a group
      tags:
      - Groups
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/groups/autocomplete:
    post:
      operationId: autocomplete_12
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiAutocomplete'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Group'
                type: array
          description: autocomplete_12 200 response
      summary: List groups for autocomplete
      tags:
      - Groups
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/groups/ids:
    post:
      operationId: ids_6
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiIds'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Group'
                type: array
          description: ids_6 200 response
      summary: List groups by ids
      tags:
      - Groups
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/groups/search:
    get:
      operationId: find_32
      parameters:
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The current page
        explode: true
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: The current page size
        explode: true
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      - description: The sort of current page
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResults_Group_'
          description: find_32 200 response
      summary: Search for groups
      tags:
      - Groups
      x-accepts:
      - application/json
  /api/v1/{tenant}/groups/{id}:
    delete:
      operationId: delete_34
      parameters:
      - description: The group id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: On success
      summary: Delete a group
      tags:
      - Groups
      x-accepts:
      - application/json
    get:
      operationId: index_25
      parameters:
      - description: The group id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: index_25 200 response
      summary: Get a group
      tags:
      - Groups
      x-accepts:
      - application/json
    put:
      operationId: update_22
      parameters:
      - description: The group id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: update_22 200 response
      summary: Update a group
      tags:
      - Groups
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/groups/{id}/members:
    get:
      operationId: members_3
      parameters:
      - description: The group id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The current page
        explode: true
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: The current page size
        explode: true
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      - description: The sort of current page
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResults_ApiUser_'
          description: members_3 200 response
      summary: Search for users in a group
      tags:
      - Groups
      x-accepts:
      - application/json
  /api/v1/{tenant}/groups/{id}/members/{userId}:
    delete:
      operationId: deleteGroup_3
      parameters:
      - description: The group id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The user id
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUser'
          description: deleteGroup_3 200 response
      summary: Delete a group for a user
      tags:
      - Groups
      x-accepts:
      - application/json
    put:
      operationId: addGroup_3
      parameters:
      - description: The group id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The user id
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUser'
          description: addGroup_3 200 response
      summary: Add a group for a user
      tags:
      - Groups
      x-accepts:
      - application/json
  /api/v1/{tenant}/integrations/{integration}/scim/v2/Groups:
    get:
      description: Find by a combination of query parameters
      operationId: query_2
      parameters:
      - explode: true
        in: query
        name: attributes
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: true
        in: query
        name: excludedAttributes
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: true
        in: query
        name: filter
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: true
        in: query
        name: sortBy
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/SortOrder'
          nullable: true
        style: form
      - explode: true
        in: query
        name: startIndex
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
      - explode: false
        in: path
        name: integration
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "400":
          description: Bad Request
        "404":
          description: Not found
        "500":
          description: Internal Server Error
        "501":
          description: Not Implemented
        "200":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimResource'
          description: OK response
      summary: "{@inheritDoc}"
      tags:
      - SCIM
      x-accepts:
      - application/scim+json
    post:
      description: Create
      operationId: create_32
      parameters:
      - explode: true
        in: query
        name: attributes
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: true
        in: query
        name: excludedAttributes
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: false
        in: path
        name: integration
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/scim+json:
            schema:
              $ref: '#/components/schemas/ScimUser'
          application/json:
            schema:
              $ref: '#/components/schemas/ScimGroup'
        required: true
      responses:
        "201":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimResource'
          description: Created
        "400":
          description: Bad Request
        "409":
          description: Conflict
        "500":
          description: Internal Server Error
        "501":
          description: Not Implemented
        "200":
          content:
            application/scim+json:
              schema:
                type: object
            application/json:
              schema:
                type: object
          description: create_32 200 response
      summary: "{@inheritDoc}"
      tags:
      - SCIM
      x-content-type: application/scim+json
      x-accepts:
      - application/json
      - application/scim+json
  /api/v1/{tenant}/integrations/{integration}/scim/v2/Groups/.search:
    post:
      description: Search
      operationId: find_33
      parameters:
      - explode: false
        in: path
        name: integration
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/scim+json:
            schema:
              $ref: '#/components/schemas/SearchRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/SearchRequest'
        required: true
      responses:
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
        "501":
          description: Not Implemented
        "200":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimResource'
          description: OK response
      summary: "{@inheritDoc}"
      tags:
      - SCIM
      x-content-type: application/scim+json
      x-accepts:
      - application/scim+json
  /api/v1/{tenant}/integrations/{integration}/scim/v2/Groups/{id}:
    delete:
      description: Delete from the backing store
      operationId: delete_35
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: integration
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "404":
          description: Not found
        "500":
          description: Internal Server Error
        "501":
          description: Not Implemented
        "200":
          content:
            application/scim+json:
              schema:
                type: object
            application/json:
              schema:
                type: object
          description: delete_35 200 response
      summary: "{@inheritDoc}"
      tags:
      - SCIM
      x-accepts:
      - application/json
      - application/scim+json
    get:
      description: Find by id
      operationId: getById_2
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: attributes
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: true
        in: query
        name: excludedAttributes
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: false
        in: path
        name: integration
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "400":
          description: Bad Request
        "404":
          description: Not found
        "500":
          description: Internal Server Error
        "501":
          description: Not Implemented
        "200":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimResource'
          description: OK response
      summary: "{@inheritDoc}"
      tags:
      - SCIM
      x-accepts:
      - application/scim+json
    patch:
      description: Patch a portion of the backing store
      operationId: patch_3
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: attributes
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: true
        in: query
        name: excludedAttributes
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: false
        in: path
        name: integration
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/scim+json:
            schema:
              $ref: '#/components/schemas/PatchRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchRequest'
        required: true
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "404":
          description: Not found
        "500":
          description: Internal Server Error
        "501":
          description: Not Implemented
        "200":
          content:
            application/scim+json:
              schema:
                type: object
            application/json:
              schema:
                type: object
          description: patch_3 200 response
      summary: "{@inheritDoc}"
      tags:
      - SCIM
      x-content-type: application/scim+json
      x-accepts:
      - application/json
      - application/scim+json
    put:
      description: Update
      operationId: update_23
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: attributes
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: true
        in: query
        name: excludedAttributes
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: false
        in: path
        name: integration
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/scim+json:
            schema:
              $ref: '#/components/schemas/ScimResource'
          application/json:
            schema:
              $ref: '#/components/schemas/ScimGroup'
        required: true
      responses:
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
        "501":
          description: Not Implemented
        "200":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimResource'
          description: OK response
      summary: "{@inheritDoc}"
      tags:
      - SCIM
      x-content-type: application/scim+json
      x-accepts:
      - application/scim+json
  /api/v1/{tenant}/integrations/{integration}/scim/v2/ResourceTypes:
    get:
      description: Get All Resource Types
      operationId: getAllResourceTypes_1
      parameters:
      - explode: false
        in: path
        name: integration
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/scim+json:
              schema:
                items:
                  $ref: '#/components/schemas/ResourceType'
                type: array
          description: OK response
      tags:
      - SCIM-Configuration
      x-accepts:
      - application/scim+json
  /api/v1/{tenant}/integrations/{integration}/scim/v2/ResourceTypes/{name}:
    get:
      description: Get Resource Type by URN
      operationId: getResourceType_1
      parameters:
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: integration
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ResourceType'
          description: OK response
      tags:
      - SCIM-Configuration
      x-accepts:
      - application/scim+json
  /api/v1/{tenant}/integrations/{integration}/scim/v2/Schemas:
    get:
      description: Get All Schemas
      operationId: getAllSchemas_1
      parameters:
      - explode: false
        in: path
        name: integration
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/scim+json:
              schema:
                items:
                  $ref: '#/components/schemas/Schema'
                type: array
          description: OK response
      tags:
      - SCIM-Configuration
      x-accepts:
      - application/scim+json
  /api/v1/{tenant}/integrations/{integration}/scim/v2/Schemas/{uri}:
    get:
      description: Get Schemas by URN
      operationId: getSchema_1
      parameters:
      - explode: false
        in: path
        name: uri
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: integration
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/Schema'
          description: OK response
      tags:
      - SCIM-Configuration
      x-accepts:
      - application/scim+json
  /api/v1/{tenant}/integrations/{integration}/scim/v2/ServiceProviderConfig:
    get:
      description: Get Service Provider Configuration
      operationId: getServiceProviderConfiguration_1
      parameters:
      - explode: false
        in: path
        name: integration
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ServiceProviderConfiguration'
          description: OK response
      tags:
      - SCIM-Configuration
      x-accepts:
      - application/scim+json
  /api/v1/{tenant}/integrations/{integration}/scim/v2/Users:
    get:
      description: Find by a combination of query parameters
      operationId: query_3
      parameters:
      - explode: true
        in: query
        name: attributes
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: true
        in: query
        name: excludedAttributes
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: true
        in: query
        name: filter
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: true
        in: query
        name: sortBy
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/SortOrder'
          nullable: true
        style: form
      - explode: true
        in: query
        name: startIndex
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
      - explode: false
        in: path
        name: integration
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "400":
          description: Bad Request
        "404":
          description: Not found
        "500":
          description: Internal Server Error
        "501":
          description: Not Implemented
        "200":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimResource'
          description: OK response
      summary: "{@inheritDoc}"
      tags:
      - SCIM
      x-accepts:
      - application/scim+json
    post:
      description: Create
      operationId: create_33
      parameters:
      - explode: true
        in: query
        name: attributes
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: true
        in: query
        name: excludedAttributes
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: false
        in: path
        name: integration
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/scim+json:
            schema:
              $ref: '#/components/schemas/ScimUser'
          application/json:
            schema:
              $ref: '#/components/schemas/ScimUser'
        required: true
      responses:
        "201":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimResource'
          description: Created
        "400":
          description: Bad Request
        "409":
          description: Conflict
        "500":
          description: Internal Server Error
        "501":
          description: Not Implemented
        "200":
          content:
            application/scim+json:
              schema:
                type: object
            application/json:
              schema:
                type: object
          description: create_33 200 response
      summary: "{@inheritDoc}"
      tags:
      - SCIM
      x-content-type: application/scim+json
      x-accepts:
      - application/json
      - application/scim+json
  /api/v1/{tenant}/integrations/{integration}/scim/v2/Users/.search:
    post:
      description: Search
      operationId: find_34
      parameters:
      - explode: false
        in: path
        name: integration
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/scim+json:
            schema:
              $ref: '#/components/schemas/SearchRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/SearchRequest'
        required: true
      responses:
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
        "501":
          description: Not Implemented
        "200":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimResource'
          description: OK response
      summary: "{@inheritDoc}"
      tags:
      - SCIM
      x-content-type: application/scim+json
      x-accepts:
      - application/scim+json
  /api/v1/{tenant}/integrations/{integration}/scim/v2/Users/{id}:
    delete:
      description: Delete from the backing store
      operationId: delete_36
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: integration
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "404":
          description: Not found
        "500":
          description: Internal Server Error
        "501":
          description: Not Implemented
        "200":
          content:
            application/scim+json:
              schema:
                type: object
            application/json:
              schema:
                type: object
          description: delete_36 200 response
      summary: "{@inheritDoc}"
      tags:
      - SCIM
      x-accepts:
      - application/json
      - application/scim+json
    get:
      description: Find by id
      operationId: getById_3
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: attributes
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: true
        in: query
        name: excludedAttributes
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: false
        in: path
        name: integration
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "400":
          description: Bad Request
        "404":
          description: Not found
        "500":
          description: Internal Server Error
        "501":
          description: Not Implemented
        "200":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimResource'
          description: OK response
      summary: "{@inheritDoc}"
      tags:
      - SCIM
      x-accepts:
      - application/scim+json
    patch:
      description: Patch a portion of the backing store
      operationId: patch_4
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: attributes
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: true
        in: query
        name: excludedAttributes
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: false
        in: path
        name: integration
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/scim+json:
            schema:
              $ref: '#/components/schemas/PatchRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchRequest'
        required: true
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "404":
          description: Not found
        "500":
          description: Internal Server Error
        "501":
          description: Not Implemented
        "200":
          content:
            application/scim+json:
              schema:
                type: object
            application/json:
              schema:
                type: object
          description: patch_4 200 response
      summary: "{@inheritDoc}"
      tags:
      - SCIM
      x-content-type: application/scim+json
      x-accepts:
      - application/json
      - application/scim+json
    put:
      description: Update
      operationId: update_24
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: attributes
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: true
        in: query
        name: excludedAttributes
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: false
        in: path
        name: integration
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/scim+json:
            schema:
              $ref: '#/components/schemas/ScimResource'
          application/json:
            schema:
              $ref: '#/components/schemas/ScimUser'
        required: true
      responses:
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
        "501":
          description: Not Implemented
        "200":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimResource'
          description: OK response
      summary: "{@inheritDoc}"
      tags:
      - SCIM
      x-content-type: application/scim+json
      x-accepts:
      - application/scim+json
  /api/v1/{tenant}/invitations:
    post:
      operationId: create_34
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Invitation'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invitation'
          description: create_34 200 response
      summary: Create an invitation
      tags:
      - Invitations
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/invitations/email/{email}:
    get:
      operationId: findByEmail_3
      parameters:
      - description: The email address of the invited
        explode: false
        in: path
        name: email
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Invitation'
                type: array
          description: findByEmail_3 200 response
      summary: Get all invitations for a given email
      tags:
      - Invitations
      x-accepts:
      - application/json
  /api/v1/{tenant}/invitations/search:
    get:
      operationId: find_35
      parameters:
      - description: The email address of the invited
        explode: true
        in: query
        name: email
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The current status of the invitations
        explode: true
        in: query
        name: status
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/Invitation.InvitationStatus'
          nullable: true
        style: form
      - description: The current page
        explode: true
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: The current page size
        explode: true
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      - description: The sort of current page
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResults_Invitation_'
          description: find_35 200 response
      summary: Search for invitations
      tags:
      - Invitations
      x-accepts:
      - application/json
  /api/v1/{tenant}/invitations/{id}:
    delete:
      operationId: delete_37
      parameters:
      - description: The id of the invitation
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: delete_37 200 response
      summary: Delete an invitation
      tags:
      - Invitations
      x-accepts:
      - application/json
    get:
      operationId: get_11
      parameters:
      - description: The id of the invitation
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invitation'
          description: get_11 200 response
      summary: Delete an invitation
      tags:
      - Invitations
      x-accepts:
      - application/json
  /api/v1/{tenant}/logs/search:
    get:
      operationId: find_36
      parameters:
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The current page
        explode: true
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: The current page size
        explode: true
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: The sort of current page
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: A namespace filter prefix
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A flow id filter
        explode: true
        in: query
        name: flowId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A trigger id filter
        explode: true
        in: query
        name: triggerId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The min log level filter
        explode: true
        in: query
        name: minLevel
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/Level'
          nullable: true
        style: form
      - description: The start datetime
        explode: true
        in: query
        name: startDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: The end datetime
        explode: true
        in: query
        name: endDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResults_LogEntry_'
          description: find_36 200 response
      summary: Search for logs
      tags:
      - Logs
      x-accepts:
      - application/json
  /api/v1/{tenant}/logs/{executionId}:
    delete:
      operationId: delete_38
      parameters:
      - description: The execution id
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      - description: The min log level filter
        explode: true
        in: query
        name: minLevel
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/Level'
          nullable: true
        style: form
      - description: The taskrun id
        explode: true
        in: query
        name: taskRunId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The task id
        explode: true
        in: query
        name: taskId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The attempt number
        explode: true
        in: query
        name: attempt
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: delete_38 200 response
      summary: "Delete logs for a specific execution, taskrun or task"
      tags:
      - Logs
      x-accepts:
      - application/json
    get:
      operationId: findByExecution_2
      parameters:
      - description: The execution id
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      - description: The min log level filter
        explode: true
        in: query
        name: minLevel
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/Level'
          nullable: true
        style: form
      - description: The taskrun id
        explode: true
        in: query
        name: taskRunId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The task id
        explode: true
        in: query
        name: taskId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The attempt number
        explode: true
        in: query
        name: attempt
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/LogEntry'
                type: array
          description: findByExecution_2 200 response
      summary: "Get logs for a specific execution, taskrun or task"
      tags:
      - Logs
      x-accepts:
      - application/json
  /api/v1/{tenant}/logs/{executionId}/download:
    get:
      operationId: download_3
      parameters:
      - description: The execution id
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      - description: The min log level filter
        explode: true
        in: query
        name: minLevel
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/Level'
          nullable: true
        style: form
      - description: The taskrun id
        explode: true
        in: query
        name: taskRunId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The task id
        explode: true
        in: query
        name: taskId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The attempt number
        explode: true
        in: query
        name: attempt
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                format: binary
                type: string
          description: download_3 200 response
      summary: "Download logs for a specific execution, taskrun or task"
      tags:
      - Logs
      x-accepts:
      - text/plain
  /api/v1/{tenant}/logs/{executionId}/follow:
    get:
      operationId: follow_3
      parameters:
      - description: The execution id
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      - description: The min log level filter
        explode: true
        in: query
        name: minLevel
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/Level'
          nullable: true
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/event-stream:
              schema:
                $ref: '#/components/schemas/Event_LogEntry_'
          description: follow_3 200 response
      summary: Follow logs for a specific execution
      tags:
      - Logs
      x-accepts:
      - text/event-stream
  /api/v1/{tenant}/logs/{namespace}/{flowId}:
    delete:
      operationId: deleteFromFlow_1
      parameters:
      - description: The namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The flow identifier
        explode: false
        in: path
        name: flowId
        required: true
        schema:
          type: string
        style: simple
      - description: The trigger id
        explode: true
        in: query
        name: triggerId
        required: true
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: deleteFromFlow_1 200 response
      summary: "Delete logs for a specific execution, taskrun or task"
      tags:
      - Logs
      x-accepts:
      - application/json
  /api/v1/{tenant}/me:
    get:
      operationId: index_26
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeController.Me'
          description: index_26 200 response
      summary: Get current user
      tags:
      - Auths
      x-accepts:
      - application/json
    patch:
      operationId: patch_5
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeController.UserDetailsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: patch_5 200 response
      summary: Updates details for the current user. Returns user's updated information
        upon success.
      tags:
      - Auths
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/me/api-tokens:
    get:
      operationId: listApiTokens_4
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: listApiTokens_4 200 response
      summary: List all API Tokens for the authenticated user
      tags:
      - Auths
      x-accepts:
      - application/json
    post:
      operationId: createApiToken_1
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateApiTokenRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: createApiToken_1 200 response
      summary: Create new API Token for authenticated user
      tags:
      - Auths
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/me/api-tokens/{tokenId}:
    delete:
      operationId: deleteApiToken_4
      parameters:
      - description: The token id
        explode: false
        in: path
        name: tokenId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: deleteApiToken_4 200 response
      summary: Delete an API Token for authenticated user
      tags:
      - Auths
      x-accepts:
      - application/json
  /api/v1/{tenant}/me/invitations:
    get:
      operationId: findByEmailAllTenant_1
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Invitation'
                type: array
          description: findByEmailAllTenant_1 200 response
      summary: Get all invitations for a given email
      tags:
      - Invitations
      x-accepts:
      - application/json
  /api/v1/{tenant}/me/password:
    put:
      operationId: updatePassword_1
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeController.UpdatePasswordRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: updatePassword_1 200 response
      summary: Update login password for the current user.
      tags:
      - Users
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/metrics/aggregates/{namespace}/{flowId}/{metric}:
    get:
      operationId: aggregateByFlowId_1
      parameters:
      - description: The namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The flow Id
        explode: false
        in: path
        name: flowId
        required: true
        schema:
          type: string
        style: simple
      - description: The metric name
        explode: false
        in: path
        name: metric
        required: true
        schema:
          type: string
        style: simple
      - description: "The start datetime, default to now - 30 days"
        explode: true
        in: query
        name: startDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: "The end datetime, default to now"
        explode: true
        in: query
        name: endDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: "The type of aggregation: avg, sum, min or max"
        explode: true
        in: query
        name: aggregation
        required: true
        schema:
          default: sum
          type: string
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricAggregations'
          description: aggregateByFlowId_1 200 response
      summary: Get metrics aggregations for a specific flow
      tags:
      - Metrics
      x-accepts:
      - application/json
  /api/v1/{tenant}/metrics/aggregates/{namespace}/{flowId}/{taskId}/{metric}:
    get:
      operationId: aggregateByFlowIdAndTaskId_1
      parameters:
      - description: The namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The flow Id
        explode: false
        in: path
        name: flowId
        required: true
        schema:
          type: string
        style: simple
      - description: The task Id
        explode: false
        in: path
        name: taskId
        required: true
        schema:
          type: string
        style: simple
      - description: The metric name
        explode: false
        in: path
        name: metric
        required: true
        schema:
          type: string
        style: simple
      - description: "The start datetime, default to now - 30 days"
        explode: true
        in: query
        name: startDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: "The end datetime, default to now"
        explode: true
        in: query
        name: endDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: "The type of aggregation: avg, sum, min or max"
        explode: true
        in: query
        name: aggregation
        required: true
        schema:
          default: sum
          type: string
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricAggregations'
          description: aggregateByFlowIdAndTaskId_1 200 response
      summary: Get metrics aggregations for a specific flow
      tags:
      - Metrics
      x-accepts:
      - application/json
  /api/v1/{tenant}/metrics/names/{namespace}/{flowId}:
    get:
      operationId: flowMetrics_1
      parameters:
      - description: The namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The flow Id
        explode: false
        in: path
        name: flowId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: flowMetrics_1 200 response
      summary: Get metrics names for a specific flow
      tags:
      - Metrics
      x-accepts:
      - application/json
  /api/v1/{tenant}/metrics/names/{namespace}/{flowId}/{taskId}:
    get:
      operationId: taskMetrics_1
      parameters:
      - description: The namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The flow Id
        explode: false
        in: path
        name: flowId
        required: true
        schema:
          type: string
        style: simple
      - description: The flow Id
        explode: false
        in: path
        name: taskId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: taskMetrics_1 200 response
      summary: Get metrics names for a specific task in a flow
      tags:
      - Metrics
      x-accepts:
      - application/json
  /api/v1/{tenant}/metrics/tasks/{namespace}/{flowId}:
    get:
      operationId: tasks_1
      parameters:
      - description: The namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The flow Id
        explode: false
        in: path
        name: flowId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: tasks_1 200 response
      summary: "Get tasks id that have metrics for a specific flow, include deleted\
        \ or renamed tasks"
      tags:
      - Metrics
      x-accepts:
      - application/json
  /api/v1/{tenant}/metrics/{executionId}:
    get:
      operationId: findByExecution_3
      parameters:
      - description: The current page
        explode: true
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: The current page size
        explode: true
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: The sort of current page
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: The execution id
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      - description: The taskrun id
        explode: true
        in: query
        name: taskRunId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The task id
        explode: true
        in: query
        name: taskId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResults_MetricEntry_'
          description: findByExecution_3 200 response
      summary: Get metrics for a specific execution
      tags:
      - Metrics
      x-accepts:
      - application/json
  /api/v1/{tenant}/namespaces:
    post:
      operationId: create_35
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Namespace'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Namespace'
          description: create_35 200 response
      summary: Create a namespace
      tags:
      - Namespaces
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/namespaces/autocomplete:
    post:
      operationId: autocomplete_13
      parameters:
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiIds'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: autocomplete_13 200 response
      summary: List namespaces for autocomplete
      tags:
      - Namespaces
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/namespaces/search:
    get:
      operationId: find_37
      parameters:
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The current page
        explode: true
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: The current page size
        explode: true
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: The sort of current page
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: Return only existing namespace
        explode: true
        in: query
        name: existing
        required: false
        schema:
          default: false
          nullable: true
          type: boolean
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResults_NamespaceWithDisabled_'
          description: find_37 200 response
      summary: Search for namespaces
      tags:
      - Namespaces
      x-accepts:
      - application/json
  /api/v1/{tenant}/namespaces/{id}:
    delete:
      operationId: delete_39
      parameters:
      - description: The namespace id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: On success
      summary: Delete a flow
      tags:
      - Namespaces
      x-accepts:
      - application/json
    get:
      operationId: index_27
      parameters:
      - description: The namespace id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Namespace'
          description: index_27 200 response
      summary: Get a namespace
      tags:
      - Namespaces
      x-accepts:
      - application/json
    put:
      operationId: update_25
      parameters:
      - description: The namespace id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Namespace'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Namespace'
          description: update_25 200 response
      summary: Update a namespace
      tags:
      - Namespaces
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/namespaces/{id}/inherited-plugindefaults:
    get:
      operationId: inheritedPluginDefaults_1
      parameters:
      - description: The namespace id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PluginDefault'
                type: array
          description: inheritedPluginDefaults_1 200 response
      summary: List inherited plugin defaults
      tags:
      - Namespaces
      x-accepts:
      - application/json
  /api/v1/{tenant}/namespaces/{id}/inherited-variables:
    get:
      operationId: inheritedVariables_1
      parameters:
      - description: The namespace id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: inheritedVariables_1 200 response
      summary: List inherited variables
      tags:
      - Namespaces
      x-accepts:
      - application/json
  /api/v1/{tenant}/namespaces/{namespace}/dependencies:
    get:
      operationId: dependencies_3
      parameters:
      - description: The flow namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: "if true, list only destination dependencies, otherwise list\
          \ also source dependencies"
        explode: true
        in: query
        name: destinationOnly
        required: true
        schema:
          default: false
          type: boolean
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlowTopologyGraph'
          description: dependencies_3 200 response
      summary: Get flow dependencies
      tags:
      - Flows
      x-accepts:
      - application/json
  /api/v1/{tenant}/namespaces/{namespace}/files:
    delete:
      operationId: delete_40
      parameters:
      - description: The namespace id
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The internal storage uri of the file / directory to delete
        explode: true
        in: query
        name: path
        required: true
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: delete_40 200 response
      summary: Delete a file or directory
      tags:
      - Files
      x-accepts:
      - application/json
    get:
      operationId: file_3
      parameters:
      - description: The namespace id
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The internal storage uri
        explode: true
        in: query
        name: path
        required: true
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: file_3 200 response
      summary: Get namespace file content
      tags:
      - Files
      x-accepts:
      - application/octet-stream
    post:
      operationId: createFile_1
      parameters:
      - description: The namespace id
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The internal storage uri
        explode: true
        in: query
        name: path
        required: true
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            encoding:
              fileContent:
                contentType: application/octet-stream
                style: form
            schema:
              $ref: '#/components/schemas/createFile_request'
        required: true
      responses:
        "200":
          description: createFile_1 200 response
      summary: Create a file
      tags:
      - Files
      x-content-type: multipart/form-data
      x-accepts:
      - application/json
    put:
      operationId: move_1
      parameters:
      - description: The namespace id
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The internal storage uri to move from
        explode: true
        in: query
        name: from
        required: true
        schema:
          format: uri
          type: string
        style: form
      - description: The internal storage uri to move to
        explode: true
        in: query
        name: to
        required: true
        schema:
          format: uri
          type: string
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: move_1 200 response
      summary: Move a file or directory
      tags:
      - Files
      x-accepts:
      - application/json
  /api/v1/{tenant}/namespaces/{namespace}/files/directory:
    get:
      operationId: list_5
      parameters:
      - description: The namespace id
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The internal storage uri
        explode: true
        in: query
        name: path
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FileAttributes'
                type: array
          description: list_5 200 response
      summary: List directory content
      tags:
      - Files
      x-accepts:
      - application/json
    post:
      operationId: createDirectory_1
      parameters:
      - description: The namespace id
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The internal storage uri
        explode: true
        in: query
        name: path
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: createDirectory_1 200 response
      summary: Create a directory
      tags:
      - Files
      x-accepts:
      - application/json
  /api/v1/{tenant}/namespaces/{namespace}/files/export:
    get:
      operationId: export_1
      parameters:
      - description: The namespace id
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                items:
                  format: byte
                  type: string
                type: array
          description: export_1 200 response
      summary: Export namespace files as a ZIP
      tags:
      - Files
      x-accepts:
      - application/octet-stream
  /api/v1/{tenant}/namespaces/{namespace}/files/search:
    get:
      operationId: search_7
      parameters:
      - description: The namespace id
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The string the file path should contain
        explode: true
        in: query
        name: q
        required: true
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: search_7 200 response
      summary: Find files which path contain the given string in their URI
      tags:
      - Files
      x-accepts:
      - application/json
  /api/v1/{tenant}/namespaces/{namespace}/files/stats:
    get:
      operationId: stats_1
      parameters:
      - description: The namespace id
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The internal storage uri
        explode: true
        in: query
        name: path
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileAttributes'
          description: stats_1 200 response
      summary: "Get namespace file stats such as size, creation & modification dates\
        \ and type"
      tags:
      - Files
      x-accepts:
      - application/json
  /api/v1/{tenant}/namespaces/{namespace}/inherited-secrets:
    get:
      operationId: inheritedSecrets_1
      parameters:
      - description: The namespace id
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  items:
                    type: string
                  type: array
                type: object
          description: inheritedSecrets_1 200 response
      summary: List inherited secrets
      tags:
      - Namespaces
      x-accepts:
      - application/json
  /api/v1/{tenant}/namespaces/{namespace}/kv:
    delete:
      operationId: deleteKeys_1
      parameters:
      - description: The namespace id
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KVController.ApiDeleteBulkRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KVController.ApiDeleteBulkResponse'
          description: deleteKeys_1 200 response
      summary: Bulk-delete multiple key/value pairs from the given namespace.
      tags:
      - KV
      x-content-type: application/json
      x-accepts:
      - application/json
    get:
      operationId: list_6
      parameters:
      - description: The namespace id
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/KVEntry'
                type: array
          description: list_6 200 response
      summary: List all keys for a namespace
      tags:
      - KV
      x-accepts:
      - application/json
  /api/v1/{tenant}/namespaces/{namespace}/kv/{key}:
    delete:
      operationId: delete_41
      parameters:
      - description: The namespace id
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The key
        explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: delete_41 200 response
      summary: Delete a key-value pair
      tags:
      - KV
      x-accepts:
      - application/json
    get:
      operationId: get_12
      parameters:
      - description: The namespace id
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The key
        explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KVController.TypedValue'
          description: get_12 200 response
      summary: Get value for a key
      tags:
      - KV
      x-accepts:
      - application/json
    put:
      operationId: put_1
      parameters:
      - description: The namespace id
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The key
        explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              type: string
          text/plain:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: put_1 200 response
      summary: Puts a key-value pair in store
      tags:
      - KV
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/namespaces/{namespace}/secrets:
    get:
      operationId: listSecret_1
      parameters:
      - description: The namespace id
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiSecretMeta'
                type: array
          description: listSecret_1 200 response
      summary: Get secrets for a namespace
      tags:
      - Namespaces
      x-accepts:
      - application/json
    put:
      operationId: putSecrets_1
      parameters:
      - description: The namespace id
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiSecretValue'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiSecretMeta'
                type: array
          description: putSecrets_1 200 response
      summary: Update secrets for a namespace
      tags:
      - Namespaces
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/namespaces/{namespace}/secrets/{key}:
    delete:
      operationId: deleteSecret_1
      parameters:
      - description: The namespace id
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The secret key
        explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: deleteSecret_1 200 response
      summary: Delete a secret for a namespace
      tags:
      - Namespaces
      x-accepts:
      - application/json
    patch:
      operationId: patchSecret_1
      parameters:
      - description: The namespace id
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiSecretMeta'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiSecretMeta'
                type: array
          description: patchSecret_1 200 response
      summary: Patch a secret metadata for a namespace
      tags:
      - Namespaces
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/plugins:
    get:
      operationId: search_8
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Plugin'
                type: array
          description: search_8 200 response
      summary: Get list of plugins
      tags:
      - Plugins
      x-accepts:
      - application/json
  /api/v1/{tenant}/plugins/groups/subgroups:
    get:
      operationId: subgroups_1
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Plugin'
                type: array
          description: subgroups_1 200 response
      summary: Get plugins group by subgroups
      tags:
      - Plugins
      x-accepts:
      - application/json
  /api/v1/{tenant}/plugins/icons:
    get:
      operationId: icons_1
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  $ref: '#/components/schemas/PluginIcon'
                type: object
          description: icons_1 200 response
      summary: Get plugins icons
      tags:
      - Plugins
      x-accepts:
      - application/json
  /api/v1/{tenant}/plugins/icons/groups:
    get:
      operationId: pluginGroupIcons_1
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  $ref: '#/components/schemas/PluginIcon'
                type: object
          description: pluginGroupIcons_1 200 response
      summary: Get plugins icons
      tags:
      - Plugins
      x-accepts:
      - application/json
  /api/v1/{tenant}/plugins/inputs:
    get:
      operationId: inputs_1
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/InputType'
                type: array
          description: inputs_1 200 response
      summary: Get all types for an inputs
      tags:
      - Plugins
      x-accepts:
      - application/json
  /api/v1/{tenant}/plugins/inputs/{type}:
    get:
      description: "The schema will be output as [http://json-schema.org/draft-07/schema](Json\
        \ Schema Draft 7)"
      operationId: inputSchemas_1
      parameters:
      - description: The schema needed
        explode: false
        in: path
        name: type
        required: true
        schema:
          $ref: '#/components/schemas/Type'
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentationWithSchema'
          description: inputSchemas_1 200 response
      summary: Get all json schemas for a type
      tags:
      - Plugins
      x-accepts:
      - application/json
  /api/v1/{tenant}/plugins/schemas/{type}:
    get:
      description: "The schema will be output as [http://json-schema.org/draft-07/schema](Json\
        \ Schema Draft 7)"
      operationId: schemas_1
      parameters:
      - description: The schema needed
        explode: false
        in: path
        name: type
        required: true
        schema:
          $ref: '#/components/schemas/SchemaType'
        style: simple
      - description: If schema should be an array of requested type
        explode: true
        in: query
        name: arrayOf
        required: false
        schema:
          default: false
          nullable: true
          type: boolean
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: schemas_1 200 response
      summary: Get all json schemas for a type
      tags:
      - Plugins
      x-accepts:
      - application/json
  /api/v1/{tenant}/plugins/{cls}:
    get:
      operationId: pluginDocumentation_1
      parameters:
      - description: The plugin full class name
        explode: false
        in: path
        name: cls
        required: true
        schema:
          type: string
        style: simple
      - description: Include all the properties
        explode: true
        in: query
        name: all
        required: true
        schema:
          default: false
          type: boolean
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentationWithSchema'
          description: pluginDocumentation_1 200 response
      summary: Get plugin documentation
      tags:
      - Plugins
      x-accepts:
      - application/json
  /api/v1/{tenant}/roles:
    post:
      operationId: create_36
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: create_36 200 response
      summary: Create a role
      tags:
      - Roles
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/roles/autocomplete:
    post:
      operationId: autocomplete_14
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiAutocomplete'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Role'
                type: array
          description: autocomplete_14 200 response
      summary: List roles for autocomplete
      tags:
      - Roles
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/roles/ids:
    post:
      description: List roles by ids
      operationId: ids_7
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiIds'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Role'
                type: array
          description: ids_7 200 response
      tags:
      - Roles
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/roles/search:
    get:
      operationId: find_38
      parameters:
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The current page
        explode: true
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: The current page size
        explode: true
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      - description: The sort of current page
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResults_Role_'
          description: find_38 200 response
      summary: Search for roles
      tags:
      - Roles
      x-accepts:
      - application/json
  /api/v1/{tenant}/roles/{id}:
    delete:
      operationId: delete_42
      parameters:
      - description: The role id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: On success
      summary: Delete a role
      tags:
      - Roles
      x-accepts:
      - application/json
    get:
      operationId: index_28
      parameters:
      - description: The role id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: index_28 200 response
      summary: Get a role
      tags:
      - Roles
      x-accepts:
      - application/json
    put:
      operationId: update_26
      parameters:
      - description: The role id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: update_26 200 response
      summary: Update a role
      tags:
      - Roles
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/security-integrations:
    get:
      operationId: list_7
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: list_7 200 response
      summary: List all security integrations.
      tags:
      - SecurityIntegrations
      x-accepts:
      - application/json
    post:
      operationId: create_37
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSecurityIntegrationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: create_37 200 response
      summary: Create a security integration.
      tags:
      - SecurityIntegrations
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/security-integrations/{id}:
    delete:
      operationId: delete_43
      parameters:
      - description: The ID of security integration
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: delete_43 200 response
      summary: Delete the security integration.
      tags:
      - SecurityIntegrations
      x-accepts:
      - application/json
    get:
      operationId: index_29
      parameters:
      - description: The ID of security integration
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: index_29 200 response
      summary: Get a security integration.
      tags:
      - SecurityIntegrations
      x-accepts:
      - application/json
  /api/v1/{tenant}/security-integrations/{id}/disable:
    post:
      operationId: disable_3
      parameters:
      - description: The ID of security integration
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: disable_3 200 response
      summary: Disable the security integration.
      tags:
      - SecurityIntegrations
      x-accepts:
      - application/json
  /api/v1/{tenant}/security-integrations/{id}/enable:
    post:
      operationId: enable_3
      parameters:
      - description: The ID of security integration
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: enable_3 200 response
      summary: Enable the security integration.
      tags:
      - SecurityIntegrations
      x-accepts:
      - application/json
  /api/v1/{tenant}/stats/executions/daily:
    post:
      operationId: dailyStatistics_1
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StatsController.StatisticRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DailyExecutionStatistics'
                type: array
          description: dailyStatistics_1 200 response
      summary: Get daily statistics for executions
      tags:
      - Stats
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/stats/executions/daily/group-by-flow:
    post:
      operationId: dailyGroupByFlowStatistics_1
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StatsController.ByFlowStatisticRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  additionalProperties:
                    items:
                      $ref: '#/components/schemas/DailyExecutionStatistics'
                    type: array
                  type: object
                type: object
          description: dailyGroupByFlowStatistics_1 200 response
      summary: Get daily statistics for executions group by namespaces and flows
      tags:
      - Stats
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/stats/executions/daily/group-by-namespace:
    post:
      operationId: dailyStatisticsGroupByNamespace_1
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StatsController.ByNamespaceStatisticRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  $ref: '#/components/schemas/ExecutionCountStatistics'
                type: object
          description: dailyStatisticsGroupByNamespace_1 200 response
      summary: Get daily statistics for executions grouped by namespace
      tags:
      - Stats
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/stats/executions/latest/group-by-flow:
    post:
      operationId: lastExecutions_1
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StatsController.LastExecutionsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Execution'
                type: array
          description: lastExecutions_1 200 response
      summary: Get latest execution by flows
      tags:
      - Stats
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/stats/generate-reports:
    get:
      operationId: generate_1
      parameters:
      - description: The start date
        explode: true
        in: query
        name: from
        required: false
        schema:
          format: date
          nullable: true
          type: string
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                items:
                  format: byte
                  type: string
                type: array
          description: generate_1 200 response
      x-accepts:
      - application/octet-stream
  /api/v1/{tenant}/stats/logs/daily:
    post:
      operationId: logsDailyStatistics_1
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StatsController.LogStatisticRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/LogStatistics'
                type: array
          description: logsDailyStatistics_1 200 response
      summary: Get daily statistics for logs
      tags:
      - Stats
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/stats/summary:
    post:
      operationId: summary_1
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StatsController.SummaryRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SummaryStatistics'
          description: summary_1 200 response
      summary: Get summary statistics
      tags:
      - Stats
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/stats/taskruns/daily:
    post:
      operationId: taskRunsDailyStatistics_1
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StatsController.StatisticRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DailyExecutionStatistics'
                type: array
          description: taskRunsDailyStatistics_1 200 response
      summary: Get daily statistics for taskRuns
      tags:
      - Stats
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/taskruns/search:
    get:
      operationId: findTaskRun_1
      parameters:
      - description: The current page
        explode: true
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: The current page size
        explode: true
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: The sort of current page
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A namespace filter prefix
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A flow id filter
        explode: true
        in: query
        name: flowId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The start datetime
        explode: true
        in: query
        name: startDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: The end datetime
        explode: true
        in: query
        name: endDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: A state filter
        explode: true
        in: query
        name: state
        required: false
        schema:
          items:
            $ref: '#/components/schemas/State.Type'
          nullable: true
          type: array
        style: form
      - description: A labels filter as a list of 'key:value'
        explode: true
        in: query
        name: labels
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: The trigger execution id
        explode: true
        in: query
        name: triggerExecutionId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A execution child filter
        explode: true
        in: query
        name: childFilter
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/ExecutionRepositoryInterface.ChildFilter'
          nullable: true
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResults_TaskRun_'
          description: findTaskRun_1 200 response
      summary: "Search for taskruns, only available with the Elasticsearch repository"
      tags:
      - Executions
      x-accepts:
      - application/json
  /api/v1/{tenant}/templates:
    post:
      operationId: create_38
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Template'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'
          description: create_38 200 response
      summary: Create a template
      tags:
      - Templates
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/templates/delete/by-ids:
    delete:
      operationId: deleteByIds_5
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/IdWithNamespace'
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkResponse'
          description: deleteByIds_5 200 response
      summary: Delete templates by their IDs.
      tags:
      - Templates
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/templates/delete/by-query:
    delete:
      operationId: deleteByQuery_5
      parameters:
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A namespace filter prefix
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkResponse'
          description: deleteByQuery_5 200 response
      summary: Delete templates returned by the query parameters.
      tags:
      - Templates
      x-accepts:
      - application/json
  /api/v1/{tenant}/templates/distinct-namespaces:
    get:
      operationId: listDistinctNamespace_5
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: listDistinctNamespace_5 200 response
      summary: List all distinct namespaces
      tags:
      - Templates
      x-accepts:
      - application/json
  /api/v1/{tenant}/templates/export/by-ids:
    post:
      operationId: exportByIds_3
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/IdWithNamespace'
              type: array
        required: true
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                items:
                  format: byte
                  type: string
                type: array
          description: exportByIds_3 200 response
      summary: Export templates as a ZIP archive of yaml sources.
      tags:
      - Templates
      x-content-type: application/json
      x-accepts:
      - application/octet-stream
  /api/v1/{tenant}/templates/export/by-query:
    get:
      operationId: exportByQuery_3
      parameters:
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A namespace filter prefix
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                items:
                  format: byte
                  type: string
                type: array
          description: exportByQuery_3 200 response
      summary: Export templates as a ZIP archive of yaml sources.
      tags:
      - Templates
      x-accepts:
      - application/octet-stream
  /api/v1/{tenant}/templates/import:
    post:
      operationId: importTemplates_1
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            encoding:
              fileUpload:
                contentType: application/octet-stream
                style: form
            schema:
              $ref: '#/components/schemas/importFlows_request'
        required: true
      responses:
        "204":
          description: On success
        "200":
          description: importTemplates_1 200 response
      summary: Import templates as a ZIP archive of yaml sources or a multi-objects
        YAML file.
      tags:
      - Templates
      x-content-type: multipart/form-data
      x-accepts:
      - application/json
  /api/v1/{tenant}/templates/search:
    get:
      operationId: find_39
      parameters:
      - description: The current page
        explode: true
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: The current page size
        explode: true
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: The sort of current page
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A namespace filter prefix
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResults_Template_'
          description: find_39 200 response
      summary: Search for templates
      tags:
      - Templates
      x-accepts:
      - application/json
  /api/v1/{tenant}/templates/validate:
    post:
      operationId: validateTemplates_1
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/x-yaml:
            schema:
              type: string
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ValidateConstraintViolation'
                type: array
          description: validateTemplates_1 200 response
      summary: Validate a list of templates
      tags:
      - Templates
      x-content-type: application/x-yaml
      x-accepts:
      - application/json
  /api/v1/{tenant}/templates/{namespace}:
    post:
      description: |-
        All Template will be created / updated for this namespace.
        Template already created but not in `templates` will be deleted if the query delete is `true`
      operationId: updateNamespace_3
      parameters:
      - description: The template namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: If missing template should be deleted
        explode: true
        in: query
        name: delete
        required: true
        schema:
          default: true
          type: boolean
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Template'
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Template'
                type: array
          description: updateNamespace_3 200 response
      summary: Update a complete namespace from json object
      tags:
      - Templates
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/templates/{namespace}/{id}:
    delete:
      operationId: delete_44
      parameters:
      - description: The template namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The template id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: On success
        "200":
          description: delete_44 200 response
      summary: Delete a template
      tags:
      - Templates
      x-accepts:
      - application/json
    get:
      operationId: index_30
      parameters:
      - description: The template namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The template id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'
          description: index_30 200 response
      summary: Get a template
      tags:
      - Templates
      x-accepts:
      - application/json
    put:
      operationId: update_27
      parameters:
      - description: The template namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The template id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Template'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'
          description: update_27 200 response
      summary: Update a template
      tags:
      - Templates
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/tenants:
    post:
      operationId: create_39
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tenant'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tenant'
          description: create_39 200 response
      summary: Create a tenant
      tags:
      - Tenants
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/tenants/bindings:
    post:
      operationId: create_40
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Binding'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AbstractBindingController.BindingDetail'
          description: create_40 200 response
      summary: Create a binding
      tags:
      - Bindings
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/tenants/bindings/bulk:
    post:
      operationId: bulkCreate_4
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Binding'
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AbstractBindingController.BindingDetail'
                type: array
          description: bulkCreate_4 200 response
      summary: Create multiple bindings
      tags:
      - Bindings
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/tenants/bindings/search:
    get:
      operationId: find_40
      parameters:
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The current page
        explode: true
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: The current page size
        explode: true
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      - description: The sort of current page
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: Binding type filter
        explode: true
        in: query
        name: type
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/Binding.Type'
          nullable: true
        style: form
      - description: External id filter
        explode: true
        in: query
        name: id
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A namespace filter
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResults_AbstractBindingController.BindingDetail_'
          description: find_40 200 response
      summary: Search for bindings
      tags:
      - Bindings
      x-accepts:
      - application/json
  /api/v1/{tenant}/tenants/bindings/{id}:
    delete:
      operationId: delete_45
      parameters:
      - description: The binding id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: On success
      summary: Delete a binding
      tags:
      - Bindings
      x-accepts:
      - application/json
    get:
      operationId: index_31
      parameters:
      - description: The binding id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AbstractBindingController.BindingDetail'
          description: index_31 200 response
      summary: Get a binding
      tags:
      - Bindings
      x-accepts:
      - application/json
  /api/v1/{tenant}/tenants/groups:
    post:
      operationId: create_41
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AbstractGroupController.GroupWithMembers'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: create_41 200 response
      summary: Create a group
      tags:
      - Groups
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/tenants/groups/autocomplete:
    post:
      operationId: autocomplete_15
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiAutocomplete'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Group'
                type: array
          description: autocomplete_15 200 response
      summary: List groups for autocomplete
      tags:
      - Groups
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/tenants/groups/ids:
    post:
      operationId: ids_8
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiIds'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Group'
                type: array
          description: ids_8 200 response
      summary: List groups by ids
      tags:
      - Groups
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/tenants/groups/search:
    get:
      operationId: find_41
      parameters:
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The current page
        explode: true
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: The current page size
        explode: true
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      - description: The sort of current page
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResults_Group_'
          description: find_41 200 response
      summary: Search for groups
      tags:
      - Groups
      x-accepts:
      - application/json
  /api/v1/{tenant}/tenants/groups/{id}:
    delete:
      operationId: delete_46
      parameters:
      - description: The group id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: On success
      summary: Delete a group
      tags:
      - Groups
      x-accepts:
      - application/json
    get:
      operationId: index_32
      parameters:
      - description: The group id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: index_32 200 response
      summary: Get a group
      tags:
      - Groups
      x-accepts:
      - application/json
    put:
      operationId: update_28
      parameters:
      - description: The group id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: update_28 200 response
      summary: Update a group
      tags:
      - Groups
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/tenants/groups/{id}/members:
    get:
      operationId: members_4
      parameters:
      - description: The group id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The current page
        explode: true
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: The current page size
        explode: true
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      - description: The sort of current page
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResults_ApiUser_'
          description: members_4 200 response
      summary: Search for users in a group
      tags:
      - Groups
      x-accepts:
      - application/json
  /api/v1/{tenant}/tenants/groups/{id}/members/{userId}:
    delete:
      operationId: deleteGroup_4
      parameters:
      - description: The group id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The user id
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUser'
          description: deleteGroup_4 200 response
      summary: Delete a group for a user
      tags:
      - Groups
      x-accepts:
      - application/json
    put:
      operationId: addGroup_4
      parameters:
      - description: The group id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The user id
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUser'
          description: addGroup_4 200 response
      summary: Add a group for a user
      tags:
      - Groups
      x-accepts:
      - application/json
  /api/v1/{tenant}/tenants/invitations:
    post:
      operationId: create_42
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Invitation'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invitation'
          description: create_42 200 response
      summary: Create an invitation
      tags:
      - Invitations
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/tenants/invitations/email/{email}:
    get:
      operationId: findByEmail_4
      parameters:
      - description: The email address of the invited
        explode: false
        in: path
        name: email
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Invitation'
                type: array
          description: findByEmail_4 200 response
      summary: Get all invitations for a given email
      tags:
      - Invitations
      x-accepts:
      - application/json
  /api/v1/{tenant}/tenants/invitations/search:
    get:
      operationId: find_42
      parameters:
      - description: The email address of the invited
        explode: true
        in: query
        name: email
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The current status of the invitations
        explode: true
        in: query
        name: status
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/Invitation.InvitationStatus'
          nullable: true
        style: form
      - description: The current page
        explode: true
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: The current page size
        explode: true
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      - description: The sort of current page
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResults_Invitation_'
          description: find_42 200 response
      summary: Search for invitations
      tags:
      - Invitations
      x-accepts:
      - application/json
  /api/v1/{tenant}/tenants/invitations/{id}:
    delete:
      operationId: delete_47
      parameters:
      - description: The id of the invitation
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: delete_47 200 response
      summary: Delete an invitation
      tags:
      - Invitations
      x-accepts:
      - application/json
    get:
      operationId: get_13
      parameters:
      - description: The id of the invitation
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invitation'
          description: get_13 200 response
      summary: Delete an invitation
      tags:
      - Invitations
      x-accepts:
      - application/json
  /api/v1/{tenant}/tenants/namespaces/autocomplete:
    post:
      operationId: autocomplete_16
      parameters:
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiIds'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: autocomplete_16 200 response
      summary: List namespaces for autocomplete
      tags:
      - Namespaces
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/tenants/roles:
    post:
      operationId: create_43
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: create_43 200 response
      summary: Create a role
      tags:
      - Roles
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/tenants/roles/autocomplete:
    post:
      operationId: autocomplete_17
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiAutocomplete'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Role'
                type: array
          description: autocomplete_17 200 response
      summary: List roles for autocomplete
      tags:
      - Roles
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/tenants/roles/ids:
    post:
      description: List roles by ids
      operationId: ids_9
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiIds'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Role'
                type: array
          description: ids_9 200 response
      tags:
      - Roles
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/tenants/roles/search:
    get:
      operationId: find_43
      parameters:
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The current page
        explode: true
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: The current page size
        explode: true
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      - description: The sort of current page
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResults_Role_'
          description: find_43 200 response
      summary: Search for roles
      tags:
      - Roles
      x-accepts:
      - application/json
  /api/v1/{tenant}/tenants/roles/{id}:
    delete:
      operationId: delete_48
      parameters:
      - description: The role id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: On success
      summary: Delete a role
      tags:
      - Roles
      x-accepts:
      - application/json
    get:
      operationId: index_33
      parameters:
      - description: The role id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: index_33 200 response
      summary: Get a role
      tags:
      - Roles
      x-accepts:
      - application/json
    put:
      operationId: update_29
      parameters:
      - description: The role id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: update_29 200 response
      summary: Update a role
      tags:
      - Roles
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/tenants/search:
    get:
      operationId: find_44
      parameters:
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The current page
        explode: true
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: The current page size
        explode: true
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      - description: The sort of current page
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResults_Tenant_'
          description: find_44 200 response
      summary: Search for tenants
      tags:
      - Tenants
      x-accepts:
      - application/json
  /api/v1/{tenant}/tenants/users:
    post:
      operationId: create_44
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiUser'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUser'
          description: create_44 200 response
      summary: Create a standard user
      tags:
      - Users
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/tenants/users/autocomplete:
    post:
      operationId: autocomplete_18
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AbstractUserController.UserApiAutocomplete'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiUser'
                type: array
          description: autocomplete_18 200 response
      summary: List users for autocomplete
      tags:
      - Users
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/tenants/users/instance:
    get:
      operationId: findAllForAllTenants_2
      parameters:
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The current page
        explode: true
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: The current page size
        explode: true
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      - description: The sort of current page
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: The type of user
        explode: true
        in: query
        name: type
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/UserType'
          nullable: true
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResults_ApiUser_'
          description: findAllForAllTenants_2 200 response
      summary: Get all users in the instance across all tenantd
      tags:
      - Users
      x-accepts:
      - application/json
  /api/v1/{tenant}/tenants/users/search:
    get:
      operationId: find_45
      parameters:
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The current page
        explode: true
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: The current page size
        explode: true
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      - description: The sort of current page
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: The type of user
        explode: true
        in: query
        name: type
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/UserType'
          nullable: true
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResults_ApiUser_'
          description: find_45 200 response
      summary: Search for users
      tags:
      - Users
      x-accepts:
      - application/json
  /api/v1/{tenant}/tenants/users/service-accounts:
    post:
      operationId: createServiceAccount_3
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiServiceAccount'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServiceAccount'
          description: createServiceAccount_3 200 response
      summary: Create a user service account
      tags:
      - Users
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/tenants/users/service-accounts/{id}:
    put:
      operationId: updateServiceAccount_3
      parameters:
      - description: The user id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiServiceAccount'
        required: true
      responses:
        "404":
          description: On user not found
      summary: Update a user service account
      tags:
      - Users
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/tenants/users/{id}:
    delete:
      operationId: delete_49
      parameters:
      - description: The user id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: On success
        "404":
          description: On user not found
      summary: Delete a user
      tags:
      - Users
      x-accepts:
      - application/json
    get:
      operationId: index_34
      parameters:
      - description: The user id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "404":
          description: On user not found
      summary: Get a user
      tags:
      - Users
      x-accepts:
      - application/json
    put:
      operationId: update_30
      parameters:
      - description: The user id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiUser'
        required: true
      responses:
        "404":
          description: On user not found
      summary: Update a standard user
      tags:
      - Users
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/tenants/users/{id}/api-tokens:
    get:
      operationId: listApiTokens_5
      parameters:
      - description: The user id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: listApiTokens_5 200 response
      summary: List all API Tokens for specific user
      tags:
      - Users
      x-accepts:
      - application/json
    post:
      operationId: createApiTokensForUser_3
      parameters:
      - description: The user id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateApiTokenRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: createApiTokensForUser_3 200 response
      summary: Create new API Token for a specific user
      tags:
      - Users
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/tenants/users/{id}/api-tokens/{tokenId}:
    delete:
      operationId: deleteApiToken_5
      parameters:
      - description: The user id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The token id
        explode: false
        in: path
        name: tokenId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: deleteApiToken_5 200 response
      summary: Delete an API Token for specific user and token id
      tags:
      - Users
      x-accepts:
      - application/json
  /api/v1/{tenant}/tenants/users/{id}/auths/{uid}:
    delete:
      operationId: deleteAuth_3
      parameters:
      - description: The user id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The auth id
        explode: false
        in: path
        name: uid
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "404":
          description: On user not found
      summary: Delete an Auth for a user
      tags:
      - Users
      x-accepts:
      - application/json
  /api/v1/{tenant}/tenants/users/{id}/impersonate:
    post:
      operationId: impersonate_2
      parameters:
      - description: The user id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: impersonate_2 200 response
      summary: Impersonate a user
      tags:
      - Users
      x-accepts:
      - application/json
  /api/v1/{tenant}/tenants/users/{id}/password:
    put:
      operationId: index_35
      parameters:
      - description: The user id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AbstractUserController.PasswordRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUser'
          description: index_35 200 response
      summary: Create a basic auth password for a standard user
      tags:
      - Users
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/tenants/users/{id}/refresh-token:
    delete:
      operationId: deleteRefreshToken_3
      parameters:
      - description: The user id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUser'
          description: deleteRefreshToken_3 200 response
      summary: Delete a user refresh token
      tags:
      - Users
      x-accepts:
      - application/json
  /api/v1/{tenant}/tenants/users/{id}/set-superadmin:
    put:
      operationId: setSuperAdmin_2
      parameters:
      - description: The user id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              type: boolean
        required: true
      responses:
        "404":
          description: On user not found
      summary: Update a user service account
      tags:
      - Users
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/tenants/{id}:
    delete:
      operationId: delete_50
      parameters:
      - description: The tenant id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: On success
      summary: Delete a tenant
      tags:
      - Tenants
      x-accepts:
      - application/json
    get:
      operationId: get_14
      parameters:
      - description: The tenant id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tenant'
          description: get_14 200 response
      summary: Get a tenant
      tags:
      - Tenants
      x-accepts:
      - application/json
    put:
      operationId: update_31
      parameters:
      - description: The tenant id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tenant'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tenant'
          description: update_31 200 response
      summary: Update a tenant
      tags:
      - Tenants
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/tenants/{id}/logo:
    post:
      operationId: setLogo_1
      parameters:
      - description: The tenant id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            encoding:
              logo:
                contentType: application/octet-stream
                style: form
            schema:
              $ref: '#/components/schemas/setLogo_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiTenant'
          description: setLogo_1 200 response
      summary: Set a tenant logo
      tags:
      - Tenants
      x-content-type: multipart/form-data
      x-accepts:
      - application/json
  /api/v1/{tenant}/tenants/{ressourceTenant}/bindings:
    post:
      operationId: create_45
      parameters:
      - explode: false
        in: path
        name: ressourceTenant
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Binding'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AbstractBindingController.BindingDetail'
          description: create_45 200 response
      summary: Create a binding
      tags:
      - Bindings
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/tenants/{ressourceTenant}/bindings/bulk:
    post:
      operationId: bulkCreate_5
      parameters:
      - explode: false
        in: path
        name: ressourceTenant
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Binding'
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AbstractBindingController.BindingDetail'
                type: array
          description: bulkCreate_5 200 response
      summary: Create multiple bindings
      tags:
      - Bindings
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/tenants/{ressourceTenant}/bindings/search:
    get:
      operationId: find_46
      parameters:
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The current page
        explode: true
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: The current page size
        explode: true
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      - description: The sort of current page
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: Binding type filter
        explode: true
        in: query
        name: type
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/Binding.Type'
          nullable: true
        style: form
      - description: External id filter
        explode: true
        in: query
        name: id
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A namespace filter
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: false
        in: path
        name: ressourceTenant
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResults_AbstractBindingController.BindingDetail_'
          description: find_46 200 response
      summary: Search for bindings
      tags:
      - Bindings
      x-accepts:
      - application/json
  /api/v1/{tenant}/tenants/{ressourceTenant}/bindings/{id}:
    delete:
      operationId: delete_51
      parameters:
      - description: The binding id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: ressourceTenant
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: On success
      summary: Delete a binding
      tags:
      - Bindings
      x-accepts:
      - application/json
    get:
      operationId: index_36
      parameters:
      - description: The binding id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: ressourceTenant
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AbstractBindingController.BindingDetail'
          description: index_36 200 response
      summary: Get a binding
      tags:
      - Bindings
      x-accepts:
      - application/json
  /api/v1/{tenant}/tenants/{ressourceTenant}/groups:
    post:
      operationId: create_46
      parameters:
      - explode: false
        in: path
        name: ressourceTenant
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AbstractGroupController.GroupWithMembers'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: create_46 200 response
      summary: Create a group
      tags:
      - Groups
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/tenants/{ressourceTenant}/groups/autocomplete:
    post:
      operationId: autocomplete_19
      parameters:
      - explode: false
        in: path
        name: ressourceTenant
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiAutocomplete'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Group'
                type: array
          description: autocomplete_19 200 response
      summary: List groups for autocomplete
      tags:
      - Groups
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/tenants/{ressourceTenant}/groups/ids:
    post:
      operationId: ids_10
      parameters:
      - explode: false
        in: path
        name: ressourceTenant
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiIds'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Group'
                type: array
          description: ids_10 200 response
      summary: List groups by ids
      tags:
      - Groups
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/tenants/{ressourceTenant}/groups/search:
    get:
      operationId: find_47
      parameters:
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The current page
        explode: true
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: The current page size
        explode: true
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      - description: The sort of current page
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - explode: false
        in: path
        name: ressourceTenant
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResults_Group_'
          description: find_47 200 response
      summary: Search for groups
      tags:
      - Groups
      x-accepts:
      - application/json
  /api/v1/{tenant}/tenants/{ressourceTenant}/groups/{id}:
    delete:
      operationId: delete_52
      parameters:
      - description: The group id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: ressourceTenant
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: On success
      summary: Delete a group
      tags:
      - Groups
      x-accepts:
      - application/json
    get:
      operationId: index_37
      parameters:
      - description: The group id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: ressourceTenant
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: index_37 200 response
      summary: Get a group
      tags:
      - Groups
      x-accepts:
      - application/json
    put:
      operationId: update_32
      parameters:
      - description: The group id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: ressourceTenant
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: update_32 200 response
      summary: Update a group
      tags:
      - Groups
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/tenants/{ressourceTenant}/groups/{id}/members:
    get:
      operationId: members_5
      parameters:
      - description: The group id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The current page
        explode: true
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: The current page size
        explode: true
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      - description: The sort of current page
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - explode: false
        in: path
        name: ressourceTenant
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResults_ApiUser_'
          description: members_5 200 response
      summary: Search for users in a group
      tags:
      - Groups
      x-accepts:
      - application/json
  /api/v1/{tenant}/tenants/{ressourceTenant}/groups/{id}/members/{userId}:
    delete:
      operationId: deleteGroup_5
      parameters:
      - description: The group id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The user id
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: ressourceTenant
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUser'
          description: deleteGroup_5 200 response
      summary: Delete a group for a user
      tags:
      - Groups
      x-accepts:
      - application/json
    put:
      operationId: addGroup_5
      parameters:
      - description: The group id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The user id
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: ressourceTenant
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUser'
          description: addGroup_5 200 response
      summary: Add a group for a user
      tags:
      - Groups
      x-accepts:
      - application/json
  /api/v1/{tenant}/tenants/{ressourceTenant}/invitations:
    post:
      operationId: create_47
      parameters:
      - explode: false
        in: path
        name: ressourceTenant
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Invitation'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invitation'
          description: create_47 200 response
      summary: Create an invitation
      tags:
      - Invitations
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/tenants/{ressourceTenant}/invitations/email/{email}:
    get:
      operationId: findByEmail_5
      parameters:
      - description: The email address of the invited
        explode: false
        in: path
        name: email
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: ressourceTenant
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Invitation'
                type: array
          description: findByEmail_5 200 response
      summary: Get all invitations for a given email
      tags:
      - Invitations
      x-accepts:
      - application/json
  /api/v1/{tenant}/tenants/{ressourceTenant}/invitations/search:
    get:
      operationId: find_48
      parameters:
      - description: The email address of the invited
        explode: true
        in: query
        name: email
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The current status of the invitations
        explode: true
        in: query
        name: status
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/Invitation.InvitationStatus'
          nullable: true
        style: form
      - description: The current page
        explode: true
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: The current page size
        explode: true
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      - description: The sort of current page
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - explode: false
        in: path
        name: ressourceTenant
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResults_Invitation_'
          description: find_48 200 response
      summary: Search for invitations
      tags:
      - Invitations
      x-accepts:
      - application/json
  /api/v1/{tenant}/tenants/{ressourceTenant}/invitations/{id}:
    delete:
      operationId: delete_53
      parameters:
      - description: The id of the invitation
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: ressourceTenant
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: delete_53 200 response
      summary: Delete an invitation
      tags:
      - Invitations
      x-accepts:
      - application/json
    get:
      operationId: get_15
      parameters:
      - description: The id of the invitation
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: ressourceTenant
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invitation'
          description: get_15 200 response
      summary: Delete an invitation
      tags:
      - Invitations
      x-accepts:
      - application/json
  /api/v1/{tenant}/tenants/{ressourceTenant}/namespaces/autocomplete:
    post:
      operationId: autocomplete_20
      parameters:
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: false
        in: path
        name: ressourceTenant
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiIds'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: autocomplete_20 200 response
      summary: List namespaces for autocomplete
      tags:
      - Namespaces
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/tenants/{ressourceTenant}/roles:
    post:
      operationId: create_48
      parameters:
      - explode: false
        in: path
        name: ressourceTenant
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: create_48 200 response
      summary: Create a role
      tags:
      - Roles
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/tenants/{ressourceTenant}/roles/autocomplete:
    post:
      operationId: autocomplete_21
      parameters:
      - explode: false
        in: path
        name: ressourceTenant
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiAutocomplete'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Role'
                type: array
          description: autocomplete_21 200 response
      summary: List roles for autocomplete
      tags:
      - Roles
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/tenants/{ressourceTenant}/roles/ids:
    post:
      description: List roles by ids
      operationId: ids_11
      parameters:
      - explode: false
        in: path
        name: ressourceTenant
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiIds'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Role'
                type: array
          description: ids_11 200 response
      tags:
      - Roles
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/tenants/{ressourceTenant}/roles/search:
    get:
      operationId: find_49
      parameters:
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The current page
        explode: true
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: The current page size
        explode: true
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      - description: The sort of current page
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - explode: false
        in: path
        name: ressourceTenant
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResults_Role_'
          description: find_49 200 response
      summary: Search for roles
      tags:
      - Roles
      x-accepts:
      - application/json
  /api/v1/{tenant}/tenants/{ressourceTenant}/roles/{id}:
    delete:
      operationId: delete_54
      parameters:
      - description: The role id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: ressourceTenant
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: On success
      summary: Delete a role
      tags:
      - Roles
      x-accepts:
      - application/json
    get:
      operationId: index_38
      parameters:
      - description: The role id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: ressourceTenant
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: index_38 200 response
      summary: Get a role
      tags:
      - Roles
      x-accepts:
      - application/json
    put:
      operationId: update_33
      parameters:
      - description: The role id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: ressourceTenant
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: update_33 200 response
      summary: Update a role
      tags:
      - Roles
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/tenants/{ressourceTenant}/users:
    post:
      operationId: create_49
      parameters:
      - explode: false
        in: path
        name: ressourceTenant
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiUser'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUser'
          description: create_49 200 response
      summary: Create a standard user
      tags:
      - Users
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/tenants/{ressourceTenant}/users/autocomplete:
    post:
      operationId: autocomplete_22
      parameters:
      - explode: false
        in: path
        name: ressourceTenant
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AbstractUserController.UserApiAutocomplete'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiUser'
                type: array
          description: autocomplete_22 200 response
      summary: List users for autocomplete
      tags:
      - Users
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/tenants/{ressourceTenant}/users/instance:
    get:
      operationId: findAllForAllTenants_3
      parameters:
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The current page
        explode: true
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: The current page size
        explode: true
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      - description: The sort of current page
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: The type of user
        explode: true
        in: query
        name: type
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/UserType'
          nullable: true
        style: form
      - explode: false
        in: path
        name: ressourceTenant
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResults_ApiUser_'
          description: findAllForAllTenants_3 200 response
      summary: Get all users in the instance across all tenantd
      tags:
      - Users
      x-accepts:
      - application/json
  /api/v1/{tenant}/tenants/{ressourceTenant}/users/search:
    get:
      operationId: find_50
      parameters:
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The current page
        explode: true
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: The current page size
        explode: true
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      - description: The sort of current page
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: The type of user
        explode: true
        in: query
        name: type
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/UserType'
          nullable: true
        style: form
      - explode: false
        in: path
        name: ressourceTenant
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResults_ApiUser_'
          description: find_50 200 response
      summary: Search for users
      tags:
      - Users
      x-accepts:
      - application/json
  /api/v1/{tenant}/tenants/{ressourceTenant}/users/service-accounts:
    post:
      operationId: createServiceAccount_4
      parameters:
      - explode: false
        in: path
        name: ressourceTenant
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiServiceAccount'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServiceAccount'
          description: createServiceAccount_4 200 response
      summary: Create a user service account
      tags:
      - Users
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/tenants/{ressourceTenant}/users/service-accounts/{id}:
    put:
      operationId: updateServiceAccount_4
      parameters:
      - description: The user id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: ressourceTenant
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiServiceAccount'
        required: true
      responses:
        "404":
          description: On user not found
      summary: Update a user service account
      tags:
      - Users
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/tenants/{ressourceTenant}/users/{id}:
    delete:
      operationId: delete_55
      parameters:
      - description: The user id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: ressourceTenant
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: On success
        "404":
          description: On user not found
      summary: Delete a user
      tags:
      - Users
      x-accepts:
      - application/json
    get:
      operationId: index_39
      parameters:
      - description: The user id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: ressourceTenant
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "404":
          description: On user not found
      summary: Get a user
      tags:
      - Users
      x-accepts:
      - application/json
    put:
      operationId: update_34
      parameters:
      - description: The user id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: ressourceTenant
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiUser'
        required: true
      responses:
        "404":
          description: On user not found
      summary: Update a standard user
      tags:
      - Users
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/tenants/{ressourceTenant}/users/{id}/api-tokens:
    get:
      operationId: listApiTokens_6
      parameters:
      - description: The user id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: ressourceTenant
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: listApiTokens_6 200 response
      summary: List all API Tokens for specific user
      tags:
      - Users
      x-accepts:
      - application/json
    post:
      operationId: createApiTokensForUser_4
      parameters:
      - description: The user id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: ressourceTenant
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateApiTokenRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: createApiTokensForUser_4 200 response
      summary: Create new API Token for a specific user
      tags:
      - Users
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/tenants/{ressourceTenant}/users/{id}/api-tokens/{tokenId}:
    delete:
      operationId: deleteApiToken_6
      parameters:
      - description: The user id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The token id
        explode: false
        in: path
        name: tokenId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: ressourceTenant
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: deleteApiToken_6 200 response
      summary: Delete an API Token for specific user and token id
      tags:
      - Users
      x-accepts:
      - application/json
  /api/v1/{tenant}/tenants/{ressourceTenant}/users/{id}/auths/{uid}:
    delete:
      operationId: deleteAuth_4
      parameters:
      - description: The user id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The auth id
        explode: false
        in: path
        name: uid
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: ressourceTenant
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "404":
          description: On user not found
      summary: Delete an Auth for a user
      tags:
      - Users
      x-accepts:
      - application/json
  /api/v1/{tenant}/tenants/{ressourceTenant}/users/{id}/impersonate:
    post:
      operationId: impersonate_3
      parameters:
      - description: The user id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: ressourceTenant
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: impersonate_3 200 response
      summary: Impersonate a user
      tags:
      - Users
      x-accepts:
      - application/json
  /api/v1/{tenant}/tenants/{ressourceTenant}/users/{id}/password:
    put:
      operationId: index_40
      parameters:
      - description: The user id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: ressourceTenant
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AbstractUserController.PasswordRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUser'
          description: index_40 200 response
      summary: Create a basic auth password for a standard user
      tags:
      - Users
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/tenants/{ressourceTenant}/users/{id}/refresh-token:
    delete:
      operationId: deleteRefreshToken_4
      parameters:
      - description: The user id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: ressourceTenant
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUser'
          description: deleteRefreshToken_4 200 response
      summary: Delete a user refresh token
      tags:
      - Users
      x-accepts:
      - application/json
  /api/v1/{tenant}/tenants/{ressourceTenant}/users/{id}/set-superadmin:
    put:
      operationId: setSuperAdmin_3
      parameters:
      - description: The user id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: ressourceTenant
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              type: boolean
        required: true
      responses:
        "404":
          description: On user not found
      summary: Update a user service account
      tags:
      - Users
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/triggers:
    put:
      operationId: update_35
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Trigger'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trigger'
          description: update_35 200 response
      summary: Update a trigger
      tags:
      - Triggers
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/triggers/backfill/delete:
    post:
      operationId: deleteBackfill_1
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Trigger'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trigger'
          description: deleteBackfill_1 200 response
      summary: Delete a backfill
      tags:
      - Triggers
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/triggers/backfill/delete/by-query:
    post:
      operationId: deleteBackfillByQuery_1
      parameters:
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A namespace filter prefix
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: deleteBackfillByQuery_1 200 response
      summary: Delete backfill for given triggers
      tags:
      - Triggers
      x-accepts:
      - application/json
  /api/v1/{tenant}/triggers/backfill/delete/by-triggers:
    post:
      operationId: deleteBackfillByIds_1
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Trigger'
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: deleteBackfillByIds_1 200 response
      summary: Delete backfill for given triggers
      tags:
      - Triggers
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/triggers/backfill/pause:
    put:
      operationId: pauseBackfill_1
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Trigger'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trigger'
          description: pauseBackfill_1 200 response
      summary: Pause a backfill
      tags:
      - Triggers
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/triggers/backfill/pause/by-query:
    post:
      operationId: pauseBackfillByQuery_1
      parameters:
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A namespace filter prefix
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: pauseBackfillByQuery_1 200 response
      summary: Pause backfill for given triggers
      tags:
      - Triggers
      x-accepts:
      - application/json
  /api/v1/{tenant}/triggers/backfill/pause/by-triggers:
    post:
      operationId: pauseBackfillByIds_1
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Trigger'
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: pauseBackfillByIds_1 200 response
      summary: Pause backfill for given triggers
      tags:
      - Triggers
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/triggers/backfill/unpause:
    put:
      operationId: unpauseBackfill_1
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Trigger'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trigger'
          description: unpauseBackfill_1 200 response
      summary: Unpause a backfill
      tags:
      - Triggers
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/triggers/backfill/unpause/by-query:
    post:
      operationId: unpauseBackfillByQuery_1
      parameters:
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A namespace filter prefix
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: unpauseBackfillByQuery_1 200 response
      summary: Unpause backfill for given triggers
      tags:
      - Triggers
      x-accepts:
      - application/json
  /api/v1/{tenant}/triggers/backfill/unpause/by-triggers:
    post:
      operationId: unpauseBackfillByIds_1
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Trigger'
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: unpauseBackfillByIds_1 200 response
      summary: Unpause backfill for given triggers
      tags:
      - Triggers
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/triggers/search:
    get:
      operationId: search_9
      parameters:
      - description: The current page
        explode: true
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: The current page size
        explode: true
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: The sort of current page
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A namespace filter prefix
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The identifier of the worker currently evaluating the trigger
        explode: true
        in: query
        name: workerId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The flow identifier
        explode: true
        in: query
        name: flowId
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResults_TriggerController.Triggers_'
          description: search_9 200 response
      summary: Search for triggers
      tags:
      - Triggers
      x-accepts:
      - application/json
  /api/v1/{tenant}/triggers/set-disabled/by-query:
    post:
      operationId: setDisabledByQuery_1
      parameters:
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A namespace filter prefix
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The disabled state
        explode: true
        in: query
        name: disabled
        required: true
        schema:
          default: true
          type: boolean
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: setDisabledByQuery_1 200 response
      summary: Delete backfill for given triggers
      tags:
      - Triggers
      x-accepts:
      - application/json
  /api/v1/{tenant}/triggers/set-disabled/by-triggers:
    post:
      operationId: setDisabledByIds_1
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TriggerController.SetDisabledRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: setDisabledByIds_1 200 response
      summary: Delete backfill for given triggers
      tags:
      - Triggers
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/triggers/unlock/by-query:
    post:
      operationId: unlockByQuery_1
      parameters:
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A namespace filter prefix
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: unlockByQuery_1 200 response
      summary: Unlock triggers by query parameters
      tags:
      - Triggers
      x-accepts:
      - application/json
  /api/v1/{tenant}/triggers/unlock/by-triggers:
    post:
      operationId: unlockByIds_1
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Trigger'
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: unlockByIds_1 200 response
      summary: Unlock given triggers
      tags:
      - Triggers
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/triggers/{namespace}/{flowId}:
    get:
      operationId: find_51
      parameters:
      - description: The current page
        explode: true
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: The current page size
        explode: true
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: The sort of current page
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          nullable: true
          type: string
        style: simple
      - description: The flow id
        explode: false
        in: path
        name: flowId
        required: true
        schema:
          nullable: true
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResults_Trigger_'
          description: find_51 200 response
      summary: Get all triggers for a flow
      tags:
      - Triggers
      x-accepts:
      - application/json
  /api/v1/{tenant}/triggers/{namespace}/{flowId}/{triggerId}/restart:
    post:
      operationId: restart_3
      parameters:
      - description: The namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The flow id
        explode: false
        in: path
        name: flowId
        required: true
        schema:
          type: string
        style: simple
      - description: The trigger id
        explode: false
        in: path
        name: triggerId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: restart_3 200 response
      summary: Restart a trigger
      tags:
      - Triggers
      x-accepts:
      - application/json
  /api/v1/{tenant}/triggers/{namespace}/{flowId}/{triggerId}/unlock:
    post:
      operationId: unlock_1
      parameters:
      - description: The namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: The flow id
        explode: false
        in: path
        name: flowId
        required: true
        schema:
          type: string
        style: simple
      - description: The trigger id
        explode: false
        in: path
        name: triggerId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trigger'
          description: unlock_1 200 response
      summary: Unlock a trigger
      tags:
      - Triggers
      x-accepts:
      - application/json
  /api/v1/{tenant}/usages:
    get:
      operationId: tenantUsage_1
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tenantUsage_1_200_response'
              example: null
          description: tenantUsage_1 200 response
      summary: Get instance usage information for the current tenant
      tags:
      - Misc
      x-accepts:
      - application/json
  /api/v1/{tenant}/usages/all:
    get:
      operationId: usages_1
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usage'
          description: usages_1 200 response
      summary: Get instance usage information
      tags:
      - Misc
      x-accepts:
      - application/json
  /api/v1/{tenant}/users:
    post:
      operationId: create_50
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiUser'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUser'
          description: create_50 200 response
      summary: Create a standard user
      tags:
      - Users
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/users/autocomplete:
    post:
      operationId: autocomplete_23
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AbstractUserController.UserApiAutocomplete'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiUser'
                type: array
          description: autocomplete_23 200 response
      summary: List users for autocomplete
      tags:
      - Users
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/users/search:
    get:
      operationId: find_52
      parameters:
      - description: A string filter
        explode: true
        in: query
        name: q
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The current page
        explode: true
        in: query
        name: page
        required: true
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: The current page size
        explode: true
        in: query
        name: size
        required: true
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      - description: The sort of current page
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: The type of user
        explode: true
        in: query
        name: type
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/UserType'
          nullable: true
        style: form
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResults_ApiUser_'
          description: find_52 200 response
      summary: Search for users
      tags:
      - Users
      x-accepts:
      - application/json
  /api/v1/{tenant}/users/service-accounts:
    post:
      operationId: createServiceAccount_5
      parameters:
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiServiceAccount'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServiceAccount'
          description: createServiceAccount_5 200 response
      summary: Create a user service account
      tags:
      - Users
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/users/service-accounts/{id}:
    put:
      operationId: updateServiceAccount_5
      parameters:
      - description: The user id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiServiceAccount'
        required: true
      responses:
        "404":
          description: On user not found
      summary: Update a user service account
      tags:
      - Users
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/users/{id}:
    delete:
      operationId: delete_56
      parameters:
      - description: The user id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: On success
        "404":
          description: On user not found
      summary: Delete a user
      tags:
      - Users
      x-accepts:
      - application/json
    get:
      operationId: index_41
      parameters:
      - description: The user id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "404":
          description: On user not found
      summary: Get a user
      tags:
      - Users
      x-accepts:
      - application/json
    put:
      operationId: update_36
      parameters:
      - description: The user id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiUser'
        required: true
      responses:
        "404":
          description: On user not found
      summary: Update a standard user
      tags:
      - Users
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/users/{id}/api-tokens:
    get:
      operationId: listApiTokens_7
      parameters:
      - description: The user id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: listApiTokens_7 200 response
      summary: List all API Tokens for specific user
      tags:
      - Users
      x-accepts:
      - application/json
    post:
      operationId: createApiTokensForUser_5
      parameters:
      - description: The user id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateApiTokenRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: createApiTokensForUser_5 200 response
      summary: Create new API Token for a specific user
      tags:
      - Users
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/users/{id}/api-tokens/{tokenId}:
    delete:
      operationId: deleteApiToken_7
      parameters:
      - description: The user id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The token id
        explode: false
        in: path
        name: tokenId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: deleteApiToken_7 200 response
      summary: Delete an API Token for specific user and token id
      tags:
      - Users
      x-accepts:
      - application/json
  /api/v1/{tenant}/users/{id}/auths/{uid}:
    delete:
      operationId: deleteAuth_5
      parameters:
      - description: The user id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The auth id
        explode: false
        in: path
        name: uid
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "404":
          description: On user not found
      summary: Delete an Auth for a user
      tags:
      - Users
      x-accepts:
      - application/json
  /api/v1/{tenant}/users/{id}/password:
    put:
      operationId: index_42
      parameters:
      - description: The user id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AbstractUserController.PasswordRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUser'
          description: index_42 200 response
      summary: Create a basic auth password for a standard user
      tags:
      - Users
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/{tenant}/users/{id}/refresh-token:
    delete:
      operationId: deleteRefreshToken_5
      parameters:
      - description: The user id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUser'
          description: deleteRefreshToken_5 200 response
      summary: Delete a user refresh token
      tags:
      - Users
      x-accepts:
      - application/json
components:
  schemas:
    AbstractBindingController.BindingDetail:
      example:
        role:
          isDefault: true
          deleted: true
          permissions:
            NAMESPACE:
              last: null
              first: null
              empty: true
            APPEXECUTION:
              last: null
              first: null
              empty: true
            APP:
              last: null
              first: null
              empty: true
            BLUEPRINT:
              last: null
              first: null
              empty: true
            EXECUTION:
              last: null
              first: null
              empty: true
            APITOKEN:
              last: null
              first: null
              empty: true
            USER:
              last: null
              first: null
              empty: true
            TENANT:
              last: null
              first: null
              empty: true
            FLOW:
              last: null
              first: null
              empty: true
            ROLE:
              last: null
              first: null
              empty: true
            GROUP:
              last: null
              first: null
              empty: true
            DASHBOARD:
              last: null
              first: null
              empty: true
            ME:
              last: null
              first: null
              empty: true
            IMPERSONATE:
              last: null
              first: null
              empty: true
            TEMPLATE:
              last: null
              first: null
              empty: true
            AUDITLOG:
              last: null
              first: null
              empty: true
            SETTING:
              last: null
              first: null
              empty: true
            INFRASTRUCTURE:
              last: null
              first: null
              empty: true
            KVSTORE:
              last: null
              first: null
              empty: true
            BINDING:
              last: null
              first: null
              empty: true
            SECRET:
              last: null
              first: null
              empty: true
          name: name
          description: description
          id: id
          isManaged: true
        binding:
          deleted: true
          namespaceId: namespaceId
          roleId: roleId
          externalId: externalId
          id: id
          type: USER
        user:
          firstName: firstName
          lastName: lastName
          auths:
          - uid: uid
            name: name
            type: type
          - uid: uid
            name: name
            type: type
          groups:
          - "{}"
          - "{}"
          description: description
          groupList:
          - groupId: groupId
            tenantId: tenantId
            membership: OWNER
          - groupId: groupId
            tenantId: tenantId
            membership: OWNER
          id: id
          type: STANDARD
          email: email
          providers:
          - securityIntegrationId: securityIntegrationId
            tenantId: tenantId
            externalId: externalId
            attributes:
              key: ""
            securityIntegrationName: securityIntegrationName
          - securityIntegrationId: securityIntegrationId
            tenantId: tenantId
            externalId: externalId
            attributes:
              key: ""
            securityIntegrationName: securityIntegrationName
          username: username
        group:
          deleted: true
          provider:
            securityIntegrationId: securityIntegrationId
            externalId: externalId
            attributes:
              key: ""
            securityIntegrationName: securityIntegrationName
          name: name
          description: description
          id: id
      properties:
        binding:
          $ref: '#/components/schemas/Binding'
        role:
          $ref: '#/components/schemas/Role'
        user:
          $ref: '#/components/schemas/ApiUser'
        group:
          $ref: '#/components/schemas/Group'
      required:
      - binding
      - group
      - role
      - user
      type: object
    AbstractFlow:
      properties:
        id:
          maxLength: 100
          minLength: 1
          pattern: "^[a-zA-Z0-9][a-zA-Z0-9._-]*"
          type: string
        namespace:
          maxLength: 150
          minLength: 1
          pattern: "^[a-z0-9][a-z0-9._-]*"
          type: string
        revision:
          format: int32
          minimum: 1
          type: integer
        inputs:
          items:
            $ref: '#/components/schemas/Input_Object_'
          type: array
        disabled:
          type: boolean
        deleted:
          type: boolean
      required:
      - deleted
      - disabled
      - id
      - namespace
      type: object
    AbstractGraph:
      example:
        uid: uid
        type: type
        error: true
      properties:
        uid:
          type: string
        type:
          type: string
        error:
          type: boolean
      type: object
    AbstractGroupController.GroupWithMembers:
      allOf:
      - $ref: '#/components/schemas/Group'
      - properties:
          deleted:
            type: boolean
          membersId:
            items:
              type: string
            type: array
      required:
      - deleted
      type: object
    AbstractMetricEntry_Object_:
      example:
        name: name
        type: type
        value: ""
        tags:
          key: tags
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        type:
          type: string
        value: {}
        name:
          type: string
        tags:
          additionalProperties:
            type: string
          type: object
        timestamp:
          format: date-time
          type: string
      required:
      - name
      type: object
    AbstractRetry:
      type: object
    AbstractTrigger:
      example:
        minLogLevel: ""
        logLevel: null
        stopAfter:
        - CREATED
        - CREATED
        description: description
        disabled: true
        id: id
        workerGroup:
          fallback: FAIL
          key: key
        type: type
        conditions:
        - type: type
        - type: type
        logToFile: true
        labels:
          last: ""
          first: ""
          empty: true
      properties:
        minLogLevel:
          allOf:
          - $ref: '#/components/schemas/Level'
          deprecated: true
        id:
          minLength: 1
          pattern: "^[a-zA-Z0-9][a-zA-Z0-9_-]*"
          title: A unique ID for the whole flow.
          type: string
        type:
          minLength: 1
          pattern: "\\p{javaJavaIdentifierStart}\\p{javaJavaIdentifierPart}*(\\.\\\
            p{javaJavaIdentifierStart}\\p{javaJavaIdentifierPart}*)*"
          title: The class name for this current trigger.
          type: string
        description:
          type: string
        conditions:
          items:
            $ref: '#/components/schemas/Condition'
          title: List of conditions in order to limit the flow trigger.
          type: array
        disabled:
          type: boolean
        workerGroup:
          $ref: '#/components/schemas/WorkerGroup'
        logLevel:
          $ref: '#/components/schemas/Level'
        labels:
          $ref: '#/components/schemas/The_labels_to_pass_to_the_execution_created_'
        stopAfter:
          items:
            $ref: '#/components/schemas/State.Type'
          title: List of execution states after which a trigger should be stopped
            (a.k.a. disabled).
          type: array
        logToFile:
          type: boolean
      required:
      - disabled
      - id
      - type
      type: object
    AbstractTriggerForExecution:
      example:
        id: id
        type: type
      properties:
        id:
          minLength: 1
          pattern: "^[a-zA-Z0-9][a-zA-Z0-9_-]*"
          title: A unique ID for the whole flow.
          type: string
        type:
          minLength: 1
          pattern: "\\p{javaJavaIdentifierStart}\\p{javaJavaIdentifierPart}*(\\.\\\
            p{javaJavaIdentifierStart}\\p{javaJavaIdentifierPart}*)*"
          title: The class name for this current trigger.
          type: string
      required:
      - id
      - type
      type: object
    AbstractUser:
      properties:
        type:
          $ref: '#/components/schemas/UserType'
        groupList:
          items:
            $ref: '#/components/schemas/AbstractUser.GroupIdentifier'
          type: array
        groups:
          items:
            type: object
          type: array
        id:
          type: string
        username:
          type: string
        description:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          pattern: "^$|^[a-zA-Z0-9_!#$%&’*+/=?`{|}~^.-]+@[a-zA-Z0-9.-]+$"
          type: string
        providers:
          items:
            $ref: '#/components/schemas/AbstractUser.TenantIdentityProvider'
          type: array
      required:
      - email
      - type
      - username
      type: object
    AbstractUser.GroupIdentifier:
      example:
        groupId: groupId
        tenantId: tenantId
        membership: OWNER
      properties:
        tenantId:
          nullable: true
          type: string
        groupId:
          type: string
        membership:
          $ref: '#/components/schemas/AbstractUser.GroupIdentifier.Membership'
      required:
      - groupId
      - membership
      - tenantId
      type: object
    AbstractUser.GroupIdentifier.Membership:
      enum:
      - OWNER
      - MEMBER
      type: string
    AbstractUser.TenantIdentityProvider:
      allOf:
      - $ref: '#/components/schemas/IdentityProvider'
      - properties:
          tenantId:
            nullable: true
            type: string
      example:
        securityIntegrationId: securityIntegrationId
        tenantId: tenantId
        externalId: externalId
        attributes:
          key: ""
        securityIntegrationName: securityIntegrationName
      type: object
    AbstractUserController.PasswordRequest:
      properties:
        password:
          type: string
      required:
      - password
      type: object
    AbstractUserController.UserApiAutocomplete:
      allOf:
      - $ref: '#/components/schemas/ApiAutocomplete'
      - properties:
          username:
            nullable: true
            type: string
      type: object
    AclService.NamespaceRole:
      example:
        role:
          isDefault: true
          deleted: true
          permissions:
            NAMESPACE:
              last: null
              first: null
              empty: true
            APPEXECUTION:
              last: null
              first: null
              empty: true
            APP:
              last: null
              first: null
              empty: true
            BLUEPRINT:
              last: null
              first: null
              empty: true
            EXECUTION:
              last: null
              first: null
              empty: true
            APITOKEN:
              last: null
              first: null
              empty: true
            USER:
              last: null
              first: null
              empty: true
            TENANT:
              last: null
              first: null
              empty: true
            FLOW:
              last: null
              first: null
              empty: true
            ROLE:
              last: null
              first: null
              empty: true
            GROUP:
              last: null
              first: null
              empty: true
            DASHBOARD:
              last: null
              first: null
              empty: true
            ME:
              last: null
              first: null
              empty: true
            IMPERSONATE:
              last: null
              first: null
              empty: true
            TEMPLATE:
              last: null
              first: null
              empty: true
            AUDITLOG:
              last: null
              first: null
              empty: true
            SETTING:
              last: null
              first: null
              empty: true
            INFRASTRUCTURE:
              last: null
              first: null
              empty: true
            KVSTORE:
              last: null
              first: null
              empty: true
            BINDING:
              last: null
              first: null
              empty: true
            SECRET:
              last: null
              first: null
              empty: true
          name: name
          description: description
          id: id
          isManaged: true
        namespaceId: namespaceId
      properties:
        role:
          $ref: '#/components/schemas/Role'
        namespaceId:
          type: string
      required:
      - namespaceId
      - role
      type: object
    Action:
      enum:
      - READ
      - CREATE
      - UPDATE
      - DELETE
      type: string
    ApiAuth:
      example:
        uid: uid
        name: name
        type: type
      properties:
        uid:
          type: string
        type:
          type: string
        name:
          type: string
      required:
      - name
      - type
      - uid
      type: object
    ApiAutocomplete:
      example:
        q: q
        ids:
        - ids
        - ids
      properties:
        q:
          nullable: true
          type: string
        ids:
          items:
            type: string
          nullable: true
          type: array
      type: object
    ApiIds:
      example:
        ids:
        - ids
        - ids
      properties:
        ids:
          items:
            type: string
          type: array
      required:
      - ids
      type: object
    ApiSecretMeta:
      example:
        description: description
        key: key
        tags:
        - value: value
          key: key
        - value: value
          key: key
      properties:
        key:
          type: string
        description:
          type: string
        tags:
          items:
            $ref: '#/components/schemas/ApiSecretTag'
          type: array
      required:
      - description
      - key
      - tags
      type: object
    ApiSecretTag:
      example:
        value: value
        key: key
      properties:
        key:
          type: string
        value:
          type: string
      required:
      - key
      - value
      type: object
    ApiSecretValue:
      example:
        description: description
        value: value
        key: key
        tags:
        - value: value
          key: key
        - value: value
          key: key
      properties:
        tags:
          items:
            $ref: '#/components/schemas/ApiSecretTag'
          type: array
        key:
          minLength: 1
          type: string
        value:
          minLength: 1
          type: string
        description:
          type: string
      required:
      - description
      - key
      - tags
      - value
      type: object
    ApiServiceAccount:
      description: A User Service Account.
      example:
        description: description
        groupList:
        - groupId: groupId
          tenantId: tenantId
          membership: OWNER
        - groupId: groupId
          tenantId: tenantId
          membership: OWNER
        id: id
        username: username
      properties:
        id:
          description: the user's ID.
          type: string
        username:
          description: the user's name.
          pattern: "^(?=.{1,63}$)[a-z0-9]+(?:-[a-z0-9]+)*$"
          type: string
        description:
          description: the user's description.
          type: string
        groupList:
          items:
            $ref: '#/components/schemas/AbstractUser.GroupIdentifier'
          type: array
      required:
      - description
      - groupList
      - id
      - username
      type: object
    ApiTenant:
      allOf:
      - $ref: '#/components/schemas/Tenant'
      - properties:
          deleted:
            type: boolean
          logo:
            type: string
      example:
        deleted: true
        storageConfiguration:
          key: ""
        secretType: secretType
        secretConfiguration:
          key: ""
        name: name
        storageType: storageType
        logo: logo
        id: id
        workerGroup:
          fallback: FAIL
          key: key
      required:
      - deleted
      - logo
      type: object
    ApiUser:
      allOf:
      - $ref: '#/components/schemas/AbstractUser'
      - properties:
          auths:
            items:
              $ref: '#/components/schemas/ApiAuth'
            type: array
      example:
        firstName: firstName
        lastName: lastName
        auths:
        - uid: uid
          name: name
          type: type
        - uid: uid
          name: name
          type: type
        groups:
        - "{}"
        - "{}"
        description: description
        groupList:
        - groupId: groupId
          tenantId: tenantId
          membership: OWNER
        - groupId: groupId
          tenantId: tenantId
          membership: OWNER
        id: id
        type: STANDARD
        email: email
        providers:
        - securityIntegrationId: securityIntegrationId
          tenantId: tenantId
          externalId: externalId
          attributes:
            key: ""
          securityIntegrationName: securityIntegrationName
        - securityIntegrationId: securityIntegrationId
          tenantId: tenantId
          externalId: externalId
          attributes:
            key: ""
          securityIntegrationName: securityIntegrationName
        username: username
      type: object
    AppResponse:
      example:
        layout:
          blocks:
          - null
          - null
        dispatch: dispatch
        stream: stream
      properties:
        dispatch:
          type: string
        stream:
          type: string
        layout:
          $ref: '#/components/schemas/AppResponse.UILayout'
      required:
      - dispatch
      - layout
      - stream
      type: object
    AppResponse.UIBlock:
      type: object
    AppResponse.UILayout:
      example:
        blocks:
        - null
        - null
      properties:
        blocks:
          items:
            $ref: '#/components/schemas/AppResponse.UIBlock'
          type: array
      required:
      - blocks
      type: object
    AppsController.ApiApp:
      example:
        uid: uid
        name: name
        namespace: namespace
        id: id
        type: type
        enabled: true
        tags:
        - tags
        - tags
      properties:
        uid:
          type: string
        id:
          type: string
        name:
          type: string
        type:
          type: string
        namespace:
          type: string
        tags:
          items:
            type: string
          type: array
        enabled:
          type: boolean
      required:
      - enabled
      - id
      - name
      - namespace
      - tags
      - type
      - uid
      type: object
    AppsController.ApiAppSource:
      example:
        uid: uid
        name: name
        namespace: namespace
        disabled: true
        source: source
        tags:
        - tags
        - tags
      properties:
        uid:
          type: string
        name:
          type: string
        namespace:
          type: string
        tags:
          items:
            type: string
          type: array
        disabled:
          type: boolean
        source:
          type: string
      required:
      - disabled
      - name
      - namespace
      - source
      - tags
      - uid
      type: object
    AppsController.ApiAppTags:
      example:
        tags:
        - tags
        - tags
      properties:
        tags:
          items:
            type: string
          type: array
      required:
      - tags
      type: object
    AttributeReference:
      example:
        urn: urn
        attributeBase: attributeBase
        subAttributeName: subAttributeName
        attributeName: attributeName
        fullyQualifiedAttributeName: fullyQualifiedAttributeName
        fullAttributeName: fullAttributeName
      properties:
        fullAttributeName:
          type: string
        fullyQualifiedAttributeName:
          type: string
        attributeBase:
          type: string
        urn:
          type: string
        attributeName:
          type: string
        subAttributeName:
          type: string
      type: object
    AuditLog:
      example:
        date: 2000-01-23T04:56:07.000+00:00
        deleted: true
        appliedPatch:
        - "{}"
        - "{}"
        revertPatch:
        - "{}"
        - "{}"
        ipAddress: ipAddress
        id: id
        detail:
          permission: FLOW
          cls: cls
          id: id
          type: type
        type: READ
        impersonatedBy: impersonatedBy
        userId: userId
      properties:
        id:
          type: string
        type:
          $ref: '#/components/schemas/CrudEventType'
        detail:
          $ref: '#/components/schemas/AuditLogDetail'
        date:
          format: date-time
          type: string
        userId:
          type: string
        ipAddress:
          type: string
        impersonatedBy:
          type: string
        deleted:
          type: boolean
        appliedPatch:
          items:
            type: object
          type: array
        revertPatch:
          items:
            type: object
          type: array
      required:
      - appliedPatch
      - date
      - deleted
      - detail
      - id
      - impersonatedBy
      - ipAddress
      - revertPatch
      - type
      - userId
      type: object
    AuditLogController.AuditLogDiff:
      example:
        before: before
        after: after
      properties:
        before:
          type: string
        after:
          type: string
      required:
      - after
      - before
      type: object
    AuditLogController.AuditLogWithUser:
      example:
        auditLog:
          date: 2000-01-23T04:56:07.000+00:00
          deleted: true
          appliedPatch:
          - "{}"
          - "{}"
          revertPatch:
          - "{}"
          - "{}"
          ipAddress: ipAddress
          id: id
          detail:
            permission: FLOW
            cls: cls
            id: id
            type: type
          type: READ
          impersonatedBy: impersonatedBy
          userId: userId
        user:
          firstName: firstName
          lastName: lastName
          auths:
          - uid: uid
            name: name
            type: type
          - uid: uid
            name: name
            type: type
          groups:
          - "{}"
          - "{}"
          description: description
          groupList:
          - groupId: groupId
            tenantId: tenantId
            membership: OWNER
          - groupId: groupId
            tenantId: tenantId
            membership: OWNER
          id: id
          type: STANDARD
          email: email
          providers:
          - securityIntegrationId: securityIntegrationId
            tenantId: tenantId
            externalId: externalId
            attributes:
              key: ""
            securityIntegrationName: securityIntegrationName
          - securityIntegrationId: securityIntegrationId
            tenantId: tenantId
            externalId: externalId
            attributes:
              key: ""
            securityIntegrationName: securityIntegrationName
          username: username
      properties:
        auditLog:
          $ref: '#/components/schemas/AuditLog'
        user:
          $ref: '#/components/schemas/ApiUser'
      required:
      - auditLog
      - user
      type: object
    AuditLogController.FindRequest:
      properties:
        permission:
          $ref: '#/components/schemas/Permission'
        type:
          allOf:
          - $ref: '#/components/schemas/CrudEventType'
          nullable: true
        detail:
          additionalProperties: true
          type: object
      required:
      - detail
      - permission
      - type
      type: object
    AuditLogDetail:
      example:
        permission: FLOW
        cls: cls
        id: id
        type: type
      properties:
        type:
          type: string
        cls:
          type: string
        permission:
          $ref: '#/components/schemas/Permission'
        id:
          type: string
      required:
      - cls
      - permission
      - type
      type: object
    AuthController.Auth:
      example:
        loginPassword: true
        oauths:
        - oauths
        - oauths
        mailsEnabled: true
      properties:
        loginPassword:
          type: boolean
        mailsEnabled:
          type: boolean
        oauths:
          items:
            type: string
          type: array
      type: object
    AuthController.InvitationUserRequest:
      properties:
        firstName:
          type: string
        lastName:
          type: string
        password:
          type: string
      required:
      - firstName
      - lastName
      - password
      type: object
    AuthController.ResetPasswordRequest:
      properties:
        token:
          type: string
        password:
          type: string
      required:
      - password
      - token
      type: object
    Backfill:
      properties:
        start:
          format: date-time
          title: The start date.
          type: string
        end:
          format: date-time
          title: The end date.
          type: string
        currentDate:
          format: date-time
          title: The current date of the backfill being done.
          type: string
        paused:
          title: Whether the backfill is paused.
          type: boolean
        inputs:
          additionalProperties: true
          title: The inputs to pass to the backfilled executions.
          type: object
        labels:
          items:
            $ref: '#/components/schemas/Label'
          title: The labels to pass to the backfilled executions.
          type: array
        previousNextExecutionDate:
          format: date-time
          title: The nextExecutionDate before the backfill was created.
          type: string
      required:
      - start
      title: A backfill configuration.
      type: object
    Banner:
      example:
        endDate: 2000-01-23T04:56:07.000+00:00
        tenantId: tenantId
        active: true
        id: id
        message: message
        type: INFO
        startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          type: string
        message:
          type: string
        type:
          $ref: '#/components/schemas/Banner.Type'
        startDate:
          format: date-time
          nullable: true
          type: string
        endDate:
          format: date-time
          nullable: true
          type: string
        tenantId:
          nullable: true
          type: string
        active:
          type: boolean
      type: object
    Banner.Type:
      enum:
      - INFO
      - WARNING
      - ERROR
      type: string
    BaseResource_PatchRequest_:
      properties:
        schemas:
          items:
            type: string
          minItems: 1
          type: array
      type: object
    BaseResource_ScimResource_:
      properties:
        schemas:
          items:
            type: string
          minItems: 1
          type: array
      type: object
    BaseResource_SearchRequest_:
      properties:
        schemas:
          items:
            type: string
          minItems: 1
          type: array
      type: object
    Binding:
      example:
        deleted: true
        namespaceId: namespaceId
        roleId: roleId
        externalId: externalId
        id: id
        type: USER
      properties:
        id:
          type: string
        type:
          $ref: '#/components/schemas/Binding.Type'
        externalId:
          type: string
        roleId:
          type: string
        namespaceId:
          type: string
        deleted:
          type: boolean
      required:
      - deleted
      - externalId
      - id
      - namespaceId
      - roleId
      - type
      type: object
    Binding.Type:
      enum:
      - USER
      - GROUP
      type: string
    Blueprint:
      example:
        includedTasks:
        - includedTasks
        - includedTasks
        deleted: true
        publishedAt: 2000-01-23T04:56:07.000+00:00
        description: description
        id: id
        title: title
        tags:
        - tags
        - tags
      properties:
        id:
          type: string
        title:
          maxLength: 150
          minLength: 1
          type: string
        description:
          type: string
        tags:
          items:
            type: string
          type: array
        includedTasks:
          items:
            type: string
          type: array
        publishedAt:
          format: date-time
          type: string
        deleted:
          type: boolean
      required:
      - deleted
      - description
      - id
      - includedTasks
      - publishedAt
      - tags
      - title
      type: object
    BlueprintController.BlueprintItem:
      example:
        includedTasks:
        - includedTasks
        - includedTasks
        publishedAt: 2000-01-23T04:56:07.000+00:00
        description: description
        id: id
        title: title
        tags:
        - tags
        - tags
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        includedTasks:
          items:
            type: string
          type: array
        tags:
          items:
            type: string
          type: array
        publishedAt:
          format: date-time
          type: string
      required:
      - description
      - id
      - includedTasks
      - publishedAt
      - tags
      - title
      type: object
    BlueprintController.BlueprintItemWithFlow:
      allOf:
      - $ref: '#/components/schemas/BlueprintController.BlueprintItem'
      - properties:
          flow:
            type: string
      example:
        includedTasks:
        - includedTasks
        - includedTasks
        publishedAt: 2000-01-23T04:56:07.000+00:00
        description: description
        id: id
        title: title
        flow: flow
        tags:
        - tags
        - tags
      type: object
    BlueprintController.BlueprintTagItem:
      example:
        publishedAt: 2000-01-23T04:56:07.000+00:00
        name: name
        id: id
      properties:
        id:
          type: string
        name:
          type: string
        publishedAt:
          format: date-time
          type: string
      required:
      - id
      - name
      - publishedAt
      type: object
    BlueprintWithFlow:
      allOf:
      - $ref: '#/components/schemas/Blueprint'
      - properties:
          deleted:
            type: boolean
          flow:
            minLength: 1
            type: string
      example:
        includedTasks:
        - includedTasks
        - includedTasks
        deleted: true
        publishedAt: 2000-01-23T04:56:07.000+00:00
        description: description
        id: id
        title: title
        flow: flow
        tags:
        - tags
        - tags
      required:
      - deleted
      - flow
      type: object
    BulkErrorResponse:
      example:
        invalids: ""
        message: message
      properties:
        message:
          type: string
        invalids: {}
      type: object
    BulkResponse:
      example:
        count: 0
      properties:
        count:
          format: int32
          type: integer
      type: object
    Chart_ChartOption_:
      example:
        chartOptions: ""
        id: id
        type: type
      properties:
        id:
          minLength: 1
          pattern: "^[a-zA-Z0-9][a-zA-Z0-9_-]*"
          type: string
        type:
          minLength: 1
          pattern: "\\p{javaJavaIdentifierStart}\\p{javaJavaIdentifierPart}*(\\.\\\
            p{javaJavaIdentifierStart}\\p{javaJavaIdentifierPart}*)*"
          type: string
        chartOptions: {}
      required:
      - id
      - type
      type: object
    ClusterController.ApiActiveService:
      example:
        total: 6
        type: EXECUTOR
      properties:
        type:
          $ref: '#/components/schemas/Service.ServiceType'
        total:
          format: int64
          type: integer
      required:
      - total
      - type
      type: object
    ClusterController.ApiActiveServiceList:
      example:
        total: 0
        services:
        - total: 6
          type: EXECUTOR
        - total: 6
          type: EXECUTOR
      properties:
        total:
          format: int32
          type: integer
        services:
          items:
            $ref: '#/components/schemas/ClusterController.ApiActiveService'
          type: array
      required:
      - services
      - total
      type: object
    ClusterController.ApiCreateOrUpdateWorkerGroupRequest:
      description: ApiCreateWorkerGroupRequest.
      properties:
        key:
          description: The key of the worker group.
          type: string
        description:
          description: The description of the worker group.
          type: string
        allowedTenants:
          items:
            type: string
          type: array
      required:
      - allowedTenants
      - description
      - key
      type: object
    ClusterController.ApiServerInstance:
      example:
        hostname: hostname
        id: id
        type: SERVER
        version: version
      properties:
        id:
          type: string
        type:
          $ref: '#/components/schemas/ServerInstance.Type'
        version:
          type: string
        hostname:
          type: string
      required:
      - hostname
      - id
      - type
      - version
      type: object
    ClusterController.ApiServiceInstance:
      example:
        server:
          hostname: hostname
          id: id
          type: SERVER
          version: version
        createdAt: 2000-01-23T04:56:07.000+00:00
        id: id
        state: CREATED
        type: EXECUTOR
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          type: string
        type:
          $ref: '#/components/schemas/Service.ServiceType'
        state:
          $ref: '#/components/schemas/Service.ServiceState'
        server:
          $ref: '#/components/schemas/ClusterController.ApiServerInstance'
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
      required:
      - createdAt
      - id
      - server
      - state
      - type
      - updatedAt
      type: object
    ClusterController.ApiWorkerGroup:
      description: ApiWorkerGroup.
      example:
        allowedTenants:
        - allowedTenants
        - allowedTenants
        description: description
        id: id
        key: key
      properties:
        id:
          description: The ID of worker group.
          type: string
        key:
          description: The key of the worker group.
          type: string
        description:
          description: The description of the worker group.
          type: string
        allowedTenants:
          items:
            type: string
          type: array
      required:
      - allowedTenants
      - description
      - id
      - key
      type: object
    ClusterController.ApiWorkerGroupDetails:
      description: ApiWorkerGroupDetails.
      example:
        allowedTenants:
        - allowedTenants
        - allowedTenants
        description: description
        id: id
        workers:
        - server:
            hostname: hostname
            id: id
            metrics:
            - baseUnit: baseUnit
              name: name
              description: description
              type: type
              value: ""
              tags:
              - value: value
                key: key
              - value: value
                key: key
            - baseUnit: baseUnit
              name: name
              description: description
              type: type
              value: ""
              tags:
              - value: value
                key: key
              - value: value
                key: key
            type: SERVER
            version: version
            props:
              key: ""
          createdAt: 2000-01-23T04:56:07.000+00:00
          metrics:
          - baseUnit: baseUnit
            name: name
            description: description
            type: type
            value: ""
            tags:
            - value: value
              key: key
            - value: value
              key: key
          - baseUnit: baseUnit
            name: name
            description: description
            type: type
            value: ""
            tags:
            - value: value
              key: key
            - value: value
              key: key
          state: CREATED
          id: id
          type: EXECUTOR
          config:
            terminationGracePeriod: 5m
            workerTaskRestartStrategy: ""
            liveness:
              heartbeatInterval: 3s
              interval: 5s
              initialDelay: 45s
              enabled: true
              timeout: 45s
          events:
          - state: null
            type: type
            value: value
            ts: 2000-01-23T04:56:07.000+00:00
          - state: null
            type: type
            value: value
            ts: 2000-01-23T04:56:07.000+00:00
          seqId: 0
          updatedAt: 2000-01-23T04:56:07.000+00:00
          props:
            key: ""
        - server:
            hostname: hostname
            id: id
            metrics:
            - baseUnit: baseUnit
              name: name
              description: description
              type: type
              value: ""
              tags:
              - value: value
                key: key
              - value: value
                key: key
            - baseUnit: baseUnit
              name: name
              description: description
              type: type
              value: ""
              tags:
              - value: value
                key: key
              - value: value
                key: key
            type: SERVER
            version: version
            props:
              key: ""
          createdAt: 2000-01-23T04:56:07.000+00:00
          metrics:
          - baseUnit: baseUnit
            name: name
            description: description
            type: type
            value: ""
            tags:
            - value: value
              key: key
            - value: value
              key: key
          - baseUnit: baseUnit
            name: name
            description: description
            type: type
            value: ""
            tags:
            - value: value
              key: key
            - value: value
              key: key
          state: CREATED
          id: id
          type: EXECUTOR
          config:
            terminationGracePeriod: 5m
            workerTaskRestartStrategy: ""
            liveness:
              heartbeatInterval: 3s
              interval: 5s
              initialDelay: 45s
              enabled: true
              timeout: 45s
          events:
          - state: null
            type: type
            value: value
            ts: 2000-01-23T04:56:07.000+00:00
          - state: null
            type: type
            value: value
            ts: 2000-01-23T04:56:07.000+00:00
          seqId: 0
          updatedAt: 2000-01-23T04:56:07.000+00:00
          props:
            key: ""
        key: key
      properties:
        id:
          description: The ID of worker group.
          type: string
        key:
          description: The key of the worker group.
          type: string
        description:
          description: The description of the worker group.
          type: string
        allowedTenants:
          items:
            type: string
          type: array
        workers:
          description: The list of workers for the group.
          items:
            $ref: '#/components/schemas/ServiceInstance'
          type: array
      required:
      - allowedTenants
      - description
      - id
      - key
      - workers
      type: object
    ClusterController.ApiWorkerGroupItem:
      description: ApiWorkerGroup.
      example:
        activeWorkers: 0
        description: description
        id: id
        key: key
      properties:
        id:
          description: The ID of worker group.
          type: string
        key:
          description: The key of the worker group.
          type: string
        description:
          description: The description of the worker group.
          type: string
        activeWorkers:
          description: The number of active workers for the group.
          format: int32
          type: integer
      required:
      - activeWorkers
      - description
      - id
      - key
      type: object
    ClusterController.ApiWorkerGroupList:
      description: ApiWorkerGroupList.
      example:
        workerGroups:
        - activeWorkers: 0
          description: description
          id: id
          key: key
        - activeWorkers: 0
          description: description
          id: id
          key: key
      properties:
        workerGroups:
          description: The list of worker groups.
          items:
            $ref: '#/components/schemas/ClusterController.ApiWorkerGroupItem'
          type: array
      required:
      - workerGroups
      type: object
    Collection_Action_:
      properties:
        empty:
          type: boolean
      type: object
    Collection_Object_:
      properties:
        empty:
          type: boolean
      type: object
    Concurrency:
      example:
        limit: 0
        behavior: QUEUE
      properties:
        limit:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        behavior:
          $ref: '#/components/schemas/Concurrency.Behavior'
      required:
      - behavior
      - limit
      type: object
    Concurrency.Behavior:
      enum:
      - QUEUE
      - CANCEL
      - FAIL
      type: string
    Condition:
      example:
        type: type
      properties:
        type:
          pattern: "\\p{javaJavaIdentifierStart}\\p{javaJavaIdentifierPart}*(\\.\\\
            p{javaJavaIdentifierStart}\\p{javaJavaIdentifierPart}*)*"
          type: string
      required:
      - type
      type: object
    ConfigurationUsage:
      example:
        secretType: secretType
        repositoryType: repositoryType
        queueType: queueType
        storageType: storageType
        javaSecurityEnabled: true
      properties:
        repositoryType:
          type: string
        queueType:
          type: string
        storageType:
          type: string
        secretType:
          type: string
        javaSecurityEnabled:
          type: boolean
      type: object
    ConversionService:
      type: object
    ConversionServiceProvider:
      properties:
        conversionService:
          type: object
      required:
      - conversionService
      type: object
    ConvertibleMultiValues_String_:
      allOf:
      - $ref: '#/components/schemas/ConvertibleValues_List_String__'
      - $ref: '#/components/schemas/ConversionServiceProvider'
      - properties:
          empty:
            type: boolean
      type: object
    ConvertibleValues_List_String__:
      allOf:
      - $ref: '#/components/schemas/ConversionServiceProvider'
      - properties:
          empty:
            type: boolean
          conversionService:
            $ref: '#/components/schemas/ConversionService'
      type: object
    CreateApiTokenRequest:
      example:
        maxAge: maxAge
        name: name
        description: description
        extended: true
      properties:
        name:
          pattern: "^(?=.{1,63}$)[a-z0-9]+(?:-[a-z0-9]+)*$"
          type: string
        description:
          type: string
        maxAge:
          type: string
        extended:
          type: boolean
      required:
      - description
      - extended
      - maxAge
      - name
      type: object
    CreateSecurityIntegrationRequest:
      description: Create SecurityIntegration Request
      example:
        name: name
        description: description
        type: SCIM
      properties:
        name:
          description: The name of security integration.
          pattern: "^(?=.{1,63}$)[a-z0-9]+(?:-[a-z0-9]+)*$"
          type: string
        description:
          description: The description of security integration.
          type: string
        type:
          $ref: '#/components/schemas/SecurityIntegration.Type'
      required:
      - description
      - name
      - type
      type: object
    CrudEventType:
      enum:
      - READ
      - CREATE
      - UPDATE
      - DELETE
      - LOGIN
      - LOGOUT
      - IMPERSONATE
      type: string
    DailyExecutionStatistics:
      example:
        duration:
          min: min
          avg: avg
          max: max
          count: 0
          sum: sum
        groupBy: groupBy
        startDate: 2000-01-23T04:56:07.000+00:00
        executionCounts:
          SUCCESS: 7
          RUNNING: 1
          RETRYING: 1
          WARNING: 9
          PAUSED: 5
          CANCELLED: 4
          CREATED: 6
          KILLING: 2
          FAILED: 3
          RETRIED: 1
          QUEUED: 7
          SKIPPED: 1
          RESTARTED: 5
          KILLED: 2
      properties:
        startDate:
          format: date-time
          type: string
        duration:
          $ref: '#/components/schemas/DailyExecutionStatistics.Duration'
        executionCounts:
          $ref: '#/components/schemas/DailyExecutionStatistics_executionCounts'
        groupBy:
          type: string
      required:
      - duration
      - executionCounts
      - groupBy
      - startDate
      type: object
    DailyExecutionStatistics.Duration:
      example:
        min: min
        avg: avg
        max: max
        count: 0
        sum: sum
      properties:
        min:
          type: string
        avg:
          type: string
        max:
          type: string
        sum:
          type: string
        count:
          format: int64
          type: integer
      required:
      - avg
      - count
      - max
      - min
      - sum
      type: object
    Dashboard:
      example:
        sourceCode: sourceCode
        timeWindow:
          default: default
          max: max
        charts:
        - chartOptions: ""
          id: id
          type: type
        - chartOptions: ""
          id: id
          type: type
        description: description
        title: title
      properties:
        title:
          minLength: 1
          type: string
        description:
          type: string
        timeWindow:
          $ref: '#/components/schemas/TimeWindow'
        charts:
          items:
            $ref: '#/components/schemas/Chart_ChartOption_'
          type: array
        sourceCode:
          type: string
      required:
      - title
      type: object
    DependsOn:
      properties:
        inputs:
          items:
            type: string
          nullable: true
          type: array
        condition:
          nullable: true
          type: string
      type: object
    DocumentationWithSchema:
      example:
        schema:
          outputs:
            key: ""
          definitions:
            key: ""
          properties:
            key: ""
        markdown: markdown
      properties:
        markdown:
          type: string
        schema:
          $ref: '#/components/schemas/Schema_1'
      type: object
    Email:
      description: Scim core schema.
      example:
        type: type
        value: value
        primary: true
      properties:
        type:
          type: string
        value:
          type: string
        primary:
          type: boolean
      type: object
    Event_AppResponse_:
      properties:
        data:
          $ref: '#/components/schemas/AppResponse'
        id:
          type: string
        name:
          type: string
        comment:
          type: string
        retry:
          type: string
      type: object
    Event_Execution_:
      properties:
        data:
          $ref: '#/components/schemas/Execution'
        id:
          type: string
        name:
          type: string
        comment:
          type: string
        retry:
          type: string
      type: object
    Event_LogEntry_:
      properties:
        data:
          $ref: '#/components/schemas/LogEntry'
        id:
          type: string
        name:
          type: string
        comment:
          type: string
        retry:
          type: string
      type: object
    ExecutableTask.SubflowId:
      example:
        namespace: namespace
        flowId: flowId
        revision: 6
      properties:
        namespace:
          type: string
        flowId:
          type: string
        revision:
          format: int32
          nullable: true
          type: integer
      required:
      - flowId
      - namespace
      - revision
      type: object
    Execution:
      example:
        outputs:
          key: ""
        variables:
          key: ""
        metadata:
          attemptNumber: 1
          originalCreatedDate: 2000-01-23T04:56:07.000+00:00
        inputs:
          key: ""
        trigger:
          variables:
            key: ""
          logFile: https://openapi-generator.tech
          id: id
          type: type
        taskRunList:
        - outputs:
            key: ""
          parentTaskRunId: parentTaskRunId
          executionId: executionId
          namespace: namespace
          iteration: 6
          dynamic: true
          id: id
          state:
            duration: duration
            current: CREATED
            endDate: 2000-01-23T04:56:07.000+00:00
            histories:
            - date: 2000-01-23T04:56:07.000+00:00
              state: null
            - date: 2000-01-23T04:56:07.000+00:00
              state: null
            startDate: 2000-01-23T04:56:07.000+00:00
          items: items
          flowId: flowId
          value: value
          taskId: taskId
          attempts:
          - logFile: https://openapi-generator.tech
            metrics:
            - name: name
              type: type
              value: ""
              tags:
                key: tags
              timestamp: 2000-01-23T04:56:07.000+00:00
            - name: name
              type: type
              value: ""
              tags:
                key: tags
              timestamp: 2000-01-23T04:56:07.000+00:00
            state:
              duration: duration
              current: CREATED
              endDate: 2000-01-23T04:56:07.000+00:00
              histories:
              - date: 2000-01-23T04:56:07.000+00:00
                state: null
              - date: 2000-01-23T04:56:07.000+00:00
                state: null
              startDate: 2000-01-23T04:56:07.000+00:00
          - logFile: https://openapi-generator.tech
            metrics:
            - name: name
              type: type
              value: ""
              tags:
                key: tags
              timestamp: 2000-01-23T04:56:07.000+00:00
            - name: name
              type: type
              value: ""
              tags:
                key: tags
              timestamp: 2000-01-23T04:56:07.000+00:00
            state:
              duration: duration
              current: CREATED
              endDate: 2000-01-23T04:56:07.000+00:00
              histories:
              - date: 2000-01-23T04:56:07.000+00:00
                state: null
              - date: 2000-01-23T04:56:07.000+00:00
                state: null
              startDate: 2000-01-23T04:56:07.000+00:00
        - outputs:
            key: ""
          parentTaskRunId: parentTaskRunId
          executionId: executionId
          namespace: namespace
          iteration: 6
          dynamic: true
          id: id
          state:
            duration: duration
            current: CREATED
            endDate: 2000-01-23T04:56:07.000+00:00
            histories:
            - date: 2000-01-23T04:56:07.000+00:00
              state: null
            - date: 2000-01-23T04:56:07.000+00:00
              state: null
            startDate: 2000-01-23T04:56:07.000+00:00
          items: items
          flowId: flowId
          value: value
          taskId: taskId
          attempts:
          - logFile: https://openapi-generator.tech
            metrics:
            - name: name
              type: type
              value: ""
              tags:
                key: tags
              timestamp: 2000-01-23T04:56:07.000+00:00
            - name: name
              type: type
              value: ""
              tags:
                key: tags
              timestamp: 2000-01-23T04:56:07.000+00:00
            state:
              duration: duration
              current: CREATED
              endDate: 2000-01-23T04:56:07.000+00:00
              histories:
              - date: 2000-01-23T04:56:07.000+00:00
                state: null
              - date: 2000-01-23T04:56:07.000+00:00
                state: null
              startDate: 2000-01-23T04:56:07.000+00:00
          - logFile: https://openapi-generator.tech
            metrics:
            - name: name
              type: type
              value: ""
              tags:
                key: tags
              timestamp: 2000-01-23T04:56:07.000+00:00
            - name: name
              type: type
              value: ""
              tags:
                key: tags
              timestamp: 2000-01-23T04:56:07.000+00:00
            state:
              duration: duration
              current: CREATED
              endDate: 2000-01-23T04:56:07.000+00:00
              histories:
              - date: 2000-01-23T04:56:07.000+00:00
                state: null
              - date: 2000-01-23T04:56:07.000+00:00
                state: null
              startDate: 2000-01-23T04:56:07.000+00:00
        parentId: parentId
        labels:
        - value: value
          key: key
        - value: value
          key: key
        flowRevision: 0
        deleted: true
        namespace: namespace
        scheduleDate: 2000-01-23T04:56:07.000+00:00
        id: id
        state:
          duration: duration
          current: CREATED
          endDate: 2000-01-23T04:56:07.000+00:00
          histories:
          - date: 2000-01-23T04:56:07.000+00:00
            state: null
          - date: 2000-01-23T04:56:07.000+00:00
            state: null
          startDate: 2000-01-23T04:56:07.000+00:00
        originalId: originalId
        flowId: flowId
      properties:
        id:
          type: string
        namespace:
          type: string
        flowId:
          type: string
        flowRevision:
          format: int32
          type: integer
        taskRunList:
          items:
            $ref: '#/components/schemas/TaskRun'
          type: array
        inputs:
          additionalProperties: true
          type: object
        outputs:
          additionalProperties: true
          type: object
        labels:
          items:
            $ref: '#/components/schemas/Label'
          type: array
        variables:
          additionalProperties: true
          type: object
        state:
          $ref: '#/components/schemas/State'
        parentId:
          type: string
        originalId:
          type: string
        trigger:
          $ref: '#/components/schemas/ExecutionTrigger'
        deleted:
          type: boolean
        metadata:
          $ref: '#/components/schemas/ExecutionMetadata'
        scheduleDate:
          format: date-time
          nullable: true
          type: string
      required:
      - deleted
      - flowId
      - flowRevision
      - id
      - inputs
      - labels
      - metadata
      - namespace
      - originalId
      - outputs
      - parentId
      - scheduleDate
      - state
      - taskRunList
      - trigger
      - variables
      type: object
    ExecutionController.ApiValidateExecutionInputsResponse:
      example:
        inputs:
        - input:
            dependsOn: ""
            defaults: ""
            displayName: displayName
            name: name
            description: description
            id: id
            type: ""
            required: true
          value: ""
          enabled: true
          errors:
          - message: message
          - message: message
        - input:
            dependsOn: ""
            defaults: ""
            displayName: displayName
            name: name
            description: description
            id: id
            type: ""
            required: true
          value: ""
          enabled: true
          errors:
          - message: message
          - message: message
        namespace: namespace
        id: id
      properties:
        id:
          type: string
        namespace:
          type: string
        inputs:
          items:
            $ref: '#/components/schemas/ExecutionController.ApiValidateExecutionInputsResponse.ApiInputAndValue'
          type: array
      required:
      - id
      - inputs
      - namespace
      type: object
    ExecutionController.ApiValidateExecutionInputsResponse.ApiInputAndValue:
      example:
        input:
          dependsOn: ""
          defaults: ""
          displayName: displayName
          name: name
          description: description
          id: id
          type: ""
          required: true
        value: ""
        enabled: true
        errors:
        - message: message
        - message: message
      properties:
        input:
          $ref: '#/components/schemas/Input_Object_'
        value: {}
        enabled:
          type: boolean
        errors:
          items:
            $ref: '#/components/schemas/ExecutionController.ApiValidateExecutionInputsResponse.ApiInputError'
          type: array
      required:
      - enabled
      - errors
      - input
      - value
      type: object
    ExecutionController.ApiValidateExecutionInputsResponse.ApiInputError:
      example:
        message: message
      properties:
        message:
          type: string
      required:
      - message
      type: object
    ExecutionController.EvalResult:
      example:
        result: result
        stackTrace: stackTrace
        error: error
      properties:
        result:
          type: string
        error:
          type: string
        stackTrace:
          type: string
      type: object
    ExecutionController.ExecutionResponse:
      allOf:
      - $ref: '#/components/schemas/Execution'
      - properties:
          deleted:
            type: boolean
          url:
            format: uri
            type: string
      example:
        outputs:
          key: ""
        variables:
          key: ""
        metadata:
          attemptNumber: 1
          originalCreatedDate: 2000-01-23T04:56:07.000+00:00
        inputs:
          key: ""
        trigger:
          variables:
            key: ""
          logFile: https://openapi-generator.tech
          id: id
          type: type
        taskRunList:
        - outputs:
            key: ""
          parentTaskRunId: parentTaskRunId
          executionId: executionId
          namespace: namespace
          iteration: 6
          dynamic: true
          id: id
          state:
            duration: duration
            current: CREATED
            endDate: 2000-01-23T04:56:07.000+00:00
            histories:
            - date: 2000-01-23T04:56:07.000+00:00
              state: null
            - date: 2000-01-23T04:56:07.000+00:00
              state: null
            startDate: 2000-01-23T04:56:07.000+00:00
          items: items
          flowId: flowId
          value: value
          taskId: taskId
          attempts:
          - logFile: https://openapi-generator.tech
            metrics:
            - name: name
              type: type
              value: ""
              tags:
                key: tags
              timestamp: 2000-01-23T04:56:07.000+00:00
            - name: name
              type: type
              value: ""
              tags:
                key: tags
              timestamp: 2000-01-23T04:56:07.000+00:00
            state:
              duration: duration
              current: CREATED
              endDate: 2000-01-23T04:56:07.000+00:00
              histories:
              - date: 2000-01-23T04:56:07.000+00:00
                state: null
              - date: 2000-01-23T04:56:07.000+00:00
                state: null
              startDate: 2000-01-23T04:56:07.000+00:00
          - logFile: https://openapi-generator.tech
            metrics:
            - name: name
              type: type
              value: ""
              tags:
                key: tags
              timestamp: 2000-01-23T04:56:07.000+00:00
            - name: name
              type: type
              value: ""
              tags:
                key: tags
              timestamp: 2000-01-23T04:56:07.000+00:00
            state:
              duration: duration
              current: CREATED
              endDate: 2000-01-23T04:56:07.000+00:00
              histories:
              - date: 2000-01-23T04:56:07.000+00:00
                state: null
              - date: 2000-01-23T04:56:07.000+00:00
                state: null
              startDate: 2000-01-23T04:56:07.000+00:00
        - outputs:
            key: ""
          parentTaskRunId: parentTaskRunId
          executionId: executionId
          namespace: namespace
          iteration: 6
          dynamic: true
          id: id
          state:
            duration: duration
            current: CREATED
            endDate: 2000-01-23T04:56:07.000+00:00
            histories:
            - date: 2000-01-23T04:56:07.000+00:00
              state: null
            - date: 2000-01-23T04:56:07.000+00:00
              state: null
            startDate: 2000-01-23T04:56:07.000+00:00
          items: items
          flowId: flowId
          value: value
          taskId: taskId
          attempts:
          - logFile: https://openapi-generator.tech
            metrics:
            - name: name
              type: type
              value: ""
              tags:
                key: tags
              timestamp: 2000-01-23T04:56:07.000+00:00
            - name: name
              type: type
              value: ""
              tags:
                key: tags
              timestamp: 2000-01-23T04:56:07.000+00:00
            state:
              duration: duration
              current: CREATED
              endDate: 2000-01-23T04:56:07.000+00:00
              histories:
              - date: 2000-01-23T04:56:07.000+00:00
                state: null
              - date: 2000-01-23T04:56:07.000+00:00
                state: null
              startDate: 2000-01-23T04:56:07.000+00:00
          - logFile: https://openapi-generator.tech
            metrics:
            - name: name
              type: type
              value: ""
              tags:
                key: tags
              timestamp: 2000-01-23T04:56:07.000+00:00
            - name: name
              type: type
              value: ""
              tags:
                key: tags
              timestamp: 2000-01-23T04:56:07.000+00:00
            state:
              duration: duration
              current: CREATED
              endDate: 2000-01-23T04:56:07.000+00:00
              histories:
              - date: 2000-01-23T04:56:07.000+00:00
                state: null
              - date: 2000-01-23T04:56:07.000+00:00
                state: null
              startDate: 2000-01-23T04:56:07.000+00:00
        parentId: parentId
        url: https://openapi-generator.tech
        labels:
        - value: value
          key: key
        - value: value
          key: key
        flowRevision: 0
        deleted: true
        namespace: namespace
        scheduleDate: 2000-01-23T04:56:07.000+00:00
        id: id
        state:
          duration: duration
          current: CREATED
          endDate: 2000-01-23T04:56:07.000+00:00
          histories:
          - date: 2000-01-23T04:56:07.000+00:00
            state: null
          - date: 2000-01-23T04:56:07.000+00:00
            state: null
          startDate: 2000-01-23T04:56:07.000+00:00
        originalId: originalId
        flowId: flowId
      required:
      - deleted
      - url
      type: object
    ExecutionController.SetLabelsByIdsRequest:
      properties:
        executionsId:
          items:
            type: string
          type: array
        executionLabels:
          items:
            $ref: '#/components/schemas/Label'
          type: array
      required:
      - executionLabels
      - executionsId
      type: object
    ExecutionController.StateRequest:
      properties:
        taskRunId:
          type: string
        state:
          $ref: '#/components/schemas/State.Type'
      required:
      - state
      - taskRunId
      type: object
    ExecutionCountStatistics:
      properties:
        counts:
          $ref: '#/components/schemas/DailyExecutionStatistics_executionCounts'
        total:
          format: int64
          type: integer
      required:
      - counts
      - total
      type: object
    ExecutionMetadata:
      example:
        attemptNumber: 1
        originalCreatedDate: 2000-01-23T04:56:07.000+00:00
      properties:
        attemptNumber:
          format: int32
          type: integer
        originalCreatedDate:
          format: date-time
          type: string
      required:
      - attemptNumber
      - originalCreatedDate
      type: object
    ExecutionRepositoryInterface.ChildFilter:
      enum:
      - CHILD
      - MAIN
      type: string
    ExecutionRepositoryInterface.FlowFilter:
      properties:
        namespace:
          type: string
        id:
          type: string
      required:
      - id
      - namespace
      type: object
    ExecutionTrigger:
      example:
        variables:
          key: ""
        logFile: https://openapi-generator.tech
        id: id
        type: type
      properties:
        id:
          type: string
        type:
          type: string
        variables:
          additionalProperties: true
          type: object
        logFile:
          format: uri
          type: string
      required:
      - id
      - logFile
      - type
      - variables
      type: object
    ExecutionUsage:
      example:
        dailyTaskRunsCount:
        - duration:
            min: min
            avg: avg
            max: max
            count: 0
            sum: sum
          groupBy: groupBy
          startDate: 2000-01-23T04:56:07.000+00:00
          executionCounts:
            SUCCESS: 7
            RUNNING: 1
            RETRYING: 1
            WARNING: 9
            PAUSED: 5
            CANCELLED: 4
            CREATED: 6
            KILLING: 2
            FAILED: 3
            RETRIED: 1
            QUEUED: 7
            SKIPPED: 1
            RESTARTED: 5
            KILLED: 2
        - duration:
            min: min
            avg: avg
            max: max
            count: 0
            sum: sum
          groupBy: groupBy
          startDate: 2000-01-23T04:56:07.000+00:00
          executionCounts:
            SUCCESS: 7
            RUNNING: 1
            RETRYING: 1
            WARNING: 9
            PAUSED: 5
            CANCELLED: 4
            CREATED: 6
            KILLING: 2
            FAILED: 3
            RETRIED: 1
            QUEUED: 7
            SKIPPED: 1
            RESTARTED: 5
            KILLED: 2
        dailyExecutionsCount:
        - duration:
            min: min
            avg: avg
            max: max
            count: 0
            sum: sum
          groupBy: groupBy
          startDate: 2000-01-23T04:56:07.000+00:00
          executionCounts:
            SUCCESS: 7
            RUNNING: 1
            RETRYING: 1
            WARNING: 9
            PAUSED: 5
            CANCELLED: 4
            CREATED: 6
            KILLING: 2
            FAILED: 3
            RETRIED: 1
            QUEUED: 7
            SKIPPED: 1
            RESTARTED: 5
            KILLED: 2
        - duration:
            min: min
            avg: avg
            max: max
            count: 0
            sum: sum
          groupBy: groupBy
          startDate: 2000-01-23T04:56:07.000+00:00
          executionCounts:
            SUCCESS: 7
            RUNNING: 1
            RETRYING: 1
            WARNING: 9
            PAUSED: 5
            CANCELLED: 4
            CREATED: 6
            KILLING: 2
            FAILED: 3
            RETRIED: 1
            QUEUED: 7
            SKIPPED: 1
            RESTARTED: 5
            KILLED: 2
      properties:
        dailyExecutionsCount:
          items:
            $ref: '#/components/schemas/DailyExecutionStatistics'
          type: array
        dailyTaskRunsCount:
          items:
            $ref: '#/components/schemas/DailyExecutionStatistics'
          type: array
      type: object
    FileAttributes:
      example:
        fileName: fileName
        metadata:
          key: metadata
        lastModifiedTime: 0
        creationTime: 6
        size: 1
        type: File
      properties:
        fileName:
          type: string
        lastModifiedTime:
          format: int64
          type: integer
        creationTime:
          format: int64
          type: integer
        type:
          $ref: '#/components/schemas/FileAttributes.FileType'
        size:
          format: int64
          type: integer
        metadata:
          additionalProperties:
            type: string
          type: object
      type: object
    FileAttributes.FileType:
      enum:
      - File
      - Directory
      type: string
      x-enum-varnames:
      - File
      - Directory
    FileMetas:
      example:
        size: 0
      properties:
        size:
          format: int64
          type: integer
      required:
      - size
      type: object
    Filter:
      example:
        filter: filter
        expression: "{}"
      properties:
        filter:
          type: string
        expression:
          type: object
      required:
      - filter
      type: object
    FilterExpression:
      type: object
    Flow:
      allOf:
      - $ref: '#/components/schemas/AbstractFlow'
      - properties:
          deleted:
            type: boolean
          taskDefaults:
            deprecated: true
            items:
              $ref: '#/components/schemas/PluginDefault'
            type: array
          description:
            type: string
          labels:
            $ref: '#/components/schemas/Flow_allOf_labels'
          variables:
            additionalProperties: true
            type: object
          tasks:
            items:
              $ref: '#/components/schemas/Task'
            minItems: 1
            type: array
          errors:
            items:
              $ref: '#/components/schemas/Task'
            type: array
          listeners:
            deprecated: true
            items:
              $ref: '#/components/schemas/Listener'
            type: array
          triggers:
            items:
              $ref: '#/components/schemas/AbstractTrigger'
            type: array
          pluginDefaults:
            items:
              $ref: '#/components/schemas/PluginDefault'
            type: array
          concurrency:
            $ref: '#/components/schemas/Concurrency'
          outputs:
            description: Output values make information about the execution of your
              Flow available and expose for other Kestra flows to use. Output values
              are similar to return values in programming languages.
            items:
              $ref: '#/components/schemas/Output'
            title: Output values available and exposes to other flows.
            type: array
          retry:
            $ref: '#/components/schemas/AbstractRetry'
          sla:
            items:
              $ref: '#/components/schemas/SLA'
            type: array
      example:
        outputs:
        - displayName: displayName
          description: description
          id: id
          type: STRING
          value: ""
        - displayName: displayName
          description: description
          id: id
          type: STRING
          value: ""
        variables:
          key: ""
        listeners:
        - description: description
          conditions:
          - type: type
          - type: type
          tasks:
          - allowFailure: true
            logLevel: ERROR
            runIf: runIf
            description: description
            disabled: true
            id: id
            workerGroup:
              fallback: FAIL
              key: key
            type: type
            logToFile: true
            retry: "{}"
            timeout:
              expression: expression
            allowWarning: true
          - allowFailure: true
            logLevel: ERROR
            runIf: runIf
            description: description
            disabled: true
            id: id
            workerGroup:
              fallback: FAIL
              key: key
            type: type
            logToFile: true
            retry: "{}"
            timeout:
              expression: expression
            allowWarning: true
        - description: description
          conditions:
          - type: type
          - type: type
          tasks:
          - allowFailure: true
            logLevel: ERROR
            runIf: runIf
            description: description
            disabled: true
            id: id
            workerGroup:
              fallback: FAIL
              key: key
            type: type
            logToFile: true
            retry: "{}"
            timeout:
              expression: expression
            allowWarning: true
          - allowFailure: true
            logLevel: ERROR
            runIf: runIf
            description: description
            disabled: true
            id: id
            workerGroup:
              fallback: FAIL
              key: key
            type: type
            logToFile: true
            retry: "{}"
            timeout:
              expression: expression
            allowWarning: true
        inputs:
        - dependsOn: ""
          defaults: ""
          displayName: displayName
          name: name
          description: description
          id: id
          type: ""
          required: true
        - dependsOn: ""
          defaults: ""
          displayName: displayName
          name: name
          description: description
          id: id
          type: ""
          required: true
        description: description
        sla:
        - id: id
          type: MAX_DURATION
          behavior: FAIL
          labels:
            last: ""
            first: ""
            empty: true
        - id: id
          type: MAX_DURATION
          behavior: FAIL
          labels:
            last: ""
            first: ""
            empty: true
        triggers:
        - minLogLevel: ""
          logLevel: null
          stopAfter:
          - CREATED
          - CREATED
          description: description
          disabled: true
          id: id
          workerGroup:
            fallback: FAIL
            key: key
          type: type
          conditions:
          - type: type
          - type: type
          logToFile: true
          labels:
            last: ""
            first: ""
            empty: true
        - minLogLevel: ""
          logLevel: null
          stopAfter:
          - CREATED
          - CREATED
          description: description
          disabled: true
          id: id
          workerGroup:
            fallback: FAIL
            key: key
          type: type
          conditions:
          - type: type
          - type: type
          logToFile: true
          labels:
            last: ""
            first: ""
            empty: true
        pluginDefaults:
        - forced: true
          values:
            key: ""
          type: type
        - forced: true
          values:
            key: ""
          type: type
        revision: 1
        labels: null
        concurrency:
          limit: 0
          behavior: QUEUE
        deleted: true
        taskDefaults:
        - forced: true
          values:
            key: ""
          type: type
        - forced: true
          values:
            key: ""
          type: type
        namespace: namespace
        disabled: true
        id: id
        tasks:
        - allowFailure: true
          logLevel: ERROR
          runIf: runIf
          description: description
          disabled: true
          id: id
          workerGroup:
            fallback: FAIL
            key: key
          type: type
          logToFile: true
          retry: "{}"
          timeout:
            expression: expression
          allowWarning: true
        - allowFailure: true
          logLevel: ERROR
          runIf: runIf
          description: description
          disabled: true
          id: id
          workerGroup:
            fallback: FAIL
            key: key
          type: type
          logToFile: true
          retry: "{}"
          timeout:
            expression: expression
          allowWarning: true
        errors:
        - allowFailure: true
          logLevel: ERROR
          runIf: runIf
          description: description
          disabled: true
          id: id
          workerGroup:
            fallback: FAIL
            key: key
          type: type
          logToFile: true
          retry: "{}"
          timeout:
            expression: expression
          allowWarning: true
        - allowFailure: true
          logLevel: ERROR
          runIf: runIf
          description: description
          disabled: true
          id: id
          workerGroup:
            fallback: FAIL
            key: key
          type: type
          logToFile: true
          retry: "{}"
          timeout:
            expression: expression
          allowWarning: true
        retry: null
      required:
      - deleted
      - tasks
      type: object
    FlowController.TaskValidationType:
      enum:
      - TASKS
      - TRIGGERS
      type: string
    FlowForExecution:
      allOf:
      - $ref: '#/components/schemas/AbstractFlow'
      - properties:
          deleted:
            type: boolean
          tasks:
            items:
              $ref: '#/components/schemas/TaskForExecution'
            minItems: 1
            type: array
          triggers:
            items:
              $ref: '#/components/schemas/AbstractTriggerForExecution'
            type: array
      example:
        deleted: true
        inputs:
        - dependsOn: ""
          defaults: ""
          displayName: displayName
          name: name
          description: description
          id: id
          type: ""
          required: true
        - dependsOn: ""
          defaults: ""
          displayName: displayName
          name: name
          description: description
          id: id
          type: ""
          required: true
        namespace: namespace
        disabled: true
        id: id
        triggers:
        - id: id
          type: type
        - id: id
          type: type
        tasks:
        - inputs:
          - dependsOn: ""
            defaults: ""
            displayName: displayName
            name: name
            description: description
            id: id
            type: ""
            required: true
          - dependsOn: ""
            defaults: ""
            displayName: displayName
            name: name
            description: description
            id: id
            type: ""
            required: true
          subflowId:
            namespace: namespace
            flowId: flowId
            revision: 6
          id: id
          type: type
          tasks:
          - null
          - null
        - inputs:
          - dependsOn: ""
            defaults: ""
            displayName: displayName
            name: name
            description: description
            id: id
            type: ""
            required: true
          - dependsOn: ""
            defaults: ""
            displayName: displayName
            name: name
            description: description
            id: id
            type: ""
            required: true
          subflowId:
            namespace: namespace
            flowId: flowId
            revision: 6
          id: id
          type: type
          tasks:
          - null
          - null
        revision: 1
      required:
      - deleted
      - tasks
      type: object
    FlowGraph:
      example:
        nodes:
        - uid: uid
          type: type
          error: true
        - uid: uid
          type: type
          error: true
        flowables:
        - flowables
        - flowables
        edges:
        - source: source
          target: target
          relation:
            relationType: SEQUENTIAL
            value: value
        - source: source
          target: target
          relation:
            relationType: SEQUENTIAL
            value: value
        clusters:
        - cluster:
            uid: uid
            type: type
            error: true
          nodes:
          - nodes
          - nodes
          start: start
          end: end
          parents:
          - parents
          - parents
        - cluster:
            uid: uid
            type: type
            error: true
          nodes:
          - nodes
          - nodes
          start: start
          end: end
          parents:
          - parents
          - parents
      properties:
        nodes:
          items:
            $ref: '#/components/schemas/AbstractGraph'
          type: array
        edges:
          items:
            $ref: '#/components/schemas/FlowGraph.Edge'
          type: array
        clusters:
          items:
            $ref: '#/components/schemas/FlowGraph.Cluster'
          type: array
        flowables:
          items:
            type: string
          type: array
      required:
      - clusters
      - edges
      - flowables
      - nodes
      type: object
    FlowGraph.Cluster:
      example:
        cluster:
          uid: uid
          type: type
          error: true
        nodes:
        - nodes
        - nodes
        start: start
        end: end
        parents:
        - parents
        - parents
      properties:
        cluster:
          $ref: '#/components/schemas/AbstractGraph'
        nodes:
          items:
            type: string
          type: array
        parents:
          items:
            type: string
          type: array
        start:
          type: string
        end:
          type: string
      required:
      - cluster
      - end
      - nodes
      - parents
      - start
      type: object
    FlowGraph.Edge:
      example:
        source: source
        target: target
        relation:
          relationType: SEQUENTIAL
          value: value
      properties:
        source:
          type: string
        target:
          type: string
        relation:
          $ref: '#/components/schemas/Relation'
      required:
      - relation
      - source
      - target
      type: object
    FlowNode:
      example:
        uid: uid
        namespace: namespace
        id: id
      properties:
        uid:
          type: string
        namespace:
          type: string
        id:
          type: string
      required:
      - id
      - namespace
      - uid
      type: object
    FlowRelation:
      enum:
      - FLOW_TASK
      - FLOW_TRIGGER
      type: string
    FlowScope:
      enum:
      - USER
      - SYSTEM
      type: string
    FlowTopologyGraph:
      example:
        nodes:
        - uid: uid
          namespace: namespace
          id: id
        - uid: uid
          namespace: namespace
          id: id
        edges:
        - source: source
          target: target
          relation: FLOW_TASK
        - source: source
          target: target
          relation: FLOW_TASK
      properties:
        nodes:
          items:
            $ref: '#/components/schemas/FlowNode'
          type: array
        edges:
          items:
            $ref: '#/components/schemas/FlowTopologyGraph.Edge'
          type: array
      required:
      - edges
      - nodes
      type: object
    FlowTopologyGraph.Edge:
      example:
        source: source
        target: target
        relation: FLOW_TASK
      properties:
        source:
          type: string
        target:
          type: string
        relation:
          $ref: '#/components/schemas/FlowRelation'
      required:
      - relation
      - source
      - target
      type: object
    FlowUsage:
      example:
        taskRunnerTypeCount:
          key: 3
        triggerTypeCount:
          key: 9
        taskTypeCount:
          key: 7
        count: 5
        namespacesCount: 2
      properties:
        count:
          format: int32
          type: integer
        namespacesCount:
          format: int64
          type: integer
        taskTypeCount:
          additionalProperties:
            format: int64
            type: integer
          type: object
        triggerTypeCount:
          additionalProperties:
            format: int64
            type: integer
          type: object
        taskRunnerTypeCount:
          additionalProperties:
            format: int64
            type: integer
          type: object
      type: object
    FlowWithSource:
      allOf:
      - $ref: '#/components/schemas/Flow'
      - $ref: '#/components/schemas/AbstractFlow'
      - properties:
          deleted:
            type: boolean
          source:
            type: string
      example:
        outputs:
        - displayName: displayName
          description: description
          id: id
          type: STRING
          value: ""
        - displayName: displayName
          description: description
          id: id
          type: STRING
          value: ""
        variables:
          key: ""
        listeners:
        - description: description
          conditions:
          - type: type
          - type: type
          tasks:
          - allowFailure: true
            logLevel: ERROR
            runIf: runIf
            description: description
            disabled: true
            id: id
            workerGroup:
              fallback: FAIL
              key: key
            type: type
            logToFile: true
            retry: "{}"
            timeout:
              expression: expression
            allowWarning: true
          - allowFailure: true
            logLevel: ERROR
            runIf: runIf
            description: description
            disabled: true
            id: id
            workerGroup:
              fallback: FAIL
              key: key
            type: type
            logToFile: true
            retry: "{}"
            timeout:
              expression: expression
            allowWarning: true
        - description: description
          conditions:
          - type: type
          - type: type
          tasks:
          - allowFailure: true
            logLevel: ERROR
            runIf: runIf
            description: description
            disabled: true
            id: id
            workerGroup:
              fallback: FAIL
              key: key
            type: type
            logToFile: true
            retry: "{}"
            timeout:
              expression: expression
            allowWarning: true
          - allowFailure: true
            logLevel: ERROR
            runIf: runIf
            description: description
            disabled: true
            id: id
            workerGroup:
              fallback: FAIL
              key: key
            type: type
            logToFile: true
            retry: "{}"
            timeout:
              expression: expression
            allowWarning: true
        inputs:
        - dependsOn: ""
          defaults: ""
          displayName: displayName
          name: name
          description: description
          id: id
          type: ""
          required: true
        - dependsOn: ""
          defaults: ""
          displayName: displayName
          name: name
          description: description
          id: id
          type: ""
          required: true
        description: description
        sla:
        - id: id
          type: MAX_DURATION
          behavior: FAIL
          labels:
            last: ""
            first: ""
            empty: true
        - id: id
          type: MAX_DURATION
          behavior: FAIL
          labels:
            last: ""
            first: ""
            empty: true
        source: source
        triggers:
        - minLogLevel: ""
          logLevel: null
          stopAfter:
          - CREATED
          - CREATED
          description: description
          disabled: true
          id: id
          workerGroup:
            fallback: FAIL
            key: key
          type: type
          conditions:
          - type: type
          - type: type
          logToFile: true
          labels:
            last: ""
            first: ""
            empty: true
        - minLogLevel: ""
          logLevel: null
          stopAfter:
          - CREATED
          - CREATED
          description: description
          disabled: true
          id: id
          workerGroup:
            fallback: FAIL
            key: key
          type: type
          conditions:
          - type: type
          - type: type
          logToFile: true
          labels:
            last: ""
            first: ""
            empty: true
        pluginDefaults:
        - forced: true
          values:
            key: ""
          type: type
        - forced: true
          values:
            key: ""
          type: type
        revision: 1
        labels: null
        concurrency:
          limit: 0
          behavior: QUEUE
        deleted: true
        taskDefaults:
        - forced: true
          values:
            key: ""
          type: type
        - forced: true
          values:
            key: ""
          type: type
        namespace: namespace
        disabled: true
        id: id
        tasks:
        - allowFailure: true
          logLevel: ERROR
          runIf: runIf
          description: description
          disabled: true
          id: id
          workerGroup:
            fallback: FAIL
            key: key
          type: type
          logToFile: true
          retry: "{}"
          timeout:
            expression: expression
          allowWarning: true
        - allowFailure: true
          logLevel: ERROR
          runIf: runIf
          description: description
          disabled: true
          id: id
          workerGroup:
            fallback: FAIL
            key: key
          type: type
          logToFile: true
          retry: "{}"
          timeout:
            expression: expression
          allowWarning: true
        errors:
        - allowFailure: true
          logLevel: ERROR
          runIf: runIf
          description: description
          disabled: true
          id: id
          workerGroup:
            fallback: FAIL
            key: key
          type: type
          logToFile: true
          retry: "{}"
          timeout:
            expression: expression
          allowWarning: true
        - allowFailure: true
          logLevel: ERROR
          runIf: runIf
          description: description
          disabled: true
          id: id
          workerGroup:
            fallback: FAIL
            key: key
          type: type
          logToFile: true
          retry: "{}"
          timeout:
            expression: expression
          allowWarning: true
        retry: null
      required:
      - deleted
      type: object
    Group:
      example:
        deleted: true
        provider:
          securityIntegrationId: securityIntegrationId
          externalId: externalId
          attributes:
            key: ""
          securityIntegrationName: securityIntegrationName
        name: name
        description: description
        id: id
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        deleted:
          type: boolean
        provider:
          $ref: '#/components/schemas/IdentityProvider'
      required:
      - deleted
      - description
      - id
      - name
      - provider
      type: object
    GroupMembership:
      properties:
        value:
          type: string
        ref:
          type: string
        display:
          type: string
        type:
          $ref: '#/components/schemas/GroupMembership.Type'
      type: object
    GroupMembership.Type:
      enum:
      - USER
      - GROUP
      type: string
    GroupUsage:
      example:
        count: 2
      properties:
        count:
          format: int64
          type: integer
      type: object
    HostUsage:
      example:
        jvm:
          vendor: vendor
          name: name
          version: version
        os:
          codeName: codeName
          family: family
          version: version
          buildNumber: buildNumber
        uuid: uuid
        hardware:
          memory: 5
          maxFreq: 1
          logicalProcessorCount: 0
          knownDockerMacAddr: true
          physicalProcessorCount: 6
          knownVmMacAddr: true
      properties:
        uuid:
          type: string
        hardware:
          $ref: '#/components/schemas/HostUsage.Hardware'
        os:
          $ref: '#/components/schemas/HostUsage.Os'
        jvm:
          $ref: '#/components/schemas/HostUsage.Jvm'
      type: object
    HostUsage.Hardware:
      example:
        memory: 5
        maxFreq: 1
        logicalProcessorCount: 0
        knownDockerMacAddr: true
        physicalProcessorCount: 6
        knownVmMacAddr: true
      properties:
        logicalProcessorCount:
          format: int32
          type: integer
        physicalProcessorCount:
          format: int64
          type: integer
        maxFreq:
          format: int64
          type: integer
        memory:
          format: int64
          type: integer
        knownVmMacAddr:
          type: boolean
        knownDockerMacAddr:
          type: boolean
      type: object
    HostUsage.Jvm:
      example:
        vendor: vendor
        name: name
        version: version
      properties:
        name:
          type: string
        vendor:
          type: string
        version:
          type: string
      type: object
    HostUsage.Os:
      example:
        codeName: codeName
        family: family
        version: version
        buildNumber: buildNumber
      properties:
        family:
          type: string
        version:
          type: string
        codeName:
          type: string
        buildNumber:
          type: string
      type: object
    HttpParameters:
      allOf:
      - $ref: '#/components/schemas/ConvertibleMultiValues_String_'
      - $ref: '#/components/schemas/ConvertibleValues_List_String__'
      - $ref: '#/components/schemas/ConversionServiceProvider'
      type: object
    IdWithNamespace:
      example:
        namespace: namespace
        id: id
      properties:
        namespace:
          type: string
        id:
          type: string
      type: object
    IdentityProvider:
      example:
        securityIntegrationId: securityIntegrationId
        externalId: externalId
        attributes:
          key: ""
        securityIntegrationName: securityIntegrationName
      properties:
        attributes:
          additionalProperties: true
          type: object
        externalId:
          type: string
        securityIntegrationId:
          type: string
        securityIntegrationName:
          type: string
      required:
      - attributes
      - externalId
      - securityIntegrationId
      - securityIntegrationName
      type: object
    InputType:
      example:
        cls: cls
        type: type
      properties:
        type:
          type: string
        cls:
          type: string
      required:
      - cls
      - type
      type: object
    Input_Object_:
      example:
        dependsOn: ""
        defaults: ""
        displayName: displayName
        name: name
        description: description
        id: id
        type: ""
        required: true
      properties:
        name:
          deprecated: true
          type: string
        id:
          minLength: 1
          pattern: "^[a-zA-Z0-9][.a-zA-Z0-9_-]*"
          title: The ID of the input.
          type: string
        type:
          allOf:
          - $ref: '#/components/schemas/Type'
          title: The type of the input.
        description:
          title: The description of the input.
          type: string
        dependsOn:
          allOf:
          - $ref: '#/components/schemas/DependsOn'
          title: The dependencies of the input.
        required:
          type: boolean
        defaults:
          title: The default value to use if no value is specified.
        displayName:
          maxLength: 64
          title: The display name of the input.
          type: string
      required:
      - id
      - type
      type: object
    Invitation:
      example:
        expiredAt: 2000-01-23T04:56:07.000+00:00
        deleted: true
        bindings:
        - deleted: true
          namespaceId: namespaceId
          roleId: roleId
          externalId: externalId
          id: id
          type: USER
        - deleted: true
          namespaceId: namespaceId
          roleId: roleId
          externalId: externalId
          id: id
          type: USER
        groupIds:
        - groupIds
        - groupIds
        tenantId: tenantId
        link: link
        id: id
        sentAt: 2000-01-23T04:56:07.000+00:00
        isExpired: true
        email: email
        status: PENDING
        acceptedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        isExpired:
          type: boolean
        id:
          type: string
        bindings:
          items:
            $ref: '#/components/schemas/Binding'
          type: array
        groupIds:
          items:
            type: string
          type: array
        tenantId:
          type: string
        email:
          pattern: "^$|^[a-zA-Z0-9_!#$%&’*+/=?`{|}~^.-]+@[a-zA-Z0-9.-]+$"
          type: string
        status:
          $ref: '#/components/schemas/Invitation.InvitationStatus'
        sentAt:
          format: date-time
          type: string
        expiredAt:
          format: date-time
          type: string
        acceptedAt:
          format: date-time
          type: string
        deleted:
          type: boolean
        link:
          type: string
      required:
      - acceptedAt
      - bindings
      - deleted
      - email
      - expiredAt
      - groupIds
      - id
      - isExpired
      - link
      - sentAt
      - status
      - tenantId
      type: object
    Invitation.InvitationStatus:
      enum:
      - PENDING
      - ACCEPTED
      type: string
    KVController.ApiDeleteBulkRequest:
      properties:
        keys:
          items:
            type: string
          type: array
      required:
      - keys
      type: object
    KVController.ApiDeleteBulkResponse:
      example:
        keys:
        - keys
        - keys
      properties:
        keys:
          items:
            type: string
          type: array
      required:
      - keys
      type: object
    KVController.TypedValue:
      example:
        type: STRING
        value: ""
      properties:
        type:
          $ref: '#/components/schemas/KVType'
        value: {}
      required:
      - type
      - value
      type: object
    KVEntry:
      example:
        updateDate: 2000-01-23T04:56:07.000+00:00
        creationDate: 2000-01-23T04:56:07.000+00:00
        key: key
        expirationDate: 2000-01-23T04:56:07.000+00:00
      properties:
        key:
          type: string
        creationDate:
          format: date-time
          type: string
        updateDate:
          format: date-time
          type: string
        expirationDate:
          format: date-time
          type: string
      required:
      - creationDate
      - expirationDate
      - key
      - updateDate
      type: object
    KVType:
      enum:
      - STRING
      - NUMBER
      - BOOLEAN
      - DATETIME
      - DATE
      - DURATION
      - JSON
      type: string
    Label:
      example:
        value: value
        key: key
      properties:
        key:
          type: string
        value:
          type: string
      required:
      - key
      - value
      type: object
    Level:
      enum:
      - ERROR
      - WARN
      - INFO
      - DEBUG
      - TRACE
      type: string
    List_Action_:
      allOf:
      - $ref: '#/components/schemas/SequencedCollection_Action_'
      - $ref: '#/components/schemas/Collection_Action_'
      - properties:
          empty:
            type: boolean
          first:
            $ref: '#/components/schemas/Action'
          last:
            $ref: '#/components/schemas/Action'
      example:
        last: null
        first: null
        empty: true
      type: object
    List_Object_:
      allOf:
      - $ref: '#/components/schemas/SequencedCollection_Object_'
      - $ref: '#/components/schemas/Collection_Object_'
      - properties:
          empty:
            type: boolean
          first: {}
          last: {}
      example:
        last: ""
        first: ""
        empty: true
      type: object
    Listener:
      example:
        description: description
        conditions:
        - type: type
        - type: type
        tasks:
        - allowFailure: true
          logLevel: ERROR
          runIf: runIf
          description: description
          disabled: true
          id: id
          workerGroup:
            fallback: FAIL
            key: key
          type: type
          logToFile: true
          retry: "{}"
          timeout:
            expression: expression
          allowWarning: true
        - allowFailure: true
          logLevel: ERROR
          runIf: runIf
          description: description
          disabled: true
          id: id
          workerGroup:
            fallback: FAIL
            key: key
          type: type
          logToFile: true
          retry: "{}"
          timeout:
            expression: expression
          allowWarning: true
      properties:
        description:
          type: string
        conditions:
          items:
            $ref: '#/components/schemas/Condition'
          type: array
        tasks:
          items:
            $ref: '#/components/schemas/Task'
          minItems: 1
          type: array
      required:
      - conditions
      - description
      - tasks
      type: object
    LogEntry:
      example:
        taskRunId: taskRunId
        attemptNumber: 0
        executionId: executionId
        deleted: true
        level: ERROR
        triggerId: triggerId
        namespace: namespace
        thread: thread
        message: message
        flowId: flowId
        taskId: taskId
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        namespace:
          type: string
        flowId:
          type: string
        taskId:
          nullable: true
          type: string
        executionId:
          nullable: true
          type: string
        taskRunId:
          nullable: true
          type: string
        attemptNumber:
          format: int32
          nullable: true
          type: integer
        triggerId:
          nullable: true
          type: string
        timestamp:
          format: date-time
          type: string
        level:
          $ref: '#/components/schemas/Level'
        thread:
          type: string
        message:
          type: string
        deleted:
          type: boolean
      required:
      - attemptNumber
      - deleted
      - executionId
      - flowId
      - level
      - message
      - namespace
      - taskId
      - taskRunId
      - thread
      - timestamp
      - triggerId
      type: object
    LogStatistics:
      example:
        counts:
          TRACE: 5
          ERROR: 0
          INFO: 1
          DEBUG: 5
          WARN: 6
        groupBy: groupBy
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        timestamp:
          format: date-time
          type: string
        counts:
          $ref: '#/components/schemas/LogStatistics_counts'
        groupBy:
          type: string
      required:
      - counts
      - groupBy
      - timestamp
      type: object
    Map_Object.Object_:
      properties:
        empty:
          type: boolean
      type: object
    MeController.Me:
      example:
        tenants:
        - deleted: true
          storageConfiguration:
            key: ""
          secretType: secretType
          secretConfiguration:
            key: ""
          name: name
          storageType: storageType
          logo: logo
          id: id
          workerGroup:
            fallback: FAIL
            key: key
        - deleted: true
          storageConfiguration:
            key: ""
          secretType: secretType
          secretConfiguration:
            key: ""
          name: name
          storageType: storageType
          logo: logo
          id: id
          workerGroup:
            fallback: FAIL
            key: key
        roles:
        - role:
            isDefault: true
            deleted: true
            permissions:
              NAMESPACE:
                last: null
                first: null
                empty: true
              APPEXECUTION:
                last: null
                first: null
                empty: true
              APP:
                last: null
                first: null
                empty: true
              BLUEPRINT:
                last: null
                first: null
                empty: true
              EXECUTION:
                last: null
                first: null
                empty: true
              APITOKEN:
                last: null
                first: null
                empty: true
              USER:
                last: null
                first: null
                empty: true
              TENANT:
                last: null
                first: null
                empty: true
              FLOW:
                last: null
                first: null
                empty: true
              ROLE:
                last: null
                first: null
                empty: true
              GROUP:
                last: null
                first: null
                empty: true
              DASHBOARD:
                last: null
                first: null
                empty: true
              ME:
                last: null
                first: null
                empty: true
              IMPERSONATE:
                last: null
                first: null
                empty: true
              TEMPLATE:
                last: null
                first: null
                empty: true
              AUDITLOG:
                last: null
                first: null
                empty: true
              SETTING:
                last: null
                first: null
                empty: true
              INFRASTRUCTURE:
                last: null
                first: null
                empty: true
              KVSTORE:
                last: null
                first: null
                empty: true
              BINDING:
                last: null
                first: null
                empty: true
              SECRET:
                last: null
                first: null
                empty: true
            name: name
            description: description
            id: id
            isManaged: true
          namespaceId: namespaceId
        - role:
            isDefault: true
            deleted: true
            permissions:
              NAMESPACE:
                last: null
                first: null
                empty: true
              APPEXECUTION:
                last: null
                first: null
                empty: true
              APP:
                last: null
                first: null
                empty: true
              BLUEPRINT:
                last: null
                first: null
                empty: true
              EXECUTION:
                last: null
                first: null
                empty: true
              APITOKEN:
                last: null
                first: null
                empty: true
              USER:
                last: null
                first: null
                empty: true
              TENANT:
                last: null
                first: null
                empty: true
              FLOW:
                last: null
                first: null
                empty: true
              ROLE:
                last: null
                first: null
                empty: true
              GROUP:
                last: null
                first: null
                empty: true
              DASHBOARD:
                last: null
                first: null
                empty: true
              ME:
                last: null
                first: null
                empty: true
              IMPERSONATE:
                last: null
                first: null
                empty: true
              TEMPLATE:
                last: null
                first: null
                empty: true
              AUDITLOG:
                last: null
                first: null
                empty: true
              SETTING:
                last: null
                first: null
                empty: true
              INFRASTRUCTURE:
                last: null
                first: null
                empty: true
              KVSTORE:
                last: null
                first: null
                empty: true
              BINDING:
                last: null
                first: null
                empty: true
              SECRET:
                last: null
                first: null
                empty: true
            name: name
            description: description
            id: id
            isManaged: true
          namespaceId: namespaceId
        user:
          firstName: firstName
          lastName: lastName
          auths:
          - uid: uid
            name: name
            type: type
          - uid: uid
            name: name
            type: type
          groups:
          - "{}"
          - "{}"
          description: description
          groupList:
          - groupId: groupId
            tenantId: tenantId
            membership: OWNER
          - groupId: groupId
            tenantId: tenantId
            membership: OWNER
          id: id
          type: STANDARD
          email: email
          providers:
          - securityIntegrationId: securityIntegrationId
            tenantId: tenantId
            externalId: externalId
            attributes:
              key: ""
            securityIntegrationName: securityIntegrationName
          - securityIntegrationId: securityIntegrationId
            tenantId: tenantId
            externalId: externalId
            attributes:
              key: ""
            securityIntegrationName: securityIntegrationName
          username: username
      properties:
        user:
          $ref: '#/components/schemas/ApiUser'
        roles:
          items:
            $ref: '#/components/schemas/AclService.NamespaceRole'
          type: array
        tenants:
          items:
            $ref: '#/components/schemas/ApiTenant'
          type: array
      required:
      - roles
      - tenants
      - user
      type: object
    MeController.UpdatePasswordRequest:
      properties:
        oldPassword:
          type: string
        newPassword:
          type: string
      required:
      - newPassword
      - oldPassword
      type: object
    MeController.UserDetailsRequest:
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
      required:
      - email
      - firstName
      - lastName
      type: object
    Meta:
      example:
        created: 2000-01-23T04:56:07.000+00:00
        location: location
        lastModified: 2000-01-23T04:56:07.000+00:00
        version: version
        resourceType: resourceType
      properties:
        resourceType:
          minLength: 1
          type: string
        created:
          format: date-time
          type: string
        lastModified:
          format: date-time
          type: string
        location:
          type: string
        version:
          type: string
      type: object
    Metric:
      example:
        baseUnit: baseUnit
        name: name
        description: description
        type: type
        value: ""
        tags:
        - value: value
          key: key
        - value: value
          key: key
      properties:
        name:
          type: string
        type:
          type: string
        description:
          type: string
        baseUnit:
          type: string
        tags:
          items:
            $ref: '#/components/schemas/Metric.Tag'
          type: array
        value: {}
      required:
      - baseUnit
      - description
      - name
      - tags
      - type
      - value
      type: object
    Metric.Tag:
      example:
        value: value
        key: key
      properties:
        key:
          type: string
        value:
          type: string
      required:
      - key
      - value
      type: object
    MetricAggregation:
      example:
        date: 2000-01-23T04:56:07.000+00:00
        name: name
        value: 0.8008281904610115
      properties:
        name:
          type: string
        value:
          format: double
          type: number
        date:
          format: date-time
          type: string
      required:
      - date
      - name
      - value
      type: object
    MetricAggregations:
      example:
        groupBy: groupBy
        aggregations:
        - date: 2000-01-23T04:56:07.000+00:00
          name: name
          value: 0.8008281904610115
        - date: 2000-01-23T04:56:07.000+00:00
          name: name
          value: 0.8008281904610115
      properties:
        groupBy:
          type: string
        aggregations:
          items:
            $ref: '#/components/schemas/MetricAggregation'
          type: array
      required:
      - aggregations
      - groupBy
      type: object
    MetricEntry:
      example:
        taskRunId: taskRunId
        executionId: executionId
        deleted: true
        namespace: namespace
        name: name
        type: type
        flowId: flowId
        value: 0.8008281904610115
        taskId: taskId
        timestamp: 2000-01-23T04:56:07.000+00:00
        tags:
          key: tags
      properties:
        namespace:
          type: string
        flowId:
          type: string
        taskId:
          nullable: true
          type: string
        executionId:
          nullable: true
          type: string
        taskRunId:
          nullable: true
          type: string
        type:
          type: string
        name:
          type: string
        value:
          format: double
          type: number
        timestamp:
          format: date-time
          type: string
        tags:
          additionalProperties:
            type: string
          nullable: true
          type: object
        deleted:
          type: boolean
      required:
      - deleted
      - executionId
      - flowId
      - name
      - namespace
      - tags
      - taskId
      - taskRunId
      - timestamp
      - type
      - value
      type: object
    MiscController.BasicAuthCredentials:
      properties:
        uid:
          type: string
        username:
          type: string
        password:
          type: string
      required:
      - password
      - uid
      - username
      type: object
    MiscController.Configuration:
      properties:
        uuid:
          type: string
        version:
          type: string
        commitId:
          type: string
        commitDate:
          format: date-time
          type: string
        isCustomDashboardsEnabled:
          type: boolean
        isTaskRunEnabled:
          type: boolean
        isAnonymousUsageEnabled:
          type: boolean
        isTemplateEnabled:
          type: boolean
        environment:
          $ref: '#/components/schemas/MiscController.Environment'
        preview:
          $ref: '#/components/schemas/MiscController.Preview'
        isBasicAuthEnabled:
          type: boolean
        systemNamespace:
          type: string
        hiddenLabelsPrefixes:
          items:
            type: string
          type: array
      type: object
    MiscController.ConfigurationEe:
      allOf:
      - $ref: '#/components/schemas/MiscController.Configuration'
      - properties:
          tenants:
            $ref: '#/components/schemas/MiscController.TenantConfigurationInfo'
          secretsEnabled:
            type: boolean
          supportedStorages:
            items:
              type: string
            type: array
          supportedSecrets:
            items:
              type: string
            type: array
          banner:
            $ref: '#/components/schemas/Banner'
      example:
        preview:
          initial: 0
          max: 6
        tenants:
          defaultTenant: true
          secretByTenant: true
          storageByTenant: true
          enabled: true
        hiddenLabelsPrefixes:
        - hiddenLabelsPrefixes
        - hiddenLabelsPrefixes
        banner:
          endDate: 2000-01-23T04:56:07.000+00:00
          tenantId: tenantId
          active: true
          id: id
          message: message
          type: INFO
          startDate: 2000-01-23T04:56:07.000+00:00
        commitId: commitId
        isAnonymousUsageEnabled: true
        uuid: uuid
        version: version
        isCustomDashboardsEnabled: true
        isBasicAuthEnabled: true
        commitDate: 2000-01-23T04:56:07.000+00:00
        isTaskRunEnabled: true
        environment:
          color: color
          name: name
        supportedStorages:
        - supportedStorages
        - supportedStorages
        secretsEnabled: true
        isTemplateEnabled: true
        systemNamespace: systemNamespace
        supportedSecrets:
        - supportedSecrets
        - supportedSecrets
      type: object
    MiscController.Environment:
      example:
        color: color
        name: name
      properties:
        name:
          type: string
        color:
          type: string
      required:
      - color
      - name
      type: object
    MiscController.LicenseInfo:
      example:
        expired: true
        expiry: 2000-01-23T04:56:07.000+00:00
        type: type
      properties:
        type:
          type: string
        expiry:
          format: date-time
          type: string
        expired:
          type: boolean
      required:
      - expired
      - expiry
      - type
      type: object
    MiscController.Preview:
      example:
        initial: 0
        max: 6
      properties:
        initial:
          format: int32
          type: integer
        max:
          format: int32
          type: integer
      required:
      - initial
      - max
      type: object
    MiscController.TenantConfigurationInfo:
      example:
        defaultTenant: true
        secretByTenant: true
        storageByTenant: true
        enabled: true
      properties:
        enabled:
          type: boolean
        defaultTenant:
          type: boolean
        storageByTenant:
          type: boolean
        secretByTenant:
          type: boolean
      required:
      - defaultTenant
      - enabled
      - secretByTenant
      - storageByTenant
      type: object
    Name:
      description: Scim core schema.
      example:
        familyName: familyName
        givenName: givenName
      properties:
        familyName:
          type: string
        givenName:
          type: string
      type: object
    Namespace:
      allOf:
      - $ref: '#/components/schemas/Namespace_1'
      - properties:
          id:
            pattern: "^[a-z0-9][a-z0-9._-]*"
            type: string
          deleted:
            type: boolean
          allowedTriggers:
            deprecated: true
            items:
              $ref: '#/components/schemas/Namespace.AllowedTrigger'
            type: array
          description:
            type: string
          variables:
            additionalProperties: true
            type: object
          pluginDefaults:
            items:
              $ref: '#/components/schemas/PluginDefault'
            type: array
          allowedNamespaces:
            items:
              $ref: '#/components/schemas/Namespace.AllowedNamespace'
            type: array
          workerGroup:
            $ref: '#/components/schemas/WorkerGroup'
          storageType:
            type: string
          storageConfiguration:
            additionalProperties: true
            type: object
          secretType:
            type: string
          secretConfiguration:
            additionalProperties: true
            type: object
      example:
        variables:
          key: ""
        deleted: true
        allowedTriggers:
        - namespace: namespace
          flowId: flowId
        - namespace: namespace
          flowId: flowId
        storageConfiguration:
          key: ""
        secretType: secretType
        secretConfiguration:
          key: ""
        description: description
        storageType: storageType
        id: id
        workerGroup:
          fallback: FAIL
          key: key
        pluginDefaults:
        - forced: true
          values:
            key: ""
          type: type
        - forced: true
          values:
            key: ""
          type: type
        allowedNamespaces:
        - namespace: namespace
        - namespace: namespace
      required:
      - allowedNamespaces
      - deleted
      - description
      - id
      - pluginDefaults
      - variables
      - workerGroup
      type: object
    Namespace.AllowedNamespace:
      example:
        namespace: namespace
      properties:
        namespace:
          type: string
      required:
      - namespace
      type: object
    Namespace.AllowedTrigger:
      deprecated: true
      example:
        namespace: namespace
        flowId: flowId
      properties:
        namespace:
          type: string
        flowId:
          type: string
      required:
      - flowId
      - namespace
      type: object
    NamespaceUsage:
      example:
        count: 6
      properties:
        count:
          format: int64
          type: integer
      type: object
    NamespaceWithDisabled:
      allOf:
      - $ref: '#/components/schemas/Namespace'
      - $ref: '#/components/schemas/Namespace_3'
      - properties:
          id:
            pattern: "^[a-z0-9][a-z0-9._-]*"
            type: string
          deleted:
            type: boolean
          description:
            type: string
          variables:
            additionalProperties: true
            type: object
          pluginDefaults:
            items:
              $ref: '#/components/schemas/PluginDefault'
            type: array
          allowedNamespaces:
            items:
              $ref: '#/components/schemas/Namespace.AllowedNamespace'
            type: array
          workerGroup:
            $ref: '#/components/schemas/WorkerGroup'
          disabled:
            type: boolean
      example:
        variables:
          key: ""
        secretConfiguration:
          key: ""
        description: description
        pluginDefaults:
        - forced: true
          values:
            key: ""
          type: type
        - forced: true
          values:
            key: ""
          type: type
        allowedNamespaces:
        - namespace: namespace
        - namespace: namespace
        deleted: true
        allowedTriggers:
        - namespace: namespace
          flowId: flowId
        - namespace: namespace
          flowId: flowId
        storageConfiguration:
          key: ""
        secretType: secretType
        storageType: storageType
        disabled: true
        id: id
        workerGroup:
          fallback: FAIL
          key: key
      required:
      - deleted
      - disabled
      - id
      type: object
    Output:
      example:
        displayName: displayName
        description: description
        id: id
        type: STRING
        value: ""
      properties:
        id:
          minLength: 1
          pattern: "^[a-zA-Z0-9][.a-zA-Z0-9_-]*"
          type: string
        description:
          type: string
        value: {}
        type:
          $ref: '#/components/schemas/Type'
        displayName:
          type: string
      required:
      - id
      - type
      - value
      type: object
    PageRequest:
      example:
        startIndex: 0
        count: 6
      properties:
        startIndex:
          format: int32
          type: integer
        count:
          format: int32
          type: integer
      type: object
    PagedResults_AbstractBindingController.BindingDetail_:
      example:
        total: 0
        results:
        - role:
            isDefault: true
            deleted: true
            permissions:
              NAMESPACE:
                last: null
                first: null
                empty: true
              APPEXECUTION:
                last: null
                first: null
                empty: true
              APP:
                last: null
                first: null
                empty: true
              BLUEPRINT:
                last: null
                first: null
                empty: true
              EXECUTION:
                last: null
                first: null
                empty: true
              APITOKEN:
                last: null
                first: null
                empty: true
              USER:
                last: null
                first: null
                empty: true
              TENANT:
                last: null
                first: null
                empty: true
              FLOW:
                last: null
                first: null
                empty: true
              ROLE:
                last: null
                first: null
                empty: true
              GROUP:
                last: null
                first: null
                empty: true
              DASHBOARD:
                last: null
                first: null
                empty: true
              ME:
                last: null
                first: null
                empty: true
              IMPERSONATE:
                last: null
                first: null
                empty: true
              TEMPLATE:
                last: null
                first: null
                empty: true
              AUDITLOG:
                last: null
                first: null
                empty: true
              SETTING:
                last: null
                first: null
                empty: true
              INFRASTRUCTURE:
                last: null
                first: null
                empty: true
              KVSTORE:
                last: null
                first: null
                empty: true
              BINDING:
                last: null
                first: null
                empty: true
              SECRET:
                last: null
                first: null
                empty: true
            name: name
            description: description
            id: id
            isManaged: true
          binding:
            deleted: true
            namespaceId: namespaceId
            roleId: roleId
            externalId: externalId
            id: id
            type: USER
          user:
            firstName: firstName
            lastName: lastName
            auths:
            - uid: uid
              name: name
              type: type
            - uid: uid
              name: name
              type: type
            groups:
            - "{}"
            - "{}"
            description: description
            groupList:
            - groupId: groupId
              tenantId: tenantId
              membership: OWNER
            - groupId: groupId
              tenantId: tenantId
              membership: OWNER
            id: id
            type: STANDARD
            email: email
            providers:
            - securityIntegrationId: securityIntegrationId
              tenantId: tenantId
              externalId: externalId
              attributes:
                key: ""
              securityIntegrationName: securityIntegrationName
            - securityIntegrationId: securityIntegrationId
              tenantId: tenantId
              externalId: externalId
              attributes:
                key: ""
              securityIntegrationName: securityIntegrationName
            username: username
          group:
            deleted: true
            provider:
              securityIntegrationId: securityIntegrationId
              externalId: externalId
              attributes:
                key: ""
              securityIntegrationName: securityIntegrationName
            name: name
            description: description
            id: id
        - role:
            isDefault: true
            deleted: true
            permissions:
              NAMESPACE:
                last: null
                first: null
                empty: true
              APPEXECUTION:
                last: null
                first: null
                empty: true
              APP:
                last: null
                first: null
                empty: true
              BLUEPRINT:
                last: null
                first: null
                empty: true
              EXECUTION:
                last: null
                first: null
                empty: true
              APITOKEN:
                last: null
                first: null
                empty: true
              USER:
                last: null
                first: null
                empty: true
              TENANT:
                last: null
                first: null
                empty: true
              FLOW:
                last: null
                first: null
                empty: true
              ROLE:
                last: null
                first: null
                empty: true
              GROUP:
                last: null
                first: null
                empty: true
              DASHBOARD:
                last: null
                first: null
                empty: true
              ME:
                last: null
                first: null
                empty: true
              IMPERSONATE:
                last: null
                first: null
                empty: true
              TEMPLATE:
                last: null
                first: null
                empty: true
              AUDITLOG:
                last: null
                first: null
                empty: true
              SETTING:
                last: null
                first: null
                empty: true
              INFRASTRUCTURE:
                last: null
                first: null
                empty: true
              KVSTORE:
                last: null
                first: null
                empty: true
              BINDING:
                last: null
                first: null
                empty: true
              SECRET:
                last: null
                first: null
                empty: true
            name: name
            description: description
            id: id
            isManaged: true
          binding:
            deleted: true
            namespaceId: namespaceId
            roleId: roleId
            externalId: externalId
            id: id
            type: USER
          user:
            firstName: firstName
            lastName: lastName
            auths:
            - uid: uid
              name: name
              type: type
            - uid: uid
              name: name
              type: type
            groups:
            - "{}"
            - "{}"
            description: description
            groupList:
            - groupId: groupId
              tenantId: tenantId
              membership: OWNER
            - groupId: groupId
              tenantId: tenantId
              membership: OWNER
            id: id
            type: STANDARD
            email: email
            providers:
            - securityIntegrationId: securityIntegrationId
              tenantId: tenantId
              externalId: externalId
              attributes:
                key: ""
              securityIntegrationName: securityIntegrationName
            - securityIntegrationId: securityIntegrationId
              tenantId: tenantId
              externalId: externalId
              attributes:
                key: ""
              securityIntegrationName: securityIntegrationName
            username: username
          group:
            deleted: true
            provider:
              securityIntegrationId: securityIntegrationId
              externalId: externalId
              attributes:
                key: ""
              securityIntegrationName: securityIntegrationName
            name: name
            description: description
            id: id
      properties:
        results:
          items:
            $ref: '#/components/schemas/AbstractBindingController.BindingDetail'
          type: array
        total:
          format: int64
          type: integer
      required:
      - results
      - total
      type: object
    PagedResults_ApiUser_:
      example:
        total: 0
        results:
        - firstName: firstName
          lastName: lastName
          auths:
          - uid: uid
            name: name
            type: type
          - uid: uid
            name: name
            type: type
          groups:
          - "{}"
          - "{}"
          description: description
          groupList:
          - groupId: groupId
            tenantId: tenantId
            membership: OWNER
          - groupId: groupId
            tenantId: tenantId
            membership: OWNER
          id: id
          type: STANDARD
          email: email
          providers:
          - securityIntegrationId: securityIntegrationId
            tenantId: tenantId
            externalId: externalId
            attributes:
              key: ""
            securityIntegrationName: securityIntegrationName
          - securityIntegrationId: securityIntegrationId
            tenantId: tenantId
            externalId: externalId
            attributes:
              key: ""
            securityIntegrationName: securityIntegrationName
          username: username
        - firstName: firstName
          lastName: lastName
          auths:
          - uid: uid
            name: name
            type: type
          - uid: uid
            name: name
            type: type
          groups:
          - "{}"
          - "{}"
          description: description
          groupList:
          - groupId: groupId
            tenantId: tenantId
            membership: OWNER
          - groupId: groupId
            tenantId: tenantId
            membership: OWNER
          id: id
          type: STANDARD
          email: email
          providers:
          - securityIntegrationId: securityIntegrationId
            tenantId: tenantId
            externalId: externalId
            attributes:
              key: ""
            securityIntegrationName: securityIntegrationName
          - securityIntegrationId: securityIntegrationId
            tenantId: tenantId
            externalId: externalId
            attributes:
              key: ""
            securityIntegrationName: securityIntegrationName
          username: username
      properties:
        results:
          items:
            $ref: '#/components/schemas/ApiUser'
          type: array
        total:
          format: int64
          type: integer
      required:
      - results
      - total
      type: object
    PagedResults_AppsController.ApiApp_:
      example:
        total: 0
        results:
        - uid: uid
          name: name
          namespace: namespace
          id: id
          type: type
          enabled: true
          tags:
          - tags
          - tags
        - uid: uid
          name: name
          namespace: namespace
          id: id
          type: type
          enabled: true
          tags:
          - tags
          - tags
      properties:
        results:
          items:
            $ref: '#/components/schemas/AppsController.ApiApp'
          type: array
        total:
          format: int64
          type: integer
      required:
      - results
      - total
      type: object
    PagedResults_AuditLogController.AuditLogWithUser_:
      example:
        total: 0
        results:
        - auditLog:
            date: 2000-01-23T04:56:07.000+00:00
            deleted: true
            appliedPatch:
            - "{}"
            - "{}"
            revertPatch:
            - "{}"
            - "{}"
            ipAddress: ipAddress
            id: id
            detail:
              permission: FLOW
              cls: cls
              id: id
              type: type
            type: READ
            impersonatedBy: impersonatedBy
            userId: userId
          user:
            firstName: firstName
            lastName: lastName
            auths:
            - uid: uid
              name: name
              type: type
            - uid: uid
              name: name
              type: type
            groups:
            - "{}"
            - "{}"
            description: description
            groupList:
            - groupId: groupId
              tenantId: tenantId
              membership: OWNER
            - groupId: groupId
              tenantId: tenantId
              membership: OWNER
            id: id
            type: STANDARD
            email: email
            providers:
            - securityIntegrationId: securityIntegrationId
              tenantId: tenantId
              externalId: externalId
              attributes:
                key: ""
              securityIntegrationName: securityIntegrationName
            - securityIntegrationId: securityIntegrationId
              tenantId: tenantId
              externalId: externalId
              attributes:
                key: ""
              securityIntegrationName: securityIntegrationName
            username: username
        - auditLog:
            date: 2000-01-23T04:56:07.000+00:00
            deleted: true
            appliedPatch:
            - "{}"
            - "{}"
            revertPatch:
            - "{}"
            - "{}"
            ipAddress: ipAddress
            id: id
            detail:
              permission: FLOW
              cls: cls
              id: id
              type: type
            type: READ
            impersonatedBy: impersonatedBy
            userId: userId
          user:
            firstName: firstName
            lastName: lastName
            auths:
            - uid: uid
              name: name
              type: type
            - uid: uid
              name: name
              type: type
            groups:
            - "{}"
            - "{}"
            description: description
            groupList:
            - groupId: groupId
              tenantId: tenantId
              membership: OWNER
            - groupId: groupId
              tenantId: tenantId
              membership: OWNER
            id: id
            type: STANDARD
            email: email
            providers:
            - securityIntegrationId: securityIntegrationId
              tenantId: tenantId
              externalId: externalId
              attributes:
                key: ""
              securityIntegrationName: securityIntegrationName
            - securityIntegrationId: securityIntegrationId
              tenantId: tenantId
              externalId: externalId
              attributes:
                key: ""
              securityIntegrationName: securityIntegrationName
            username: username
      properties:
        results:
          items:
            $ref: '#/components/schemas/AuditLogController.AuditLogWithUser'
          type: array
        total:
          format: int64
          type: integer
      required:
      - results
      - total
      type: object
    PagedResults_BlueprintController.BlueprintItem_:
      example:
        total: 0
        results:
        - includedTasks:
          - includedTasks
          - includedTasks
          publishedAt: 2000-01-23T04:56:07.000+00:00
          description: description
          id: id
          title: title
          tags:
          - tags
          - tags
        - includedTasks:
          - includedTasks
          - includedTasks
          publishedAt: 2000-01-23T04:56:07.000+00:00
          description: description
          id: id
          title: title
          tags:
          - tags
          - tags
      properties:
        results:
          items:
            $ref: '#/components/schemas/BlueprintController.BlueprintItem'
          type: array
        total:
          format: int64
          type: integer
      required:
      - results
      - total
      type: object
    PagedResults_Blueprint_:
      example:
        total: 0
        results:
        - includedTasks:
          - includedTasks
          - includedTasks
          deleted: true
          publishedAt: 2000-01-23T04:56:07.000+00:00
          description: description
          id: id
          title: title
          tags:
          - tags
          - tags
        - includedTasks:
          - includedTasks
          - includedTasks
          deleted: true
          publishedAt: 2000-01-23T04:56:07.000+00:00
          description: description
          id: id
          title: title
          tags:
          - tags
          - tags
      properties:
        results:
          items:
            $ref: '#/components/schemas/Blueprint'
          type: array
        total:
          format: int64
          type: integer
      required:
      - results
      - total
      type: object
    PagedResults_ClusterController.ApiServiceInstance_:
      example:
        total: 0
        results:
        - server:
            hostname: hostname
            id: id
            type: SERVER
            version: version
          createdAt: 2000-01-23T04:56:07.000+00:00
          id: id
          state: CREATED
          type: EXECUTOR
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - server:
            hostname: hostname
            id: id
            type: SERVER
            version: version
          createdAt: 2000-01-23T04:56:07.000+00:00
          id: id
          state: CREATED
          type: EXECUTOR
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        results:
          items:
            $ref: '#/components/schemas/ClusterController.ApiServiceInstance'
          type: array
        total:
          format: int64
          type: integer
      required:
      - results
      - total
      type: object
    PagedResults_Dashboard_:
      example:
        total: 0
        results:
        - sourceCode: sourceCode
          timeWindow:
            default: default
            max: max
          charts:
          - chartOptions: ""
            id: id
            type: type
          - chartOptions: ""
            id: id
            type: type
          description: description
          title: title
        - sourceCode: sourceCode
          timeWindow:
            default: default
            max: max
          charts:
          - chartOptions: ""
            id: id
            type: type
          - chartOptions: ""
            id: id
            type: type
          description: description
          title: title
      properties:
        results:
          items:
            $ref: '#/components/schemas/Dashboard'
          type: array
        total:
          format: int64
          type: integer
      required:
      - results
      - total
      type: object
    PagedResults_Execution_:
      example:
        total: 5
        results:
        - outputs:
            key: ""
          variables:
            key: ""
          metadata:
            attemptNumber: 1
            originalCreatedDate: 2000-01-23T04:56:07.000+00:00
          inputs:
            key: ""
          trigger:
            variables:
              key: ""
            logFile: https://openapi-generator.tech
            id: id
            type: type
          taskRunList:
          - outputs:
              key: ""
            parentTaskRunId: parentTaskRunId
            executionId: executionId
            namespace: namespace
            iteration: 6
            dynamic: true
            id: id
            state:
              duration: duration
              current: CREATED
              endDate: 2000-01-23T04:56:07.000+00:00
              histories:
              - date: 2000-01-23T04:56:07.000+00:00
                state: null
              - date: 2000-01-23T04:56:07.000+00:00
                state: null
              startDate: 2000-01-23T04:56:07.000+00:00
            items: items
            flowId: flowId
            value: value
            taskId: taskId
            attempts:
            - logFile: https://openapi-generator.tech
              metrics:
              - name: name
                type: type
                value: ""
                tags:
                  key: tags
                timestamp: 2000-01-23T04:56:07.000+00:00
              - name: name
                type: type
                value: ""
                tags:
                  key: tags
                timestamp: 2000-01-23T04:56:07.000+00:00
              state:
                duration: duration
                current: CREATED
                endDate: 2000-01-23T04:56:07.000+00:00
                histories:
                - date: 2000-01-23T04:56:07.000+00:00
                  state: null
                - date: 2000-01-23T04:56:07.000+00:00
                  state: null
                startDate: 2000-01-23T04:56:07.000+00:00
            - logFile: https://openapi-generator.tech
              metrics:
              - name: name
                type: type
                value: ""
                tags:
                  key: tags
                timestamp: 2000-01-23T04:56:07.000+00:00
              - name: name
                type: type
                value: ""
                tags:
                  key: tags
                timestamp: 2000-01-23T04:56:07.000+00:00
              state:
                duration: duration
                current: CREATED
                endDate: 2000-01-23T04:56:07.000+00:00
                histories:
                - date: 2000-01-23T04:56:07.000+00:00
                  state: null
                - date: 2000-01-23T04:56:07.000+00:00
                  state: null
                startDate: 2000-01-23T04:56:07.000+00:00
          - outputs:
              key: ""
            parentTaskRunId: parentTaskRunId
            executionId: executionId
            namespace: namespace
            iteration: 6
            dynamic: true
            id: id
            state:
              duration: duration
              current: CREATED
              endDate: 2000-01-23T04:56:07.000+00:00
              histories:
              - date: 2000-01-23T04:56:07.000+00:00
                state: null
              - date: 2000-01-23T04:56:07.000+00:00
                state: null
              startDate: 2000-01-23T04:56:07.000+00:00
            items: items
            flowId: flowId
            value: value
            taskId: taskId
            attempts:
            - logFile: https://openapi-generator.tech
              metrics:
              - name: name
                type: type
                value: ""
                tags:
                  key: tags
                timestamp: 2000-01-23T04:56:07.000+00:00
              - name: name
                type: type
                value: ""
                tags:
                  key: tags
                timestamp: 2000-01-23T04:56:07.000+00:00
              state:
                duration: duration
                current: CREATED
                endDate: 2000-01-23T04:56:07.000+00:00
                histories:
                - date: 2000-01-23T04:56:07.000+00:00
                  state: null
                - date: 2000-01-23T04:56:07.000+00:00
                  state: null
                startDate: 2000-01-23T04:56:07.000+00:00
            - logFile: https://openapi-generator.tech
              metrics:
              - name: name
                type: type
                value: ""
                tags:
                  key: tags
                timestamp: 2000-01-23T04:56:07.000+00:00
              - name: name
                type: type
                value: ""
                tags:
                  key: tags
                timestamp: 2000-01-23T04:56:07.000+00:00
              state:
                duration: duration
                current: CREATED
                endDate: 2000-01-23T04:56:07.000+00:00
                histories:
                - date: 2000-01-23T04:56:07.000+00:00
                  state: null
                - date: 2000-01-23T04:56:07.000+00:00
                  state: null
                startDate: 2000-01-23T04:56:07.000+00:00
          parentId: parentId
          labels:
          - value: value
            key: key
          - value: value
            key: key
          flowRevision: 0
          deleted: true
          namespace: namespace
          scheduleDate: 2000-01-23T04:56:07.000+00:00
          id: id
          state:
            duration: duration
            current: CREATED
            endDate: 2000-01-23T04:56:07.000+00:00
            histories:
            - date: 2000-01-23T04:56:07.000+00:00
              state: null
            - date: 2000-01-23T04:56:07.000+00:00
              state: null
            startDate: 2000-01-23T04:56:07.000+00:00
          originalId: originalId
          flowId: flowId
        - outputs:
            key: ""
          variables:
            key: ""
          metadata:
            attemptNumber: 1
            originalCreatedDate: 2000-01-23T04:56:07.000+00:00
          inputs:
            key: ""
          trigger:
            variables:
              key: ""
            logFile: https://openapi-generator.tech
            id: id
            type: type
          taskRunList:
          - outputs:
              key: ""
            parentTaskRunId: parentTaskRunId
            executionId: executionId
            namespace: namespace
            iteration: 6
            dynamic: true
            id: id
            state:
              duration: duration
              current: CREATED
              endDate: 2000-01-23T04:56:07.000+00:00
              histories:
              - date: 2000-01-23T04:56:07.000+00:00
                state: null
              - date: 2000-01-23T04:56:07.000+00:00
                state: null
              startDate: 2000-01-23T04:56:07.000+00:00
            items: items
            flowId: flowId
            value: value
            taskId: taskId
            attempts:
            - logFile: https://openapi-generator.tech
              metrics:
              - name: name
                type: type
                value: ""
                tags:
                  key: tags
                timestamp: 2000-01-23T04:56:07.000+00:00
              - name: name
                type: type
                value: ""
                tags:
                  key: tags
                timestamp: 2000-01-23T04:56:07.000+00:00
              state:
                duration: duration
                current: CREATED
                endDate: 2000-01-23T04:56:07.000+00:00
                histories:
                - date: 2000-01-23T04:56:07.000+00:00
                  state: null
                - date: 2000-01-23T04:56:07.000+00:00
                  state: null
                startDate: 2000-01-23T04:56:07.000+00:00
            - logFile: https://openapi-generator.tech
              metrics:
              - name: name
                type: type
                value: ""
                tags:
                  key: tags
                timestamp: 2000-01-23T04:56:07.000+00:00
              - name: name
                type: type
                value: ""
                tags:
                  key: tags
                timestamp: 2000-01-23T04:56:07.000+00:00
              state:
                duration: duration
                current: CREATED
                endDate: 2000-01-23T04:56:07.000+00:00
                histories:
                - date: 2000-01-23T04:56:07.000+00:00
                  state: null
                - date: 2000-01-23T04:56:07.000+00:00
                  state: null
                startDate: 2000-01-23T04:56:07.000+00:00
          - outputs:
              key: ""
            parentTaskRunId: parentTaskRunId
            executionId: executionId
            namespace: namespace
            iteration: 6
            dynamic: true
            id: id
            state:
              duration: duration
              current: CREATED
              endDate: 2000-01-23T04:56:07.000+00:00
              histories:
              - date: 2000-01-23T04:56:07.000+00:00
                state: null
              - date: 2000-01-23T04:56:07.000+00:00
                state: null
              startDate: 2000-01-23T04:56:07.000+00:00
            items: items
            flowId: flowId
            value: value
            taskId: taskId
            attempts:
            - logFile: https://openapi-generator.tech
              metrics:
              - name: name
                type: type
                value: ""
                tags:
                  key: tags
                timestamp: 2000-01-23T04:56:07.000+00:00
              - name: name
                type: type
                value: ""
                tags:
                  key: tags
                timestamp: 2000-01-23T04:56:07.000+00:00
              state:
                duration: duration
                current: CREATED
                endDate: 2000-01-23T04:56:07.000+00:00
                histories:
                - date: 2000-01-23T04:56:07.000+00:00
                  state: null
                - date: 2000-01-23T04:56:07.000+00:00
                  state: null
                startDate: 2000-01-23T04:56:07.000+00:00
            - logFile: https://openapi-generator.tech
              metrics:
              - name: name
                type: type
                value: ""
                tags:
                  key: tags
                timestamp: 2000-01-23T04:56:07.000+00:00
              - name: name
                type: type
                value: ""
                tags:
                  key: tags
                timestamp: 2000-01-23T04:56:07.000+00:00
              state:
                duration: duration
                current: CREATED
                endDate: 2000-01-23T04:56:07.000+00:00
                histories:
                - date: 2000-01-23T04:56:07.000+00:00
                  state: null
                - date: 2000-01-23T04:56:07.000+00:00
                  state: null
                startDate: 2000-01-23T04:56:07.000+00:00
          parentId: parentId
          labels:
          - value: value
            key: key
          - value: value
            key: key
          flowRevision: 0
          deleted: true
          namespace: namespace
          scheduleDate: 2000-01-23T04:56:07.000+00:00
          id: id
          state:
            duration: duration
            current: CREATED
            endDate: 2000-01-23T04:56:07.000+00:00
            histories:
            - date: 2000-01-23T04:56:07.000+00:00
              state: null
            - date: 2000-01-23T04:56:07.000+00:00
              state: null
            startDate: 2000-01-23T04:56:07.000+00:00
          originalId: originalId
          flowId: flowId
      properties:
        results:
          items:
            $ref: '#/components/schemas/Execution'
          type: array
        total:
          format: int64
          type: integer
      required:
      - results
      - total
      type: object
    PagedResults_Flow_:
      example:
        total: 0
        results:
        - outputs:
          - displayName: displayName
            description: description
            id: id
            type: STRING
            value: ""
          - displayName: displayName
            description: description
            id: id
            type: STRING
            value: ""
          variables:
            key: ""
          listeners:
          - description: description
            conditions:
            - type: type
            - type: type
            tasks:
            - allowFailure: true
              logLevel: ERROR
              runIf: runIf
              description: description
              disabled: true
              id: id
              workerGroup:
                fallback: FAIL
                key: key
              type: type
              logToFile: true
              retry: "{}"
              timeout:
                expression: expression
              allowWarning: true
            - allowFailure: true
              logLevel: ERROR
              runIf: runIf
              description: description
              disabled: true
              id: id
              workerGroup:
                fallback: FAIL
                key: key
              type: type
              logToFile: true
              retry: "{}"
              timeout:
                expression: expression
              allowWarning: true
          - description: description
            conditions:
            - type: type
            - type: type
            tasks:
            - allowFailure: true
              logLevel: ERROR
              runIf: runIf
              description: description
              disabled: true
              id: id
              workerGroup:
                fallback: FAIL
                key: key
              type: type
              logToFile: true
              retry: "{}"
              timeout:
                expression: expression
              allowWarning: true
            - allowFailure: true
              logLevel: ERROR
              runIf: runIf
              description: description
              disabled: true
              id: id
              workerGroup:
                fallback: FAIL
                key: key
              type: type
              logToFile: true
              retry: "{}"
              timeout:
                expression: expression
              allowWarning: true
          inputs:
          - dependsOn: ""
            defaults: ""
            displayName: displayName
            name: name
            description: description
            id: id
            type: ""
            required: true
          - dependsOn: ""
            defaults: ""
            displayName: displayName
            name: name
            description: description
            id: id
            type: ""
            required: true
          description: description
          sla:
          - id: id
            type: MAX_DURATION
            behavior: FAIL
            labels:
              last: ""
              first: ""
              empty: true
          - id: id
            type: MAX_DURATION
            behavior: FAIL
            labels:
              last: ""
              first: ""
              empty: true
          triggers:
          - minLogLevel: ""
            logLevel: null
            stopAfter:
            - CREATED
            - CREATED
            description: description
            disabled: true
            id: id
            workerGroup:
              fallback: FAIL
              key: key
            type: type
            conditions:
            - type: type
            - type: type
            logToFile: true
            labels:
              last: ""
              first: ""
              empty: true
          - minLogLevel: ""
            logLevel: null
            stopAfter:
            - CREATED
            - CREATED
            description: description
            disabled: true
            id: id
            workerGroup:
              fallback: FAIL
              key: key
            type: type
            conditions:
            - type: type
            - type: type
            logToFile: true
            labels:
              last: ""
              first: ""
              empty: true
          pluginDefaults:
          - forced: true
            values:
              key: ""
            type: type
          - forced: true
            values:
              key: ""
            type: type
          revision: 1
          labels: null
          concurrency:
            limit: 0
            behavior: QUEUE
          deleted: true
          taskDefaults:
          - forced: true
            values:
              key: ""
            type: type
          - forced: true
            values:
              key: ""
            type: type
          namespace: namespace
          disabled: true
          id: id
          tasks:
          - allowFailure: true
            logLevel: ERROR
            runIf: runIf
            description: description
            disabled: true
            id: id
            workerGroup:
              fallback: FAIL
              key: key
            type: type
            logToFile: true
            retry: "{}"
            timeout:
              expression: expression
            allowWarning: true
          - allowFailure: true
            logLevel: ERROR
            runIf: runIf
            description: description
            disabled: true
            id: id
            workerGroup:
              fallback: FAIL
              key: key
            type: type
            logToFile: true
            retry: "{}"
            timeout:
              expression: expression
            allowWarning: true
          errors:
          - allowFailure: true
            logLevel: ERROR
            runIf: runIf
            description: description
            disabled: true
            id: id
            workerGroup:
              fallback: FAIL
              key: key
            type: type
            logToFile: true
            retry: "{}"
            timeout:
              expression: expression
            allowWarning: true
          - allowFailure: true
            logLevel: ERROR
            runIf: runIf
            description: description
            disabled: true
            id: id
            workerGroup:
              fallback: FAIL
              key: key
            type: type
            logToFile: true
            retry: "{}"
            timeout:
              expression: expression
            allowWarning: true
          retry: null
        - outputs:
          - displayName: displayName
            description: description
            id: id
            type: STRING
            value: ""
          - displayName: displayName
            description: description
            id: id
            type: STRING
            value: ""
          variables:
            key: ""
          listeners:
          - description: description
            conditions:
            - type: type
            - type: type
            tasks:
            - allowFailure: true
              logLevel: ERROR
              runIf: runIf
              description: description
              disabled: true
              id: id
              workerGroup:
                fallback: FAIL
                key: key
              type: type
              logToFile: true
              retry: "{}"
              timeout:
                expression: expression
              allowWarning: true
            - allowFailure: true
              logLevel: ERROR
              runIf: runIf
              description: description
              disabled: true
              id: id
              workerGroup:
                fallback: FAIL
                key: key
              type: type
              logToFile: true
              retry: "{}"
              timeout:
                expression: expression
              allowWarning: true
          - description: description
            conditions:
            - type: type
            - type: type
            tasks:
            - allowFailure: true
              logLevel: ERROR
              runIf: runIf
              description: description
              disabled: true
              id: id
              workerGroup:
                fallback: FAIL
                key: key
              type: type
              logToFile: true
              retry: "{}"
              timeout:
                expression: expression
              allowWarning: true
            - allowFailure: true
              logLevel: ERROR
              runIf: runIf
              description: description
              disabled: true
              id: id
              workerGroup:
                fallback: FAIL
                key: key
              type: type
              logToFile: true
              retry: "{}"
              timeout:
                expression: expression
              allowWarning: true
          inputs:
          - dependsOn: ""
            defaults: ""
            displayName: displayName
            name: name
            description: description
            id: id
            type: ""
            required: true
          - dependsOn: ""
            defaults: ""
            displayName: displayName
            name: name
            description: description
            id: id
            type: ""
            required: true
          description: description
          sla:
          - id: id
            type: MAX_DURATION
            behavior: FAIL
            labels:
              last: ""
              first: ""
              empty: true
          - id: id
            type: MAX_DURATION
            behavior: FAIL
            labels:
              last: ""
              first: ""
              empty: true
          triggers:
          - minLogLevel: ""
            logLevel: null
            stopAfter:
            - CREATED
            - CREATED
            description: description
            disabled: true
            id: id
            workerGroup:
              fallback: FAIL
              key: key
            type: type
            conditions:
            - type: type
            - type: type
            logToFile: true
            labels:
              last: ""
              first: ""
              empty: true
          - minLogLevel: ""
            logLevel: null
            stopAfter:
            - CREATED
            - CREATED
            description: description
            disabled: true
            id: id
            workerGroup:
              fallback: FAIL
              key: key
            type: type
            conditions:
            - type: type
            - type: type
            logToFile: true
            labels:
              last: ""
              first: ""
              empty: true
          pluginDefaults:
          - forced: true
            values:
              key: ""
            type: type
          - forced: true
            values:
              key: ""
            type: type
          revision: 1
          labels: null
          concurrency:
            limit: 0
            behavior: QUEUE
          deleted: true
          taskDefaults:
          - forced: true
            values:
              key: ""
            type: type
          - forced: true
            values:
              key: ""
            type: type
          namespace: namespace
          disabled: true
          id: id
          tasks:
          - allowFailure: true
            logLevel: ERROR
            runIf: runIf
            description: description
            disabled: true
            id: id
            workerGroup:
              fallback: FAIL
              key: key
            type: type
            logToFile: true
            retry: "{}"
            timeout:
              expression: expression
            allowWarning: true
          - allowFailure: true
            logLevel: ERROR
            runIf: runIf
            description: description
            disabled: true
            id: id
            workerGroup:
              fallback: FAIL
              key: key
            type: type
            logToFile: true
            retry: "{}"
            timeout:
              expression: expression
            allowWarning: true
          errors:
          - allowFailure: true
            logLevel: ERROR
            runIf: runIf
            description: description
            disabled: true
            id: id
            workerGroup:
              fallback: FAIL
              key: key
            type: type
            logToFile: true
            retry: "{}"
            timeout:
              expression: expression
            allowWarning: true
          - allowFailure: true
            logLevel: ERROR
            runIf: runIf
            description: description
            disabled: true
            id: id
            workerGroup:
              fallback: FAIL
              key: key
            type: type
            logToFile: true
            retry: "{}"
            timeout:
              expression: expression
            allowWarning: true
          retry: null
      properties:
        results:
          items:
            $ref: '#/components/schemas/Flow'
          type: array
        total:
          format: int64
          type: integer
      required:
      - results
      - total
      type: object
    PagedResults_Group_:
      example:
        total: 0
        results:
        - deleted: true
          provider:
            securityIntegrationId: securityIntegrationId
            externalId: externalId
            attributes:
              key: ""
            securityIntegrationName: securityIntegrationName
          name: name
          description: description
          id: id
        - deleted: true
          provider:
            securityIntegrationId: securityIntegrationId
            externalId: externalId
            attributes:
              key: ""
            securityIntegrationName: securityIntegrationName
          name: name
          description: description
          id: id
      properties:
        results:
          items:
            $ref: '#/components/schemas/Group'
          type: array
        total:
          format: int64
          type: integer
      required:
      - results
      - total
      type: object
    PagedResults_Invitation_:
      example:
        total: 0
        results:
        - expiredAt: 2000-01-23T04:56:07.000+00:00
          deleted: true
          bindings:
          - deleted: true
            namespaceId: namespaceId
            roleId: roleId
            externalId: externalId
            id: id
            type: USER
          - deleted: true
            namespaceId: namespaceId
            roleId: roleId
            externalId: externalId
            id: id
            type: USER
          groupIds:
          - groupIds
          - groupIds
          tenantId: tenantId
          link: link
          id: id
          sentAt: 2000-01-23T04:56:07.000+00:00
          isExpired: true
          email: email
          status: PENDING
          acceptedAt: 2000-01-23T04:56:07.000+00:00
        - expiredAt: 2000-01-23T04:56:07.000+00:00
          deleted: true
          bindings:
          - deleted: true
            namespaceId: namespaceId
            roleId: roleId
            externalId: externalId
            id: id
            type: USER
          - deleted: true
            namespaceId: namespaceId
            roleId: roleId
            externalId: externalId
            id: id
            type: USER
          groupIds:
          - groupIds
          - groupIds
          tenantId: tenantId
          link: link
          id: id
          sentAt: 2000-01-23T04:56:07.000+00:00
          isExpired: true
          email: email
          status: PENDING
          acceptedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        results:
          items:
            $ref: '#/components/schemas/Invitation'
          type: array
        total:
          format: int64
          type: integer
      required:
      - results
      - total
      type: object
    PagedResults_LogEntry_:
      example:
        total: 6
        results:
        - taskRunId: taskRunId
          attemptNumber: 0
          executionId: executionId
          deleted: true
          level: ERROR
          triggerId: triggerId
          namespace: namespace
          thread: thread
          message: message
          flowId: flowId
          taskId: taskId
          timestamp: 2000-01-23T04:56:07.000+00:00
        - taskRunId: taskRunId
          attemptNumber: 0
          executionId: executionId
          deleted: true
          level: ERROR
          triggerId: triggerId
          namespace: namespace
          thread: thread
          message: message
          flowId: flowId
          taskId: taskId
          timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        results:
          items:
            $ref: '#/components/schemas/LogEntry'
          type: array
        total:
          format: int64
          type: integer
      required:
      - results
      - total
      type: object
    PagedResults_Map_String.Object__:
      example:
        total: 0
        results:
        - key: ""
        - key: ""
      properties:
        results:
          items:
            additionalProperties: true
            type: object
          type: array
        total:
          format: int64
          type: integer
      required:
      - results
      - total
      type: object
    PagedResults_MetricEntry_:
      example:
        total: 6
        results:
        - taskRunId: taskRunId
          executionId: executionId
          deleted: true
          namespace: namespace
          name: name
          type: type
          flowId: flowId
          value: 0.8008281904610115
          taskId: taskId
          timestamp: 2000-01-23T04:56:07.000+00:00
          tags:
            key: tags
        - taskRunId: taskRunId
          executionId: executionId
          deleted: true
          namespace: namespace
          name: name
          type: type
          flowId: flowId
          value: 0.8008281904610115
          taskId: taskId
          timestamp: 2000-01-23T04:56:07.000+00:00
          tags:
            key: tags
      properties:
        results:
          items:
            $ref: '#/components/schemas/MetricEntry'
          type: array
        total:
          format: int64
          type: integer
      required:
      - results
      - total
      type: object
    PagedResults_NamespaceWithDisabled_:
      example:
        total: 0
        results:
        - variables:
            key: ""
          secretConfiguration:
            key: ""
          description: description
          pluginDefaults:
          - forced: true
            values:
              key: ""
            type: type
          - forced: true
            values:
              key: ""
            type: type
          allowedNamespaces:
          - namespace: namespace
          - namespace: namespace
          deleted: true
          allowedTriggers:
          - namespace: namespace
            flowId: flowId
          - namespace: namespace
            flowId: flowId
          storageConfiguration:
            key: ""
          secretType: secretType
          storageType: storageType
          disabled: true
          id: id
          workerGroup:
            fallback: FAIL
            key: key
        - variables:
            key: ""
          secretConfiguration:
            key: ""
          description: description
          pluginDefaults:
          - forced: true
            values:
              key: ""
            type: type
          - forced: true
            values:
              key: ""
            type: type
          allowedNamespaces:
          - namespace: namespace
          - namespace: namespace
          deleted: true
          allowedTriggers:
          - namespace: namespace
            flowId: flowId
          - namespace: namespace
            flowId: flowId
          storageConfiguration:
            key: ""
          secretType: secretType
          storageType: storageType
          disabled: true
          id: id
          workerGroup:
            fallback: FAIL
            key: key
      properties:
        results:
          items:
            $ref: '#/components/schemas/NamespaceWithDisabled'
          type: array
        total:
          format: int64
          type: integer
      required:
      - results
      - total
      type: object
    PagedResults_Role_:
      example:
        total: 0
        results:
        - isDefault: true
          deleted: true
          permissions:
            NAMESPACE:
              last: null
              first: null
              empty: true
            APPEXECUTION:
              last: null
              first: null
              empty: true
            APP:
              last: null
              first: null
              empty: true
            BLUEPRINT:
              last: null
              first: null
              empty: true
            EXECUTION:
              last: null
              first: null
              empty: true
            APITOKEN:
              last: null
              first: null
              empty: true
            USER:
              last: null
              first: null
              empty: true
            TENANT:
              last: null
              first: null
              empty: true
            FLOW:
              last: null
              first: null
              empty: true
            ROLE:
              last: null
              first: null
              empty: true
            GROUP:
              last: null
              first: null
              empty: true
            DASHBOARD:
              last: null
              first: null
              empty: true
            ME:
              last: null
              first: null
              empty: true
            IMPERSONATE:
              last: null
              first: null
              empty: true
            TEMPLATE:
              last: null
              first: null
              empty: true
            AUDITLOG:
              last: null
              first: null
              empty: true
            SETTING:
              last: null
              first: null
              empty: true
            INFRASTRUCTURE:
              last: null
              first: null
              empty: true
            KVSTORE:
              last: null
              first: null
              empty: true
            BINDING:
              last: null
              first: null
              empty: true
            SECRET:
              last: null
              first: null
              empty: true
          name: name
          description: description
          id: id
          isManaged: true
        - isDefault: true
          deleted: true
          permissions:
            NAMESPACE:
              last: null
              first: null
              empty: true
            APPEXECUTION:
              last: null
              first: null
              empty: true
            APP:
              last: null
              first: null
              empty: true
            BLUEPRINT:
              last: null
              first: null
              empty: true
            EXECUTION:
              last: null
              first: null
              empty: true
            APITOKEN:
              last: null
              first: null
              empty: true
            USER:
              last: null
              first: null
              empty: true
            TENANT:
              last: null
              first: null
              empty: true
            FLOW:
              last: null
              first: null
              empty: true
            ROLE:
              last: null
              first: null
              empty: true
            GROUP:
              last: null
              first: null
              empty: true
            DASHBOARD:
              last: null
              first: null
              empty: true
            ME:
              last: null
              first: null
              empty: true
            IMPERSONATE:
              last: null
              first: null
              empty: true
            TEMPLATE:
              last: null
              first: null
              empty: true
            AUDITLOG:
              last: null
              first: null
              empty: true
            SETTING:
              last: null
              first: null
              empty: true
            INFRASTRUCTURE:
              last: null
              first: null
              empty: true
            KVSTORE:
              last: null
              first: null
              empty: true
            BINDING:
              last: null
              first: null
              empty: true
            SECRET:
              last: null
              first: null
              empty: true
          name: name
          description: description
          id: id
          isManaged: true
      properties:
        results:
          items:
            $ref: '#/components/schemas/Role'
          type: array
        total:
          format: int64
          type: integer
      required:
      - results
      - total
      type: object
    PagedResults_SearchResult_Flow__:
      example:
        total: 0
        results:
        - model:
            outputs:
            - displayName: displayName
              description: description
              id: id
              type: STRING
              value: ""
            - displayName: displayName
              description: description
              id: id
              type: STRING
              value: ""
            variables:
              key: ""
            listeners:
            - description: description
              conditions:
              - type: type
              - type: type
              tasks:
              - allowFailure: true
                logLevel: ERROR
                runIf: runIf
                description: description
                disabled: true
                id: id
                workerGroup:
                  fallback: FAIL
                  key: key
                type: type
                logToFile: true
                retry: "{}"
                timeout:
                  expression: expression
                allowWarning: true
              - allowFailure: true
                logLevel: ERROR
                runIf: runIf
                description: description
                disabled: true
                id: id
                workerGroup:
                  fallback: FAIL
                  key: key
                type: type
                logToFile: true
                retry: "{}"
                timeout:
                  expression: expression
                allowWarning: true
            - description: description
              conditions:
              - type: type
              - type: type
              tasks:
              - allowFailure: true
                logLevel: ERROR
                runIf: runIf
                description: description
                disabled: true
                id: id
                workerGroup:
                  fallback: FAIL
                  key: key
                type: type
                logToFile: true
                retry: "{}"
                timeout:
                  expression: expression
                allowWarning: true
              - allowFailure: true
                logLevel: ERROR
                runIf: runIf
                description: description
                disabled: true
                id: id
                workerGroup:
                  fallback: FAIL
                  key: key
                type: type
                logToFile: true
                retry: "{}"
                timeout:
                  expression: expression
                allowWarning: true
            inputs:
            - dependsOn: ""
              defaults: ""
              displayName: displayName
              name: name
              description: description
              id: id
              type: ""
              required: true
            - dependsOn: ""
              defaults: ""
              displayName: displayName
              name: name
              description: description
              id: id
              type: ""
              required: true
            description: description
            sla:
            - id: id
              type: MAX_DURATION
              behavior: FAIL
              labels:
                last: ""
                first: ""
                empty: true
            - id: id
              type: MAX_DURATION
              behavior: FAIL
              labels:
                last: ""
                first: ""
                empty: true
            triggers:
            - minLogLevel: ""
              logLevel: null
              stopAfter:
              - CREATED
              - CREATED
              description: description
              disabled: true
              id: id
              workerGroup:
                fallback: FAIL
                key: key
              type: type
              conditions:
              - type: type
              - type: type
              logToFile: true
              labels:
                last: ""
                first: ""
                empty: true
            - minLogLevel: ""
              logLevel: null
              stopAfter:
              - CREATED
              - CREATED
              description: description
              disabled: true
              id: id
              workerGroup:
                fallback: FAIL
                key: key
              type: type
              conditions:
              - type: type
              - type: type
              logToFile: true
              labels:
                last: ""
                first: ""
                empty: true
            pluginDefaults:
            - forced: true
              values:
                key: ""
              type: type
            - forced: true
              values:
                key: ""
              type: type
            revision: 1
            labels: null
            concurrency:
              limit: 0
              behavior: QUEUE
            deleted: true
            taskDefaults:
            - forced: true
              values:
                key: ""
              type: type
            - forced: true
              values:
                key: ""
              type: type
            namespace: namespace
            disabled: true
            id: id
            tasks:
            - allowFailure: true
              logLevel: ERROR
              runIf: runIf
              description: description
              disabled: true
              id: id
              workerGroup:
                fallback: FAIL
                key: key
              type: type
              logToFile: true
              retry: "{}"
              timeout:
                expression: expression
              allowWarning: true
            - allowFailure: true
              logLevel: ERROR
              runIf: runIf
              description: description
              disabled: true
              id: id
              workerGroup:
                fallback: FAIL
                key: key
              type: type
              logToFile: true
              retry: "{}"
              timeout:
                expression: expression
              allowWarning: true
            errors:
            - allowFailure: true
              logLevel: ERROR
              runIf: runIf
              description: description
              disabled: true
              id: id
              workerGroup:
                fallback: FAIL
                key: key
              type: type
              logToFile: true
              retry: "{}"
              timeout:
                expression: expression
              allowWarning: true
            - allowFailure: true
              logLevel: ERROR
              runIf: runIf
              description: description
              disabled: true
              id: id
              workerGroup:
                fallback: FAIL
                key: key
              type: type
              logToFile: true
              retry: "{}"
              timeout:
                expression: expression
              allowWarning: true
            retry: null
          fragments:
          - fragments
          - fragments
        - model:
            outputs:
            - displayName: displayName
              description: description
              id: id
              type: STRING
              value: ""
            - displayName: displayName
              description: description
              id: id
              type: STRING
              value: ""
            variables:
              key: ""
            listeners:
            - description: description
              conditions:
              - type: type
              - type: type
              tasks:
              - allowFailure: true
                logLevel: ERROR
                runIf: runIf
                description: description
                disabled: true
                id: id
                workerGroup:
                  fallback: FAIL
                  key: key
                type: type
                logToFile: true
                retry: "{}"
                timeout:
                  expression: expression
                allowWarning: true
              - allowFailure: true
                logLevel: ERROR
                runIf: runIf
                description: description
                disabled: true
                id: id
                workerGroup:
                  fallback: FAIL
                  key: key
                type: type
                logToFile: true
                retry: "{}"
                timeout:
                  expression: expression
                allowWarning: true
            - description: description
              conditions:
              - type: type
              - type: type
              tasks:
              - allowFailure: true
                logLevel: ERROR
                runIf: runIf
                description: description
                disabled: true
                id: id
                workerGroup:
                  fallback: FAIL
                  key: key
                type: type
                logToFile: true
                retry: "{}"
                timeout:
                  expression: expression
                allowWarning: true
              - allowFailure: true
                logLevel: ERROR
                runIf: runIf
                description: description
                disabled: true
                id: id
                workerGroup:
                  fallback: FAIL
                  key: key
                type: type
                logToFile: true
                retry: "{}"
                timeout:
                  expression: expression
                allowWarning: true
            inputs:
            - dependsOn: ""
              defaults: ""
              displayName: displayName
              name: name
              description: description
              id: id
              type: ""
              required: true
            - dependsOn: ""
              defaults: ""
              displayName: displayName
              name: name
              description: description
              id: id
              type: ""
              required: true
            description: description
            sla:
            - id: id
              type: MAX_DURATION
              behavior: FAIL
              labels:
                last: ""
                first: ""
                empty: true
            - id: id
              type: MAX_DURATION
              behavior: FAIL
              labels:
                last: ""
                first: ""
                empty: true
            triggers:
            - minLogLevel: ""
              logLevel: null
              stopAfter:
              - CREATED
              - CREATED
              description: description
              disabled: true
              id: id
              workerGroup:
                fallback: FAIL
                key: key
              type: type
              conditions:
              - type: type
              - type: type
              logToFile: true
              labels:
                last: ""
                first: ""
                empty: true
            - minLogLevel: ""
              logLevel: null
              stopAfter:
              - CREATED
              - CREATED
              description: description
              disabled: true
              id: id
              workerGroup:
                fallback: FAIL
                key: key
              type: type
              conditions:
              - type: type
              - type: type
              logToFile: true
              labels:
                last: ""
                first: ""
                empty: true
            pluginDefaults:
            - forced: true
              values:
                key: ""
              type: type
            - forced: true
              values:
                key: ""
              type: type
            revision: 1
            labels: null
            concurrency:
              limit: 0
              behavior: QUEUE
            deleted: true
            taskDefaults:
            - forced: true
              values:
                key: ""
              type: type
            - forced: true
              values:
                key: ""
              type: type
            namespace: namespace
            disabled: true
            id: id
            tasks:
            - allowFailure: true
              logLevel: ERROR
              runIf: runIf
              description: description
              disabled: true
              id: id
              workerGroup:
                fallback: FAIL
                key: key
              type: type
              logToFile: true
              retry: "{}"
              timeout:
                expression: expression
              allowWarning: true
            - allowFailure: true
              logLevel: ERROR
              runIf: runIf
              description: description
              disabled: true
              id: id
              workerGroup:
                fallback: FAIL
                key: key
              type: type
              logToFile: true
              retry: "{}"
              timeout:
                expression: expression
              allowWarning: true
            errors:
            - allowFailure: true
              logLevel: ERROR
              runIf: runIf
              description: description
              disabled: true
              id: id
              workerGroup:
                fallback: FAIL
                key: key
              type: type
              logToFile: true
              retry: "{}"
              timeout:
                expression: expression
              allowWarning: true
            - allowFailure: true
              logLevel: ERROR
              runIf: runIf
              description: description
              disabled: true
              id: id
              workerGroup:
                fallback: FAIL
                key: key
              type: type
              logToFile: true
              retry: "{}"
              timeout:
                expression: expression
              allowWarning: true
            retry: null
          fragments:
          - fragments
          - fragments
      properties:
        results:
          items:
            $ref: '#/components/schemas/SearchResult_Flow_'
          type: array
        total:
          format: int64
          type: integer
      required:
      - results
      - total
      type: object
    PagedResults_TaskRun_:
      example:
        total: 0
        results:
        - outputs:
            key: ""
          parentTaskRunId: parentTaskRunId
          executionId: executionId
          namespace: namespace
          iteration: 6
          dynamic: true
          id: id
          state:
            duration: duration
            current: CREATED
            endDate: 2000-01-23T04:56:07.000+00:00
            histories:
            - date: 2000-01-23T04:56:07.000+00:00
              state: null
            - date: 2000-01-23T04:56:07.000+00:00
              state: null
            startDate: 2000-01-23T04:56:07.000+00:00
          items: items
          flowId: flowId
          value: value
          taskId: taskId
          attempts:
          - logFile: https://openapi-generator.tech
            metrics:
            - name: name
              type: type
              value: ""
              tags:
                key: tags
              timestamp: 2000-01-23T04:56:07.000+00:00
            - name: name
              type: type
              value: ""
              tags:
                key: tags
              timestamp: 2000-01-23T04:56:07.000+00:00
            state:
              duration: duration
              current: CREATED
              endDate: 2000-01-23T04:56:07.000+00:00
              histories:
              - date: 2000-01-23T04:56:07.000+00:00
                state: null
              - date: 2000-01-23T04:56:07.000+00:00
                state: null
              startDate: 2000-01-23T04:56:07.000+00:00
          - logFile: https://openapi-generator.tech
            metrics:
            - name: name
              type: type
              value: ""
              tags:
                key: tags
              timestamp: 2000-01-23T04:56:07.000+00:00
            - name: name
              type: type
              value: ""
              tags:
                key: tags
              timestamp: 2000-01-23T04:56:07.000+00:00
            state:
              duration: duration
              current: CREATED
              endDate: 2000-01-23T04:56:07.000+00:00
              histories:
              - date: 2000-01-23T04:56:07.000+00:00
                state: null
              - date: 2000-01-23T04:56:07.000+00:00
                state: null
              startDate: 2000-01-23T04:56:07.000+00:00
        - outputs:
            key: ""
          parentTaskRunId: parentTaskRunId
          executionId: executionId
          namespace: namespace
          iteration: 6
          dynamic: true
          id: id
          state:
            duration: duration
            current: CREATED
            endDate: 2000-01-23T04:56:07.000+00:00
            histories:
            - date: 2000-01-23T04:56:07.000+00:00
              state: null
            - date: 2000-01-23T04:56:07.000+00:00
              state: null
            startDate: 2000-01-23T04:56:07.000+00:00
          items: items
          flowId: flowId
          value: value
          taskId: taskId
          attempts:
          - logFile: https://openapi-generator.tech
            metrics:
            - name: name
              type: type
              value: ""
              tags:
                key: tags
              timestamp: 2000-01-23T04:56:07.000+00:00
            - name: name
              type: type
              value: ""
              tags:
                key: tags
              timestamp: 2000-01-23T04:56:07.000+00:00
            state:
              duration: duration
              current: CREATED
              endDate: 2000-01-23T04:56:07.000+00:00
              histories:
              - date: 2000-01-23T04:56:07.000+00:00
                state: null
              - date: 2000-01-23T04:56:07.000+00:00
                state: null
              startDate: 2000-01-23T04:56:07.000+00:00
          - logFile: https://openapi-generator.tech
            metrics:
            - name: name
              type: type
              value: ""
              tags:
                key: tags
              timestamp: 2000-01-23T04:56:07.000+00:00
            - name: name
              type: type
              value: ""
              tags:
                key: tags
              timestamp: 2000-01-23T04:56:07.000+00:00
            state:
              duration: duration
              current: CREATED
              endDate: 2000-01-23T04:56:07.000+00:00
              histories:
              - date: 2000-01-23T04:56:07.000+00:00
                state: null
              - date: 2000-01-23T04:56:07.000+00:00
                state: null
              startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        results:
          items:
            $ref: '#/components/schemas/TaskRun'
          type: array
        total:
          format: int64
          type: integer
      required:
      - results
      - total
      type: object
    PagedResults_Template_:
      example:
        total: 0
        results:
        - deleted: true
          namespace: namespace
          description: description
          id: id
          tasks:
          - allowFailure: true
            logLevel: ERROR
            runIf: runIf
            description: description
            disabled: true
            id: id
            workerGroup:
              fallback: FAIL
              key: key
            type: type
            logToFile: true
            retry: "{}"
            timeout:
              expression: expression
            allowWarning: true
          - allowFailure: true
            logLevel: ERROR
            runIf: runIf
            description: description
            disabled: true
            id: id
            workerGroup:
              fallback: FAIL
              key: key
            type: type
            logToFile: true
            retry: "{}"
            timeout:
              expression: expression
            allowWarning: true
          errors:
          - allowFailure: true
            logLevel: ERROR
            runIf: runIf
            description: description
            disabled: true
            id: id
            workerGroup:
              fallback: FAIL
              key: key
            type: type
            logToFile: true
            retry: "{}"
            timeout:
              expression: expression
            allowWarning: true
          - allowFailure: true
            logLevel: ERROR
            runIf: runIf
            description: description
            disabled: true
            id: id
            workerGroup:
              fallback: FAIL
              key: key
            type: type
            logToFile: true
            retry: "{}"
            timeout:
              expression: expression
            allowWarning: true
        - deleted: true
          namespace: namespace
          description: description
          id: id
          tasks:
          - allowFailure: true
            logLevel: ERROR
            runIf: runIf
            description: description
            disabled: true
            id: id
            workerGroup:
              fallback: FAIL
              key: key
            type: type
            logToFile: true
            retry: "{}"
            timeout:
              expression: expression
            allowWarning: true
          - allowFailure: true
            logLevel: ERROR
            runIf: runIf
            description: description
            disabled: true
            id: id
            workerGroup:
              fallback: FAIL
              key: key
            type: type
            logToFile: true
            retry: "{}"
            timeout:
              expression: expression
            allowWarning: true
          errors:
          - allowFailure: true
            logLevel: ERROR
            runIf: runIf
            description: description
            disabled: true
            id: id
            workerGroup:
              fallback: FAIL
              key: key
            type: type
            logToFile: true
            retry: "{}"
            timeout:
              expression: expression
            allowWarning: true
          - allowFailure: true
            logLevel: ERROR
            runIf: runIf
            description: description
            disabled: true
            id: id
            workerGroup:
              fallback: FAIL
              key: key
            type: type
            logToFile: true
            retry: "{}"
            timeout:
              expression: expression
            allowWarning: true
      properties:
        results:
          items:
            $ref: '#/components/schemas/Template'
          type: array
        total:
          format: int64
          type: integer
      required:
      - results
      - total
      type: object
    PagedResults_Tenant_:
      example:
        total: 0
        results:
        - deleted: true
          storageConfiguration:
            key: ""
          secretType: secretType
          secretConfiguration:
            key: ""
          name: name
          storageType: storageType
          id: id
          workerGroup:
            fallback: FAIL
            key: key
        - deleted: true
          storageConfiguration:
            key: ""
          secretType: secretType
          secretConfiguration:
            key: ""
          name: name
          storageType: storageType
          id: id
          workerGroup:
            fallback: FAIL
            key: key
      properties:
        results:
          items:
            $ref: '#/components/schemas/Tenant'
          type: array
        total:
          format: int64
          type: integer
      required:
      - results
      - total
      type: object
    PagedResults_TriggerController.Triggers_:
      example:
        total: 0
        results:
        - triggerContext:
            date: 2000-01-23T04:56:07.000+00:00
            workerId: workerId
            nextExecutionDate: 2000-01-23T04:56:07.000+00:00
            stopAfter:
            - CREATED
            - CREATED
            triggerId: triggerId
            updatedDate: 2000-01-23T04:56:07.000+00:00
            executionId: executionId
            tenantId: tenantId
            namespace: namespace
            backfill: ""
            evaluateRunningDate: 2000-01-23T04:56:07.000+00:00
            disabled: true
            flowId: flowId
          abstractTrigger:
            minLogLevel: ""
            logLevel: null
            stopAfter:
            - CREATED
            - CREATED
            description: description
            disabled: true
            id: id
            workerGroup:
              fallback: FAIL
              key: key
            type: type
            conditions:
            - type: type
            - type: type
            logToFile: true
            labels:
              last: ""
              first: ""
              empty: true
        - triggerContext:
            date: 2000-01-23T04:56:07.000+00:00
            workerId: workerId
            nextExecutionDate: 2000-01-23T04:56:07.000+00:00
            stopAfter:
            - CREATED
            - CREATED
            triggerId: triggerId
            updatedDate: 2000-01-23T04:56:07.000+00:00
            executionId: executionId
            tenantId: tenantId
            namespace: namespace
            backfill: ""
            evaluateRunningDate: 2000-01-23T04:56:07.000+00:00
            disabled: true
            flowId: flowId
          abstractTrigger:
            minLogLevel: ""
            logLevel: null
            stopAfter:
            - CREATED
            - CREATED
            description: description
            disabled: true
            id: id
            workerGroup:
              fallback: FAIL
              key: key
            type: type
            conditions:
            - type: type
            - type: type
            logToFile: true
            labels:
              last: ""
              first: ""
              empty: true
      properties:
        results:
          items:
            $ref: '#/components/schemas/TriggerController.Triggers'
          type: array
        total:
          format: int64
          type: integer
      required:
      - results
      - total
      type: object
    PagedResults_Trigger_:
      example:
        total: 0
        results:
        - date: 2000-01-23T04:56:07.000+00:00
          workerId: workerId
          nextExecutionDate: 2000-01-23T04:56:07.000+00:00
          stopAfter:
          - CREATED
          - CREATED
          triggerId: triggerId
          updatedDate: 2000-01-23T04:56:07.000+00:00
          executionId: executionId
          tenantId: tenantId
          namespace: namespace
          backfill: ""
          evaluateRunningDate: 2000-01-23T04:56:07.000+00:00
          disabled: true
          flowId: flowId
        - date: 2000-01-23T04:56:07.000+00:00
          workerId: workerId
          nextExecutionDate: 2000-01-23T04:56:07.000+00:00
          stopAfter:
          - CREATED
          - CREATED
          triggerId: triggerId
          updatedDate: 2000-01-23T04:56:07.000+00:00
          executionId: executionId
          tenantId: tenantId
          namespace: namespace
          backfill: ""
          evaluateRunningDate: 2000-01-23T04:56:07.000+00:00
          disabled: true
          flowId: flowId
      properties:
        results:
          items:
            $ref: '#/components/schemas/Trigger'
          type: array
        total:
          format: int64
          type: integer
      required:
      - results
      - total
      type: object
    PatchOperation:
      example:
        path:
          valuePathExpression:
            attributeExpression: "{}"
            attributePath:
              urn: urn
              attributeBase: attributeBase
              subAttributeName: subAttributeName
              attributeName: attributeName
              fullyQualifiedAttributeName: fullyQualifiedAttributeName
              fullAttributeName: fullAttributeName
        operation: ADD
        value: ""
      properties:
        operation:
          $ref: '#/components/schemas/PatchOperation.Type'
        path:
          $ref: '#/components/schemas/PatchOperationPath'
        value: {}
      type: object
    PatchOperation.Type:
      enum:
      - ADD
      - REMOVE
      - REPLACE
      type: string
    PatchOperationPath:
      example:
        valuePathExpression:
          attributeExpression: "{}"
          attributePath:
            urn: urn
            attributeBase: attributeBase
            subAttributeName: subAttributeName
            attributeName: attributeName
            fullyQualifiedAttributeName: fullyQualifiedAttributeName
            fullAttributeName: fullAttributeName
      properties:
        valuePathExpression:
          $ref: '#/components/schemas/ValuePathExpression'
      required:
      - valuePathExpression
      type: object
    PatchRequest:
      allOf:
      - $ref: '#/components/schemas/BaseResource_PatchRequest_'
      - properties:
          patchOperationList:
            items:
              $ref: '#/components/schemas/PatchOperation'
            type: array
      example:
        schemas:
        - schemas
        - schemas
        patchOperationList:
        - path:
            valuePathExpression:
              attributeExpression: "{}"
              attributePath:
                urn: urn
                attributeBase: attributeBase
                subAttributeName: subAttributeName
                attributeName: attributeName
                fullyQualifiedAttributeName: fullyQualifiedAttributeName
                fullAttributeName: fullAttributeName
          operation: ADD
          value: ""
        - path:
            valuePathExpression:
              attributeExpression: "{}"
              attributePath:
                urn: urn
                attributeBase: attributeBase
                subAttributeName: subAttributeName
                attributeName: attributeName
                fullyQualifiedAttributeName: fullyQualifiedAttributeName
                fullAttributeName: fullAttributeName
          operation: ADD
          value: ""
      type: object
    Permission:
      enum:
      - FLOW
      - BLUEPRINT
      - TEMPLATE
      - NAMESPACE
      - EXECUTION
      - USER
      - GROUP
      - ROLE
      - BINDING
      - AUDITLOG
      - SECRET
      - KVSTORE
      - IMPERSONATE
      - SETTING
      - INFRASTRUCTURE
      - APP
      - APPEXECUTION
      - ME
      - APITOKEN
      - DASHBOARD
      - TENANT
      type: string
      x-deprecated:
      - TENANT
    Plugin:
      example:
        longDescription: longDescription
        storages:
        - storages
        - storages
        aliases:
        - aliases
        - aliases
        manifest:
          key: manifest
        taskRunners:
        - taskRunners
        - taskRunners
        subGroup: subGroup
        description: description
        title: title
        triggers:
        - triggers
        - triggers
        version: version
        secrets:
        - secrets
        - secrets
        license: license
        guides:
        - guides
        - guides
        appBlocks:
        - appBlocks
        - appBlocks
        name: name
        controllers:
        - controllers
        - controllers
        categories:
        - DATABASE
        - DATABASE
        conditions:
        - conditions
        - conditions
        tasks:
        - tasks
        - tasks
        group: group
        apps:
        - apps
        - apps
      properties:
        name:
          type: string
        title:
          type: string
        description:
          type: string
        license:
          type: string
        longDescription:
          type: string
        group:
          type: string
        version:
          type: string
        manifest:
          additionalProperties:
            type: string
          type: object
        tasks:
          items:
            type: string
          type: array
        triggers:
          items:
            type: string
          type: array
        conditions:
          items:
            type: string
          type: array
        controllers:
          items:
            type: string
          type: array
        storages:
          items:
            type: string
          type: array
        secrets:
          items:
            type: string
          type: array
        taskRunners:
          items:
            type: string
          type: array
        guides:
          items:
            type: string
          type: array
        aliases:
          items:
            type: string
          type: array
        apps:
          items:
            type: string
          type: array
        appBlocks:
          items:
            type: string
          type: array
        categories:
          items:
            $ref: '#/components/schemas/PluginSubGroup.PluginCategory'
          type: array
        subGroup:
          type: string
      type: object
    PluginDefault:
      example:
        forced: true
        values:
          key: ""
        type: type
      properties:
        type:
          type: string
        forced:
          type: boolean
        values:
          additionalProperties: true
          type: object
      required:
      - forced
      - type
      - values
      type: object
    PluginIcon:
      properties:
        name:
          type: string
        icon:
          type: string
        flowable:
          type: boolean
      type: object
    PluginSubGroup.PluginCategory:
      enum:
      - DATABASE
      - MESSAGING
      - SCRIPT
      - TRANSFORMATION
      - BATCH
      - ALERTING
      - CLOUD
      - STORAGE
      - OTHER
      - TOOL
      - AI
      - CORE
      - INGESTION
      - BI
      type: string
    PluginUsage:
      example:
        manifest:
          key: manifest
      properties:
        manifest:
          additionalProperties:
            type: string
          type: object
      type: object
    Property_Duration_:
      example:
        expression: expression
      properties:
        expression:
          type: string
      required:
      - expression
      type: object
    Relation:
      example:
        relationType: SEQUENTIAL
        value: value
      properties:
        relationType:
          $ref: '#/components/schemas/RelationType'
        value:
          type: string
      required:
      - relationType
      - value
      type: object
    RelationType:
      enum:
      - SEQUENTIAL
      - CHOICE
      - ERROR
      - PARALLEL
      - DYNAMIC
      type: string
    ResourceType:
      allOf:
      - $ref: '#/components/schemas/ScimResourceWithOptionalId'
      - $ref: '#/components/schemas/ScimResource'
      - $ref: '#/components/schemas/BaseResource_ScimResource_'
      - properties:
          id:
            type: string
          name:
            minLength: 1
            type: string
          description:
            type: string
          endpoint:
            minLength: 1
            type: string
          schemaUrn:
            minLength: 1
            type: string
          schemaExtensions:
            items:
              $ref: '#/components/schemas/ResourceType.SchemaExtensionConfiguration'
            type: array
      type: object
    ResourceType.SchemaExtensionConfiguration:
      properties:
        schemaUrn:
          minLength: 1
          type: string
        required:
          type: boolean
      type: object
    Role:
      example:
        isDefault: true
        deleted: true
        permissions:
          NAMESPACE:
            last: null
            first: null
            empty: true
          APPEXECUTION:
            last: null
            first: null
            empty: true
          APP:
            last: null
            first: null
            empty: true
          BLUEPRINT:
            last: null
            first: null
            empty: true
          EXECUTION:
            last: null
            first: null
            empty: true
          APITOKEN:
            last: null
            first: null
            empty: true
          USER:
            last: null
            first: null
            empty: true
          TENANT:
            last: null
            first: null
            empty: true
          FLOW:
            last: null
            first: null
            empty: true
          ROLE:
            last: null
            first: null
            empty: true
          GROUP:
            last: null
            first: null
            empty: true
          DASHBOARD:
            last: null
            first: null
            empty: true
          ME:
            last: null
            first: null
            empty: true
          IMPERSONATE:
            last: null
            first: null
            empty: true
          TEMPLATE:
            last: null
            first: null
            empty: true
          AUDITLOG:
            last: null
            first: null
            empty: true
          SETTING:
            last: null
            first: null
            empty: true
          INFRASTRUCTURE:
            last: null
            first: null
            empty: true
          KVSTORE:
            last: null
            first: null
            empty: true
          BINDING:
            last: null
            first: null
            empty: true
          SECRET:
            last: null
            first: null
            empty: true
        name: name
        description: description
        id: id
        isManaged: true
      properties:
        isManaged:
          type: boolean
        id:
          type: string
        name:
          type: string
        description:
          type: string
        permissions:
          $ref: '#/components/schemas/Role_permissions'
        isDefault:
          type: boolean
        deleted:
          type: boolean
      required:
      - deleted
      - description
      - id
      - isDefault
      - isManaged
      - name
      - permissions
      type: object
    RoleUsage:
      example:
        count: 1
      properties:
        count:
          format: int64
          type: integer
      type: object
    SLA:
      example:
        id: id
        type: MAX_DURATION
        behavior: FAIL
        labels:
          last: ""
          first: ""
          empty: true
      properties:
        id:
          minLength: 1
          type: string
        type:
          $ref: '#/components/schemas/SLA.Type'
        behavior:
          $ref: '#/components/schemas/SLA.Behavior'
        labels:
          $ref: '#/components/schemas/SLA_labels'
      required:
      - behavior
      - id
      - type
      type: object
    SLA.Behavior:
      enum:
      - FAIL
      - CANCEL
      - NONE
      type: string
    SLA.Type:
      enum:
      - MAX_DURATION
      - EXECUTION_ASSERTION
      type: string
    Schema:
      properties:
        attributes:
          items:
            $ref: '#/components/schemas/Schema.Attribute'
          maxItems: 65535
          minItems: 1
          type: array
        id:
          maxLength: 65535
          minLength: 1
          type: string
        name:
          type: string
        description:
          type: string
        meta:
          $ref: '#/components/schemas/Meta'
      required:
      - id
      type: object
    Schema.Attribute:
      properties:
        attributes:
          items:
            $ref: '#/components/schemas/Schema.Attribute'
          type: array
        urn:
          type: string
        name:
          pattern: "\\p{Alpha}(-|_|\\p{Alnum})*"
          type: string
        type:
          $ref: '#/components/schemas/Schema.Attribute.Type'
        subAttributes:
          items:
            $ref: '#/components/schemas/Schema.Attribute'
          type: array
        multiValued:
          type: boolean
        description:
          type: string
        required:
          type: boolean
        canonicalValues:
          items:
            type: string
          type: array
        caseExact:
          type: boolean
        mutability:
          $ref: '#/components/schemas/Schema.Attribute.Mutability'
        returned:
          $ref: '#/components/schemas/Schema.Attribute.Returned'
        uniqueness:
          $ref: '#/components/schemas/Schema.Attribute.Uniqueness'
        referenceTypes:
          items:
            type: string
          type: array
        accessor:
          type: object
        scimResourceIdReference:
          type: boolean
      type: object
    Schema.Attribute.Mutability:
      enum:
      - IMMUTABLE
      - READ_ONLY
      - READ_WRITE
      - WRITE_ONLY
      type: string
    Schema.Attribute.Returned:
      enum:
      - ALWAYS
      - DEFAULT
      - NEVER
      - REQUEST
      type: string
    Schema.Attribute.Type:
      enum:
      - BINARY
      - BOOLEAN
      - COMPLEX
      - DATE_TIME
      - DECIMAL
      - INTEGER
      - REFERENCE
      - STRING
      type: string
    Schema.Attribute.Uniqueness:
      enum:
      - GLOBAL
      - NONE
      - SERVER
      type: string
    Schema.AttributeAccessor:
      type: object
    SchemaType:
      enum:
      - flow
      - template
      - task
      - trigger
      - plugindefault
      - apps
      - dashboard
      type: string
      x-enum-varnames:
      - flow
      - template
      - task
      - trigger
      - plugindefault
      - apps
      - dashboard
    Schema_1:
      example:
        outputs:
          key: ""
        definitions:
          key: ""
        properties:
          key: ""
      properties:
        properties:
          additionalProperties: true
          type: object
        outputs:
          additionalProperties: true
          type: object
        definitions:
          additionalProperties: true
          type: object
      type: object
    ScimExtension:
      example:
        urn: urn
      properties:
        urn:
          type: string
      type: object
    ScimGroup:
      allOf:
      - $ref: '#/components/schemas/ScimResource'
      - $ref: '#/components/schemas/BaseResource_ScimResource_'
      - properties:
          displayName:
            type: string
          members:
            items:
              $ref: '#/components/schemas/GroupMembership'
            type: array
      type: object
    ScimResource:
      allOf:
      - $ref: '#/components/schemas/BaseResource_ScimResource_'
      - properties:
          baseUrn:
            type: string
          extensions:
            additionalProperties:
              $ref: '#/components/schemas/ScimExtension'
            type: object
          meta:
            $ref: '#/components/schemas/Meta'
          id:
            minLength: 1
            type: string
          externalId:
            type: string
          resourceType:
            type: string
      example:
        extensions:
          key:
            urn: urn
        meta:
          created: 2000-01-23T04:56:07.000+00:00
          location: location
          lastModified: 2000-01-23T04:56:07.000+00:00
          version: version
          resourceType: resourceType
        schemas:
        - schemas
        - schemas
        externalId: externalId
        id: id
        baseUrn: baseUrn
        resourceType: resourceType
      required:
      - meta
      - resourceType
      type: object
    ScimResourceWithOptionalId:
      allOf:
      - $ref: '#/components/schemas/ScimResource'
      - $ref: '#/components/schemas/BaseResource_ScimResource_'
      - properties:
          id:
            type: string
      type: object
    ScimUser:
      allOf:
      - $ref: '#/components/schemas/ScimResource'
      - $ref: '#/components/schemas/BaseResource_ScimResource_'
      - properties:
          primaryEmailAddress:
            allOf:
            - $ref: '#/components/schemas/Email'
            nullable: true
          active:
            type: boolean
          emails:
            items:
              $ref: '#/components/schemas/Email'
            type: array
          userName:
            type: string
          name:
            $ref: '#/components/schemas/Name'
          groups:
            items:
              $ref: '#/components/schemas/UserGroup'
            type: array
      description: Scim core schema.
      example:
        externalId: externalId
        active: true
        groups:
        - ref: ref
          display: display
          type: DIRECT
          value: value
        - ref: ref
          display: display
          type: DIRECT
          value: value
        baseUrn: baseUrn
        userName: userName
        primaryEmailAddress: ""
        emails:
        - type: type
          value: value
          primary: true
        - type: type
          value: value
          primary: true
        extensions:
          key:
            urn: urn
        meta:
          created: 2000-01-23T04:56:07.000+00:00
          location: location
          lastModified: 2000-01-23T04:56:07.000+00:00
          version: version
          resourceType: resourceType
        schemas:
        - schemas
        - schemas
        name:
          familyName: familyName
          givenName: givenName
        id: id
        resourceType: resourceType
      type: object
    SearchRequest:
      allOf:
      - $ref: '#/components/schemas/BaseResource_SearchRequest_'
      - properties:
          pageRequest:
            $ref: '#/components/schemas/PageRequest'
          sortRequest:
            $ref: '#/components/schemas/SortRequest'
          attributes:
            items:
              $ref: '#/components/schemas/AttributeReference'
            type: array
          excludedAttributes:
            items:
              $ref: '#/components/schemas/AttributeReference'
            type: array
          filter:
            $ref: '#/components/schemas/Filter'
          sortBy:
            $ref: '#/components/schemas/AttributeReference'
          sortOrder:
            $ref: '#/components/schemas/SortOrder'
          startIndex:
            format: int32
            type: integer
          count:
            format: int32
            type: integer
      example:
        filter:
          filter: filter
          expression: "{}"
        startIndex: 1
        schemas:
        - schemas
        - schemas
        sortOrder: null
        pageRequest:
          startIndex: 0
          count: 6
        count: 5
        attributes:
        - urn: urn
          attributeBase: attributeBase
          subAttributeName: subAttributeName
          attributeName: attributeName
          fullyQualifiedAttributeName: fullyQualifiedAttributeName
          fullAttributeName: fullAttributeName
        - urn: urn
          attributeBase: attributeBase
          subAttributeName: subAttributeName
          attributeName: attributeName
          fullyQualifiedAttributeName: fullyQualifiedAttributeName
          fullAttributeName: fullAttributeName
        sortBy:
          urn: urn
          attributeBase: attributeBase
          subAttributeName: subAttributeName
          attributeName: attributeName
          fullyQualifiedAttributeName: fullyQualifiedAttributeName
          fullAttributeName: fullAttributeName
        sortRequest:
          sortOrder: ASCENDING
          sortBy:
            urn: urn
            attributeBase: attributeBase
            subAttributeName: subAttributeName
            attributeName: attributeName
            fullyQualifiedAttributeName: fullyQualifiedAttributeName
            fullAttributeName: fullAttributeName
        excludedAttributes:
        - urn: urn
          attributeBase: attributeBase
          subAttributeName: subAttributeName
          attributeName: attributeName
          fullyQualifiedAttributeName: fullyQualifiedAttributeName
          fullAttributeName: fullAttributeName
        - urn: urn
          attributeBase: attributeBase
          subAttributeName: subAttributeName
          attributeName: attributeName
          fullyQualifiedAttributeName: fullyQualifiedAttributeName
          fullAttributeName: fullAttributeName
      type: object
    SearchResult_Flow_:
      example:
        model:
          outputs:
          - displayName: displayName
            description: description
            id: id
            type: STRING
            value: ""
          - displayName: displayName
            description: description
            id: id
            type: STRING
            value: ""
          variables:
            key: ""
          listeners:
          - description: description
            conditions:
            - type: type
            - type: type
            tasks:
            - allowFailure: true
              logLevel: ERROR
              runIf: runIf
              description: description
              disabled: true
              id: id
              workerGroup:
                fallback: FAIL
                key: key
              type: type
              logToFile: true
              retry: "{}"
              timeout:
                expression: expression
              allowWarning: true
            - allowFailure: true
              logLevel: ERROR
              runIf: runIf
              description: description
              disabled: true
              id: id
              workerGroup:
                fallback: FAIL
                key: key
              type: type
              logToFile: true
              retry: "{}"
              timeout:
                expression: expression
              allowWarning: true
          - description: description
            conditions:
            - type: type
            - type: type
            tasks:
            - allowFailure: true
              logLevel: ERROR
              runIf: runIf
              description: description
              disabled: true
              id: id
              workerGroup:
                fallback: FAIL
                key: key
              type: type
              logToFile: true
              retry: "{}"
              timeout:
                expression: expression
              allowWarning: true
            - allowFailure: true
              logLevel: ERROR
              runIf: runIf
              description: description
              disabled: true
              id: id
              workerGroup:
                fallback: FAIL
                key: key
              type: type
              logToFile: true
              retry: "{}"
              timeout:
                expression: expression
              allowWarning: true
          inputs:
          - dependsOn: ""
            defaults: ""
            displayName: displayName
            name: name
            description: description
            id: id
            type: ""
            required: true
          - dependsOn: ""
            defaults: ""
            displayName: displayName
            name: name
            description: description
            id: id
            type: ""
            required: true
          description: description
          sla:
          - id: id
            type: MAX_DURATION
            behavior: FAIL
            labels:
              last: ""
              first: ""
              empty: true
          - id: id
            type: MAX_DURATION
            behavior: FAIL
            labels:
              last: ""
              first: ""
              empty: true
          triggers:
          - minLogLevel: ""
            logLevel: null
            stopAfter:
            - CREATED
            - CREATED
            description: description
            disabled: true
            id: id
            workerGroup:
              fallback: FAIL
              key: key
            type: type
            conditions:
            - type: type
            - type: type
            logToFile: true
            labels:
              last: ""
              first: ""
              empty: true
          - minLogLevel: ""
            logLevel: null
            stopAfter:
            - CREATED
            - CREATED
            description: description
            disabled: true
            id: id
            workerGroup:
              fallback: FAIL
              key: key
            type: type
            conditions:
            - type: type
            - type: type
            logToFile: true
            labels:
              last: ""
              first: ""
              empty: true
          pluginDefaults:
          - forced: true
            values:
              key: ""
            type: type
          - forced: true
            values:
              key: ""
            type: type
          revision: 1
          labels: null
          concurrency:
            limit: 0
            behavior: QUEUE
          deleted: true
          taskDefaults:
          - forced: true
            values:
              key: ""
            type: type
          - forced: true
            values:
              key: ""
            type: type
          namespace: namespace
          disabled: true
          id: id
          tasks:
          - allowFailure: true
            logLevel: ERROR
            runIf: runIf
            description: description
            disabled: true
            id: id
            workerGroup:
              fallback: FAIL
              key: key
            type: type
            logToFile: true
            retry: "{}"
            timeout:
              expression: expression
            allowWarning: true
          - allowFailure: true
            logLevel: ERROR
            runIf: runIf
            description: description
            disabled: true
            id: id
            workerGroup:
              fallback: FAIL
              key: key
            type: type
            logToFile: true
            retry: "{}"
            timeout:
              expression: expression
            allowWarning: true
          errors:
          - allowFailure: true
            logLevel: ERROR
            runIf: runIf
            description: description
            disabled: true
            id: id
            workerGroup:
              fallback: FAIL
              key: key
            type: type
            logToFile: true
            retry: "{}"
            timeout:
              expression: expression
            allowWarning: true
          - allowFailure: true
            logLevel: ERROR
            runIf: runIf
            description: description
            disabled: true
            id: id
            workerGroup:
              fallback: FAIL
              key: key
            type: type
            logToFile: true
            retry: "{}"
            timeout:
              expression: expression
            allowWarning: true
          retry: null
        fragments:
        - fragments
        - fragments
      properties:
        model:
          $ref: '#/components/schemas/Flow'
        fragments:
          items:
            type: string
          type: array
      required:
      - fragments
      - model
      type: object
    SecurityIntegration.Type:
      enum:
      - SCIM
      type: string
    SequencedCollection_Action_:
      allOf:
      - $ref: '#/components/schemas/Collection_Action_'
      - properties:
          first:
            $ref: '#/components/schemas/Action'
          last:
            $ref: '#/components/schemas/Action'
      type: object
    SequencedCollection_Object_:
      allOf:
      - $ref: '#/components/schemas/Collection_Object_'
      - properties:
          first: {}
          last: {}
      type: object
    ServerConfig:
      example:
        terminationGracePeriod: 5m
        workerTaskRestartStrategy: ""
        liveness:
          heartbeatInterval: 3s
          interval: 5s
          initialDelay: 45s
          enabled: true
          timeout: 45s
      properties:
        workerTaskRestartStrategy:
          allOf:
          - $ref: '#/components/schemas/WorkerTaskRestartStrategy'
          nullable: true
        terminationGracePeriod:
          default: 5m
          type: string
        liveness:
          $ref: '#/components/schemas/ServerConfig.Liveness'
      required:
      - liveness
      - terminationGracePeriod
      type: object
    ServerConfig.Liveness:
      example:
        heartbeatInterval: 3s
        interval: 5s
        initialDelay: 45s
        enabled: true
        timeout: 45s
      properties:
        enabled:
          default: true
          type: boolean
        interval:
          default: 5s
          type: string
        timeout:
          default: 45s
          type: string
        initialDelay:
          default: 45s
          type: string
        heartbeatInterval:
          default: 3s
          type: string
      required:
      - enabled
      - heartbeatInterval
      - initialDelay
      - interval
      - timeout
      type: object
    ServerInstance:
      example:
        hostname: hostname
        id: id
        metrics:
        - baseUnit: baseUnit
          name: name
          description: description
          type: type
          value: ""
          tags:
          - value: value
            key: key
          - value: value
            key: key
        - baseUnit: baseUnit
          name: name
          description: description
          type: type
          value: ""
          tags:
          - value: value
            key: key
          - value: value
            key: key
        type: SERVER
        version: version
        props:
          key: ""
      properties:
        id:
          type: string
        type:
          $ref: '#/components/schemas/ServerInstance.Type'
        version:
          type: string
        hostname:
          type: string
        props:
          additionalProperties: true
          type: object
        metrics:
          items:
            $ref: '#/components/schemas/Metric'
          type: array
      required:
      - hostname
      - id
      - metrics
      - props
      - type
      - version
      type: object
    ServerInstance.Type:
      enum:
      - SERVER
      - STANDALONE
      type: string
    ServerType:
      enum:
      - EXECUTOR
      - INDEXER
      - SCHEDULER
      - STANDALONE
      - WEBSERVER
      - WORKER
      type: string
    Service.ServiceState:
      enum:
      - CREATED
      - RUNNING
      - ERROR
      - DISCONNECTED
      - TERMINATING
      - TERMINATED_GRACEFULLY
      - TERMINATED_FORCED
      - NOT_RUNNING
      - EMPTY
      type: string
    Service.ServiceType:
      enum:
      - EXECUTOR
      - INDEXER
      - SCHEDULER
      - WEBSERVER
      - WORKER
      type: string
    ServiceInstance:
      example:
        server:
          hostname: hostname
          id: id
          metrics:
          - baseUnit: baseUnit
            name: name
            description: description
            type: type
            value: ""
            tags:
            - value: value
              key: key
            - value: value
              key: key
          - baseUnit: baseUnit
            name: name
            description: description
            type: type
            value: ""
            tags:
            - value: value
              key: key
            - value: value
              key: key
          type: SERVER
          version: version
          props:
            key: ""
        createdAt: 2000-01-23T04:56:07.000+00:00
        metrics:
        - baseUnit: baseUnit
          name: name
          description: description
          type: type
          value: ""
          tags:
          - value: value
            key: key
          - value: value
            key: key
        - baseUnit: baseUnit
          name: name
          description: description
          type: type
          value: ""
          tags:
          - value: value
            key: key
          - value: value
            key: key
        state: CREATED
        id: id
        type: EXECUTOR
        config:
          terminationGracePeriod: 5m
          workerTaskRestartStrategy: ""
          liveness:
            heartbeatInterval: 3s
            interval: 5s
            initialDelay: 45s
            enabled: true
            timeout: 45s
        events:
        - state: null
          type: type
          value: value
          ts: 2000-01-23T04:56:07.000+00:00
        - state: null
          type: type
          value: value
          ts: 2000-01-23T04:56:07.000+00:00
        seqId: 0
        updatedAt: 2000-01-23T04:56:07.000+00:00
        props:
          key: ""
      properties:
        server:
          $ref: '#/components/schemas/ServerInstance'
        metrics:
          items:
            $ref: '#/components/schemas/Metric'
          type: array
        state:
          $ref: '#/components/schemas/Service.ServiceState'
        id:
          type: string
        type:
          $ref: '#/components/schemas/Service.ServiceType'
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        events:
          items:
            $ref: '#/components/schemas/ServiceInstance.TimestampedEvent'
          type: array
        config:
          $ref: '#/components/schemas/ServerConfig'
        props:
          additionalProperties: true
          type: object
        seqId:
          format: int64
          type: integer
      required:
      - config
      - createdAt
      - events
      - id
      - metrics
      - props
      - seqId
      - server
      - state
      - type
      - updatedAt
      type: object
    ServiceInstance.TimestampedEvent:
      example:
        state: null
        type: type
        value: value
        ts: 2000-01-23T04:56:07.000+00:00
      properties:
        ts:
          format: date-time
          type: string
        value:
          type: string
        type:
          type: string
        state:
          $ref: '#/components/schemas/Service.ServiceState'
      required:
      - state
      - ts
      - type
      - value
      type: object
    ServiceProviderConfiguration:
      allOf:
      - $ref: '#/components/schemas/ScimResourceWithOptionalId'
      - $ref: '#/components/schemas/ScimResource'
      - $ref: '#/components/schemas/BaseResource_ScimResource_'
      - properties:
          id:
            type: string
          documentationUrl:
            type: string
          patch:
            $ref: '#/components/schemas/ServiceProviderConfiguration.SupportedConfiguration'
          bulk:
            $ref: '#/components/schemas/ServiceProviderConfiguration.BulkConfiguration'
          filter:
            $ref: '#/components/schemas/ServiceProviderConfiguration.FilterConfiguration'
          changePassword:
            $ref: '#/components/schemas/ServiceProviderConfiguration.SupportedConfiguration'
          sort:
            $ref: '#/components/schemas/ServiceProviderConfiguration.SupportedConfiguration'
          etag:
            $ref: '#/components/schemas/ServiceProviderConfiguration.SupportedConfiguration'
          authenticationSchemes:
            items:
              $ref: '#/components/schemas/ServiceProviderConfiguration.AuthenticationSchema'
            type: array
      type: object
    ServiceProviderConfiguration.AuthenticationSchema:
      properties:
        type:
          $ref: '#/components/schemas/ServiceProviderConfiguration.AuthenticationSchema.Type'
        name:
          type: string
        description:
          type: string
        specUri:
          type: string
        documentationUri:
          type: string
      type: object
    ServiceProviderConfiguration.AuthenticationSchema.Type:
      enum:
      - OAUTH
      - OAUTH2
      - OAUTH_BEARER
      - HTTP_BASIC
      - HTTP_DIGEST
      type: string
    ServiceProviderConfiguration.BulkConfiguration:
      allOf:
      - $ref: '#/components/schemas/ServiceProviderConfiguration.SupportedConfiguration'
      - properties:
          maxOperations:
            format: int32
            type: integer
          maxPayloadSize:
            format: int32
            type: integer
      type: object
    ServiceProviderConfiguration.FilterConfiguration:
      allOf:
      - $ref: '#/components/schemas/ServiceProviderConfiguration.SupportedConfiguration'
      - properties:
          maxResults:
            format: int32
            type: integer
      type: object
    ServiceProviderConfiguration.SupportedConfiguration:
      properties:
        supported:
          type: boolean
      type: object
    ServiceUsage:
      properties:
        dailyStatistics:
          items:
            $ref: '#/components/schemas/ServiceUsage.DailyServiceStatistics'
          type: array
      required:
      - dailyStatistics
      type: object
    ServiceUsage.DailyServiceStatistics:
      properties:
        type:
          type: string
        values:
          items:
            $ref: '#/components/schemas/ServiceUsage.DailyStatistics'
          type: array
      required:
      - type
      - values
      type: object
    ServiceUsage.DailyStatistics:
      properties:
        date:
          format: date
          type: string
        min:
          format: int64
          type: integer
        max:
          format: int64
          type: integer
        avg:
          format: int64
          type: integer
      required:
      - avg
      - date
      - max
      - min
      type: object
    SetupConfiguration:
      example:
        multiTenancyEnabled: true
        secretType: secretType
        repositoryType: repositoryType
        queueType: queueType
        storageType: storageType
        defaultTenantEnabled: true
        done: true
        passwordRegexp: passwordRegexp
      properties:
        done:
          type: boolean
        multiTenancyEnabled:
          type: boolean
        defaultTenantEnabled:
          type: boolean
        repositoryType:
          type: string
        queueType:
          type: string
        storageType:
          type: string
        secretType:
          type: string
        passwordRegexp:
          type: string
      required:
      - done
      - passwordRegexp
      type: object
    SetupConfiguration.SetupData:
      properties:
        username:
          type: string
        password:
          type: string
        tenant:
          $ref: '#/components/schemas/Tenant'
      required:
      - password
      - tenant
      - username
      type: object
    SortOrder:
      enum:
      - ASCENDING
      - DESCENDING
      type: string
    SortRequest:
      example:
        sortOrder: ASCENDING
        sortBy:
          urn: urn
          attributeBase: attributeBase
          subAttributeName: subAttributeName
          attributeName: attributeName
          fullyQualifiedAttributeName: fullyQualifiedAttributeName
          fullAttributeName: fullAttributeName
      properties:
        sortBy:
          $ref: '#/components/schemas/AttributeReference'
        sortOrder:
          $ref: '#/components/schemas/SortOrder'
      type: object
    State:
      example:
        duration: duration
        current: CREATED
        endDate: 2000-01-23T04:56:07.000+00:00
        histories:
        - date: 2000-01-23T04:56:07.000+00:00
          state: null
        - date: 2000-01-23T04:56:07.000+00:00
          state: null
        startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        duration:
          readOnly: true
          type: string
        startDate:
          format: date-time
          readOnly: true
          type: string
        endDate:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        current:
          $ref: '#/components/schemas/State.Type'
        histories:
          items:
            $ref: '#/components/schemas/State.History'
          type: array
      required:
      - current
      type: object
    State.History:
      example:
        date: 2000-01-23T04:56:07.000+00:00
        state: null
      properties:
        state:
          $ref: '#/components/schemas/State.Type'
        date:
          format: date-time
          type: string
      required:
      - date
      - state
      type: object
    State.Type:
      enum:
      - CREATED
      - RUNNING
      - PAUSED
      - RESTARTED
      - KILLING
      - SUCCESS
      - WARNING
      - FAILED
      - KILLED
      - CANCELLED
      - QUEUED
      - RETRYING
      - RETRIED
      - SKIPPED
      type: string
    StatsController.ByFlowStatisticRequest:
      properties:
        q:
          nullable: true
          type: string
        namespace:
          nullable: true
          type: string
        flowId:
          nullable: true
          type: string
        flows:
          items:
            $ref: '#/components/schemas/ExecutionRepositoryInterface.FlowFilter'
          nullable: true
          type: array
        startDate:
          format: date-time
          nullable: true
          type: string
        endDate:
          format: date-time
          nullable: true
          type: string
        namespaceOnly:
          nullable: true
          type: boolean
      type: object
    StatsController.ByNamespaceStatisticRequest:
      properties:
        namespace:
          nullable: true
          type: string
        startDate:
          format: date-time
          nullable: true
          type: string
        endDate:
          format: date-time
          nullable: true
          type: string
      type: object
    StatsController.LastExecutionsRequest:
      properties:
        flows:
          items:
            $ref: '#/components/schemas/ExecutionRepositoryInterface.FlowFilter'
          nullable: true
          type: array
      type: object
    StatsController.LogStatisticRequest:
      properties:
        q:
          nullable: true
          type: string
        namespace:
          nullable: true
          type: string
        flowId:
          nullable: true
          type: string
        logLevel:
          allOf:
          - $ref: '#/components/schemas/Level'
          nullable: true
        startDate:
          format: date-time
          nullable: true
          type: string
        endDate:
          format: date-time
          nullable: true
          type: string
      type: object
    StatsController.StatisticRequest:
      properties:
        q:
          nullable: true
          type: string
        scope:
          items:
            $ref: '#/components/schemas/FlowScope'
          nullable: true
          type: array
        namespace:
          nullable: true
          type: string
        flowId:
          nullable: true
          type: string
        startDate:
          format: date-time
          nullable: true
          type: string
        endDate:
          format: date-time
          nullable: true
          type: string
        state:
          items:
            $ref: '#/components/schemas/State.Type'
          nullable: true
          type: array
      type: object
    StatsController.SummaryRequest:
      properties:
        namespace:
          nullable: true
          type: string
        startDate:
          format: date-time
          nullable: true
          type: string
        endDate:
          format: date-time
          nullable: true
          type: string
      type: object
    SummaryStatistics:
      example:
        flows: 0
        triggers: 6
      properties:
        flows:
          format: int32
          type: integer
        triggers:
          format: int32
          type: integer
      required:
      - flows
      - triggers
      type: object
    Task:
      example:
        allowFailure: true
        logLevel: ERROR
        runIf: runIf
        description: description
        disabled: true
        id: id
        workerGroup:
          fallback: FAIL
          key: key
        type: type
        logToFile: true
        retry: "{}"
        timeout:
          expression: expression
        allowWarning: true
      properties:
        id:
          minLength: 1
          pattern: "^[a-zA-Z0-9][a-zA-Z0-9_-]*"
          type: string
        type:
          minLength: 1
          pattern: "\\p{javaJavaIdentifierStart}\\p{javaJavaIdentifierPart}*(\\.\\\
            p{javaJavaIdentifierStart}\\p{javaJavaIdentifierPart}*)*"
          type: string
        description:
          type: string
        retry:
          type: object
        timeout:
          $ref: '#/components/schemas/Property_Duration_'
        disabled:
          type: boolean
        workerGroup:
          $ref: '#/components/schemas/WorkerGroup'
        logLevel:
          $ref: '#/components/schemas/Level'
        allowFailure:
          type: boolean
        logToFile:
          type: boolean
        runIf:
          type: string
        allowWarning:
          type: boolean
      required:
      - id
      - type
      type: object
    TaskForExecution:
      example:
        inputs:
        - dependsOn: ""
          defaults: ""
          displayName: displayName
          name: name
          description: description
          id: id
          type: ""
          required: true
        - dependsOn: ""
          defaults: ""
          displayName: displayName
          name: name
          description: description
          id: id
          type: ""
          required: true
        subflowId:
          namespace: namespace
          flowId: flowId
          revision: 6
        id: id
        type: type
        tasks:
        - null
        - null
      properties:
        id:
          minLength: 1
          pattern: "^[a-zA-Z0-9][a-zA-Z0-9_-]*"
          type: string
        type:
          minLength: 1
          pattern: "\\p{javaJavaIdentifierStart}\\p{javaJavaIdentifierPart}*(\\.\\\
            p{javaJavaIdentifierStart}\\p{javaJavaIdentifierPart}*)*"
          type: string
        tasks:
          items:
            $ref: '#/components/schemas/TaskForExecution'
          type: array
        inputs:
          items:
            $ref: '#/components/schemas/Input_Object_'
          type: array
        subflowId:
          $ref: '#/components/schemas/ExecutableTask.SubflowId'
      required:
      - id
      - type
      type: object
    TaskRun:
      example:
        outputs:
          key: ""
        parentTaskRunId: parentTaskRunId
        executionId: executionId
        namespace: namespace
        iteration: 6
        dynamic: true
        id: id
        state:
          duration: duration
          current: CREATED
          endDate: 2000-01-23T04:56:07.000+00:00
          histories:
          - date: 2000-01-23T04:56:07.000+00:00
            state: null
          - date: 2000-01-23T04:56:07.000+00:00
            state: null
          startDate: 2000-01-23T04:56:07.000+00:00
        items: items
        flowId: flowId
        value: value
        taskId: taskId
        attempts:
        - logFile: https://openapi-generator.tech
          metrics:
          - name: name
            type: type
            value: ""
            tags:
              key: tags
            timestamp: 2000-01-23T04:56:07.000+00:00
          - name: name
            type: type
            value: ""
            tags:
              key: tags
            timestamp: 2000-01-23T04:56:07.000+00:00
          state:
            duration: duration
            current: CREATED
            endDate: 2000-01-23T04:56:07.000+00:00
            histories:
            - date: 2000-01-23T04:56:07.000+00:00
              state: null
            - date: 2000-01-23T04:56:07.000+00:00
              state: null
            startDate: 2000-01-23T04:56:07.000+00:00
        - logFile: https://openapi-generator.tech
          metrics:
          - name: name
            type: type
            value: ""
            tags:
              key: tags
            timestamp: 2000-01-23T04:56:07.000+00:00
          - name: name
            type: type
            value: ""
            tags:
              key: tags
            timestamp: 2000-01-23T04:56:07.000+00:00
          state:
            duration: duration
            current: CREATED
            endDate: 2000-01-23T04:56:07.000+00:00
            histories:
            - date: 2000-01-23T04:56:07.000+00:00
              state: null
            - date: 2000-01-23T04:56:07.000+00:00
              state: null
            startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        items:
          deprecated: true
          type: string
        id:
          type: string
        executionId:
          type: string
        namespace:
          type: string
        flowId:
          type: string
        taskId:
          type: string
        parentTaskRunId:
          type: string
        value:
          type: string
        attempts:
          items:
            $ref: '#/components/schemas/TaskRunAttempt'
          type: array
        outputs:
          additionalProperties: true
          type: object
        state:
          $ref: '#/components/schemas/State'
        iteration:
          format: int32
          type: integer
        dynamic:
          type: boolean
      required:
      - attempts
      - dynamic
      - executionId
      - flowId
      - id
      - iteration
      - namespace
      - outputs
      - parentTaskRunId
      - state
      - taskId
      - value
      type: object
    TaskRunAttempt:
      example:
        logFile: https://openapi-generator.tech
        metrics:
        - name: name
          type: type
          value: ""
          tags:
            key: tags
          timestamp: 2000-01-23T04:56:07.000+00:00
        - name: name
          type: type
          value: ""
          tags:
            key: tags
          timestamp: 2000-01-23T04:56:07.000+00:00
        state:
          duration: duration
          current: CREATED
          endDate: 2000-01-23T04:56:07.000+00:00
          histories:
          - date: 2000-01-23T04:56:07.000+00:00
            state: null
          - date: 2000-01-23T04:56:07.000+00:00
            state: null
          startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        metrics:
          deprecated: true
          items:
            $ref: '#/components/schemas/AbstractMetricEntry_Object_'
          type: array
        state:
          $ref: '#/components/schemas/State'
        logFile:
          format: uri
          type: string
      required:
      - logFile
      - state
      type: object
    Template:
      example:
        deleted: true
        namespace: namespace
        description: description
        id: id
        tasks:
        - allowFailure: true
          logLevel: ERROR
          runIf: runIf
          description: description
          disabled: true
          id: id
          workerGroup:
            fallback: FAIL
            key: key
          type: type
          logToFile: true
          retry: "{}"
          timeout:
            expression: expression
          allowWarning: true
        - allowFailure: true
          logLevel: ERROR
          runIf: runIf
          description: description
          disabled: true
          id: id
          workerGroup:
            fallback: FAIL
            key: key
          type: type
          logToFile: true
          retry: "{}"
          timeout:
            expression: expression
          allowWarning: true
        errors:
        - allowFailure: true
          logLevel: ERROR
          runIf: runIf
          description: description
          disabled: true
          id: id
          workerGroup:
            fallback: FAIL
            key: key
          type: type
          logToFile: true
          retry: "{}"
          timeout:
            expression: expression
          allowWarning: true
        - allowFailure: true
          logLevel: ERROR
          runIf: runIf
          description: description
          disabled: true
          id: id
          workerGroup:
            fallback: FAIL
            key: key
          type: type
          logToFile: true
          retry: "{}"
          timeout:
            expression: expression
          allowWarning: true
      properties:
        id:
          minLength: 1
          pattern: "^[a-zA-Z0-9][a-zA-Z0-9._-]*"
          type: string
        namespace:
          pattern: "^[a-z0-9][a-z0-9._-]*"
          type: string
        description:
          type: string
        tasks:
          items:
            $ref: '#/components/schemas/Task'
          minItems: 1
          type: array
        errors:
          items:
            $ref: '#/components/schemas/Task'
          type: array
        deleted:
          type: boolean
      required:
      - deleted
      - description
      - errors
      - id
      - namespace
      - tasks
      type: object
    Tenant:
      example:
        deleted: true
        storageConfiguration:
          key: ""
        secretType: secretType
        secretConfiguration:
          key: ""
        name: name
        storageType: storageType
        id: id
        workerGroup:
          fallback: FAIL
          key: key
      properties:
        id:
          pattern: "^[a-z0-9][a-z0-9_-]*"
          type: string
        name:
          type: string
        deleted:
          type: boolean
        workerGroup:
          $ref: '#/components/schemas/WorkerGroup'
        storageType:
          type: string
        storageConfiguration:
          additionalProperties: true
          type: object
        secretType:
          type: string
        secretConfiguration:
          additionalProperties: true
          type: object
      required:
      - deleted
      - id
      - name
      - secretConfiguration
      - secretType
      - storageConfiguration
      - storageType
      - workerGroup
      type: object
    TenantUsage:
      example:
        count: 7
      properties:
        count:
          format: int64
          type: integer
      type: object
    TimeWindow:
      example:
        default: default
        max: max
      properties:
        default:
          type: string
        max:
          type: string
      type: object
    Trigger:
      allOf:
      - $ref: '#/components/schemas/TriggerContext'
      - properties:
          executionId:
            nullable: true
            type: string
          updatedDate:
            format: date-time
            nullable: true
            type: string
          evaluateRunningDate:
            format: date-time
            nullable: true
            type: string
          workerId:
            nullable: true
            type: string
      example:
        date: 2000-01-23T04:56:07.000+00:00
        workerId: workerId
        nextExecutionDate: 2000-01-23T04:56:07.000+00:00
        stopAfter:
        - CREATED
        - CREATED
        triggerId: triggerId
        updatedDate: 2000-01-23T04:56:07.000+00:00
        executionId: executionId
        tenantId: tenantId
        namespace: namespace
        backfill: ""
        evaluateRunningDate: 2000-01-23T04:56:07.000+00:00
        disabled: true
        flowId: flowId
      type: object
    TriggerContext:
      properties:
        disabled:
          type: boolean
        tenantId:
          pattern: "^[a-z0-9][a-z0-9_-]"
          type: string
        namespace:
          type: string
        flowId:
          type: string
        triggerId:
          type: string
        date:
          format: date-time
          type: string
        nextExecutionDate:
          format: date-time
          nullable: true
          type: string
        backfill:
          allOf:
          - $ref: '#/components/schemas/Backfill'
          nullable: true
        stopAfter:
          items:
            $ref: '#/components/schemas/State.Type'
          nullable: true
          type: array
      required:
      - date
      - flowId
      - namespace
      - triggerId
      type: object
    TriggerController.SetDisabledRequest:
      properties:
        triggers:
          items:
            $ref: '#/components/schemas/Trigger'
          type: array
        disabled:
          type: boolean
      required:
      - disabled
      - triggers
      type: object
    TriggerController.Triggers:
      example:
        triggerContext:
          date: 2000-01-23T04:56:07.000+00:00
          workerId: workerId
          nextExecutionDate: 2000-01-23T04:56:07.000+00:00
          stopAfter:
          - CREATED
          - CREATED
          triggerId: triggerId
          updatedDate: 2000-01-23T04:56:07.000+00:00
          executionId: executionId
          tenantId: tenantId
          namespace: namespace
          backfill: ""
          evaluateRunningDate: 2000-01-23T04:56:07.000+00:00
          disabled: true
          flowId: flowId
        abstractTrigger:
          minLogLevel: ""
          logLevel: null
          stopAfter:
          - CREATED
          - CREATED
          description: description
          disabled: true
          id: id
          workerGroup:
            fallback: FAIL
            key: key
          type: type
          conditions:
          - type: type
          - type: type
          logToFile: true
          labels:
            last: ""
            first: ""
            empty: true
      properties:
        abstractTrigger:
          $ref: '#/components/schemas/AbstractTrigger'
        triggerContext:
          $ref: '#/components/schemas/Trigger'
      required:
      - abstractTrigger
      - triggerContext
      type: object
    Type:
      enum:
      - STRING
      - ENUM
      - SELECT
      - INT
      - FLOAT
      - BOOLEAN
      - DATETIME
      - DATE
      - TIME
      - DURATION
      - FILE
      - JSON
      - URI
      - SECRET
      - ARRAY
      - MULTISELECT
      - YAML
      - EMAIL
      type: string
    Usage:
      example:
        environments:
        - environments
        - environments
        configurations:
          secretType: secretType
          repositoryType: repositoryType
          queueType: queueType
          storageType: storageType
          javaSecurityEnabled: true
        plugins:
        - manifest:
            key: manifest
        - manifest:
            key: manifest
        startUuid: startUuid
        services: ""
        uuid: uuid
        version: version
        uri: uri
        executions:
          dailyTaskRunsCount:
          - duration:
              min: min
              avg: avg
              max: max
              count: 0
              sum: sum
            groupBy: groupBy
            startDate: 2000-01-23T04:56:07.000+00:00
            executionCounts:
              SUCCESS: 7
              RUNNING: 1
              RETRYING: 1
              WARNING: 9
              PAUSED: 5
              CANCELLED: 4
              CREATED: 6
              KILLING: 2
              FAILED: 3
              RETRIED: 1
              QUEUED: 7
              SKIPPED: 1
              RESTARTED: 5
              KILLED: 2
          - duration:
              min: min
              avg: avg
              max: max
              count: 0
              sum: sum
            groupBy: groupBy
            startDate: 2000-01-23T04:56:07.000+00:00
            executionCounts:
              SUCCESS: 7
              RUNNING: 1
              RETRYING: 1
              WARNING: 9
              PAUSED: 5
              CANCELLED: 4
              CREATED: 6
              KILLING: 2
              FAILED: 3
              RETRIED: 1
              QUEUED: 7
              SKIPPED: 1
              RESTARTED: 5
              KILLED: 2
          dailyExecutionsCount:
          - duration:
              min: min
              avg: avg
              max: max
              count: 0
              sum: sum
            groupBy: groupBy
            startDate: 2000-01-23T04:56:07.000+00:00
            executionCounts:
              SUCCESS: 7
              RUNNING: 1
              RETRYING: 1
              WARNING: 9
              PAUSED: 5
              CANCELLED: 4
              CREATED: 6
              KILLING: 2
              FAILED: 3
              RETRIED: 1
              QUEUED: 7
              SKIPPED: 1
              RESTARTED: 5
              KILLED: 2
          - duration:
              min: min
              avg: avg
              max: max
              count: 0
              sum: sum
            groupBy: groupBy
            startDate: 2000-01-23T04:56:07.000+00:00
            executionCounts:
              SUCCESS: 7
              RUNNING: 1
              RETRYING: 1
              WARNING: 9
              PAUSED: 5
              CANCELLED: 4
              CREATED: 6
              KILLING: 2
              FAILED: 3
              RETRIED: 1
              QUEUED: 7
              SKIPPED: 1
              RESTARTED: 5
              KILLED: 2
        flows:
          taskRunnerTypeCount:
            key: 3
          triggerTypeCount:
            key: 9
          taskTypeCount:
            key: 7
          count: 5
          namespacesCount: 2
        serverType: EXECUTOR
        instanceUuid: instanceUuid
        host:
          jvm:
            vendor: vendor
            name: name
            version: version
          os:
            codeName: codeName
            family: family
            version: version
            buildNumber: buildNumber
          uuid: uuid
          hardware:
            memory: 5
            maxFreq: 1
            logicalProcessorCount: 0
            knownDockerMacAddr: true
            physicalProcessorCount: 6
            knownVmMacAddr: true
        zoneId: zoneId
        startTime: 2000-01-23T04:56:07.000+00:00
      properties:
        uuid:
          type: string
        startUuid:
          type: string
        instanceUuid:
          type: string
        serverType:
          $ref: '#/components/schemas/ServerType'
        version:
          type: string
        zoneId:
          type: string
        uri:
          nullable: true
          type: string
        environments:
          items:
            type: string
          nullable: true
          type: array
        startTime:
          format: date-time
          type: string
        host:
          $ref: '#/components/schemas/HostUsage'
        configurations:
          $ref: '#/components/schemas/ConfigurationUsage'
        plugins:
          items:
            $ref: '#/components/schemas/PluginUsage'
          type: array
        flows:
          $ref: '#/components/schemas/FlowUsage'
        executions:
          $ref: '#/components/schemas/ExecutionUsage'
        services:
          allOf:
          - $ref: '#/components/schemas/ServiceUsage'
          nullable: true
      required:
      - configurations
      - environments
      - executions
      - flows
      - host
      - instanceUuid
      - plugins
      - serverType
      - services
      - startTime
      - startUuid
      - uri
      - uuid
      - version
      - zoneId
      type: object
    Usage_1:
      allOf:
      - $ref: '#/components/schemas/Usage'
      - properties:
          groups:
            $ref: '#/components/schemas/GroupUsage'
          users:
            $ref: '#/components/schemas/UserUsage'
          roles:
            $ref: '#/components/schemas/RoleUsage'
          namespaces:
            $ref: '#/components/schemas/NamespaceUsage'
          tenants:
            $ref: '#/components/schemas/TenantUsage'
      type: object
    Usage_2:
      allOf:
      - $ref: '#/components/schemas/Usage'
      - properties:
          groups:
            $ref: '#/components/schemas/GroupUsage'
          users:
            $ref: '#/components/schemas/UserUsage'
          roles:
            $ref: '#/components/schemas/RoleUsage'
          namespaces:
            $ref: '#/components/schemas/NamespaceUsage'
          tenants:
            $ref: '#/components/schemas/TenantUsage'
      type: object
    Usage_3:
      allOf:
      - $ref: '#/components/schemas/Usage'
      - properties:
          groups:
            $ref: '#/components/schemas/GroupUsage'
          users:
            $ref: '#/components/schemas/UserUsage'
          roles:
            $ref: '#/components/schemas/RoleUsage'
          namespaces:
            $ref: '#/components/schemas/NamespaceUsage'
          tenants:
            $ref: '#/components/schemas/TenantUsage'
      example:
        tenants:
          count: 7
        environments:
        - environments
        - environments
        configurations:
          secretType: secretType
          repositoryType: repositoryType
          queueType: queueType
          storageType: storageType
          javaSecurityEnabled: true
        plugins:
        - manifest:
            key: manifest
        - manifest:
            key: manifest
        roles:
          count: 1
        groups:
          count: 2
        startUuid: startUuid
        services: ""
        uuid: uuid
        version: version
        uri: uri
        users:
          count: 4
          oidcCount: 1
          apiKeyCount: 7
          basicAuthCount: 1
        executions:
          dailyTaskRunsCount:
          - duration:
              min: min
              avg: avg
              max: max
              count: 0
              sum: sum
            groupBy: groupBy
            startDate: 2000-01-23T04:56:07.000+00:00
            executionCounts:
              SUCCESS: 7
              RUNNING: 1
              RETRYING: 1
              WARNING: 9
              PAUSED: 5
              CANCELLED: 4
              CREATED: 6
              KILLING: 2
              FAILED: 3
              RETRIED: 1
              QUEUED: 7
              SKIPPED: 1
              RESTARTED: 5
              KILLED: 2
          - duration:
              min: min
              avg: avg
              max: max
              count: 0
              sum: sum
            groupBy: groupBy
            startDate: 2000-01-23T04:56:07.000+00:00
            executionCounts:
              SUCCESS: 7
              RUNNING: 1
              RETRYING: 1
              WARNING: 9
              PAUSED: 5
              CANCELLED: 4
              CREATED: 6
              KILLING: 2
              FAILED: 3
              RETRIED: 1
              QUEUED: 7
              SKIPPED: 1
              RESTARTED: 5
              KILLED: 2
          dailyExecutionsCount:
          - duration:
              min: min
              avg: avg
              max: max
              count: 0
              sum: sum
            groupBy: groupBy
            startDate: 2000-01-23T04:56:07.000+00:00
            executionCounts:
              SUCCESS: 7
              RUNNING: 1
              RETRYING: 1
              WARNING: 9
              PAUSED: 5
              CANCELLED: 4
              CREATED: 6
              KILLING: 2
              FAILED: 3
              RETRIED: 1
              QUEUED: 7
              SKIPPED: 1
              RESTARTED: 5
              KILLED: 2
          - duration:
              min: min
              avg: avg
              max: max
              count: 0
              sum: sum
            groupBy: groupBy
            startDate: 2000-01-23T04:56:07.000+00:00
            executionCounts:
              SUCCESS: 7
              RUNNING: 1
              RETRYING: 1
              WARNING: 9
              PAUSED: 5
              CANCELLED: 4
              CREATED: 6
              KILLING: 2
              FAILED: 3
              RETRIED: 1
              QUEUED: 7
              SKIPPED: 1
              RESTARTED: 5
              KILLED: 2
        flows:
          taskRunnerTypeCount:
            key: 3
          triggerTypeCount:
            key: 9
          taskTypeCount:
            key: 7
          count: 5
          namespacesCount: 2
        serverType: EXECUTOR
        instanceUuid: instanceUuid
        host:
          jvm:
            vendor: vendor
            name: name
            version: version
          os:
            codeName: codeName
            family: family
            version: version
            buildNumber: buildNumber
          uuid: uuid
          hardware:
            memory: 5
            maxFreq: 1
            logicalProcessorCount: 0
            knownDockerMacAddr: true
            physicalProcessorCount: 6
            knownVmMacAddr: true
        zoneId: zoneId
        startTime: 2000-01-23T04:56:07.000+00:00
        namespaces:
          count: 6
      type: object
    Usage_4:
      allOf:
      - $ref: '#/components/schemas/Usage'
      - properties:
          groups:
            $ref: '#/components/schemas/GroupUsage'
          users:
            $ref: '#/components/schemas/UserUsage'
          roles:
            $ref: '#/components/schemas/RoleUsage'
          namespaces:
            $ref: '#/components/schemas/NamespaceUsage'
          tenants:
            $ref: '#/components/schemas/TenantUsage'
      example:
        tenants:
          count: 7
        environments:
        - environments
        - environments
        configurations:
          secretType: secretType
          repositoryType: repositoryType
          queueType: queueType
          storageType: storageType
          javaSecurityEnabled: true
        plugins:
        - manifest:
            key: manifest
        - manifest:
            key: manifest
        roles:
          count: 1
        groups:
          count: 2
        startUuid: startUuid
        services: ""
        uuid: uuid
        version: version
        uri: uri
        users:
          count: 4
          oidcCount: 1
          apiKeyCount: 7
          basicAuthCount: 1
        executions:
          dailyTaskRunsCount:
          - duration:
              min: min
              avg: avg
              max: max
              count: 0
              sum: sum
            groupBy: groupBy
            startDate: 2000-01-23T04:56:07.000+00:00
            executionCounts:
              SUCCESS: 7
              RUNNING: 1
              RETRYING: 1
              WARNING: 9
              PAUSED: 5
              CANCELLED: 4
              CREATED: 6
              KILLING: 2
              FAILED: 3
              RETRIED: 1
              QUEUED: 7
              SKIPPED: 1
              RESTARTED: 5
              KILLED: 2
          - duration:
              min: min
              avg: avg
              max: max
              count: 0
              sum: sum
            groupBy: groupBy
            startDate: 2000-01-23T04:56:07.000+00:00
            executionCounts:
              SUCCESS: 7
              RUNNING: 1
              RETRYING: 1
              WARNING: 9
              PAUSED: 5
              CANCELLED: 4
              CREATED: 6
              KILLING: 2
              FAILED: 3
              RETRIED: 1
              QUEUED: 7
              SKIPPED: 1
              RESTARTED: 5
              KILLED: 2
          dailyExecutionsCount:
          - duration:
              min: min
              avg: avg
              max: max
              count: 0
              sum: sum
            groupBy: groupBy
            startDate: 2000-01-23T04:56:07.000+00:00
            executionCounts:
              SUCCESS: 7
              RUNNING: 1
              RETRYING: 1
              WARNING: 9
              PAUSED: 5
              CANCELLED: 4
              CREATED: 6
              KILLING: 2
              FAILED: 3
              RETRIED: 1
              QUEUED: 7
              SKIPPED: 1
              RESTARTED: 5
              KILLED: 2
          - duration:
              min: min
              avg: avg
              max: max
              count: 0
              sum: sum
            groupBy: groupBy
            startDate: 2000-01-23T04:56:07.000+00:00
            executionCounts:
              SUCCESS: 7
              RUNNING: 1
              RETRYING: 1
              WARNING: 9
              PAUSED: 5
              CANCELLED: 4
              CREATED: 6
              KILLING: 2
              FAILED: 3
              RETRIED: 1
              QUEUED: 7
              SKIPPED: 1
              RESTARTED: 5
              KILLED: 2
        flows:
          taskRunnerTypeCount:
            key: 3
          triggerTypeCount:
            key: 9
          taskTypeCount:
            key: 7
          count: 5
          namespacesCount: 2
        serverType: EXECUTOR
        instanceUuid: instanceUuid
        host:
          jvm:
            vendor: vendor
            name: name
            version: version
          os:
            codeName: codeName
            family: family
            version: version
            buildNumber: buildNumber
          uuid: uuid
          hardware:
            memory: 5
            maxFreq: 1
            logicalProcessorCount: 0
            knownDockerMacAddr: true
            physicalProcessorCount: 6
            knownVmMacAddr: true
        zoneId: zoneId
        startTime: 2000-01-23T04:56:07.000+00:00
        namespaces:
          count: 6
      type: object
    UserGroup:
      example:
        ref: ref
        display: display
        type: DIRECT
        value: value
      properties:
        value:
          type: string
        ref:
          type: string
        display:
          type: string
        type:
          $ref: '#/components/schemas/UserGroup.Type'
      type: object
    UserGroup.Type:
      enum:
      - DIRECT
      - INDIRECT
      type: string
    UserType:
      enum:
      - STANDARD
      - SERVICE_ACCOUNT
      - SUPER_ADMIN
      type: string
    UserUsage:
      example:
        count: 4
        oidcCount: 1
        apiKeyCount: 7
        basicAuthCount: 1
      properties:
        count:
          format: int64
          type: integer
        apiKeyCount:
          format: int64
          type: integer
        oidcCount:
          format: int64
          type: integer
        basicAuthCount:
          format: int64
          type: integer
      required:
      - apiKeyCount
      - basicAuthCount
      - count
      - oidcCount
      type: object
    ValidateConstraintViolation:
      example:
        outdated: true
        warnings:
        - warnings
        - warnings
        namespace: namespace
        index: 0
        deprecationPaths:
        - deprecationPaths
        - deprecationPaths
        constraints: constraints
        flow: flow
        infos:
        - infos
        - infos
      properties:
        flow:
          type: string
        namespace:
          type: string
        index:
          format: int32
          type: integer
        constraints:
          type: string
        outdated:
          type: boolean
        deprecationPaths:
          items:
            type: string
          type: array
        warnings:
          items:
            type: string
          type: array
        infos:
          items:
            type: string
          type: array
      required:
      - constraints
      - deprecationPaths
      - flow
      - index
      - infos
      - namespace
      - outdated
      - warnings
      type: object
    ValuePathExpression:
      example:
        attributeExpression: "{}"
        attributePath:
          urn: urn
          attributeBase: attributeBase
          subAttributeName: subAttributeName
          attributeName: attributeName
          fullyQualifiedAttributeName: fullyQualifiedAttributeName
          fullAttributeName: fullAttributeName
      properties:
        attributePath:
          $ref: '#/components/schemas/AttributeReference'
        attributeExpression:
          type: object
      required:
      - attributePath
      type: object
    WorkerGroup:
      example:
        fallback: FAIL
        key: key
      properties:
        key:
          pattern: "^[a-zA-Z0-9][a-zA-Z0-9_-]*"
          type: string
        fallback:
          $ref: '#/components/schemas/WorkerGroup.Fallback'
      type: object
    WorkerGroup.Fallback:
      enum:
      - FAIL
      - WAIT
      - CANCEL
      type: string
    WorkerTaskRestartStrategy:
      enum:
      - NEVER
      - IMMEDIATELY
      - AFTER_TERMINATION_GRACE_PERIOD
      type: string
    create_5_200_response:
      oneOf:
      - $ref: '#/components/schemas/Flow'
      - $ref: '#/components/schemas/FlowWithSource'
    importFlows_request:
      properties:
        fileUpload:
          description: "The file to import, can be a ZIP archive or a multi-objects\
            \ YAML file"
          format: binary
          type: string
      type: object
    updateNamespace_200_response:
      oneOf:
      - items:
          $ref: '#/components/schemas/Flow'
        type: array
      - items:
          $ref: '#/components/schemas/FlowWithSource'
        type: array
    update_3_200_response:
      oneOf:
      - $ref: '#/components/schemas/FlowWithSource'
      - $ref: '#/components/schemas/Flow'
    createFile_request:
      properties:
        fileContent:
          format: binary
          type: string
      type: object
    setLogo_request:
      properties:
        logo:
          description: The logo file
          format: binary
          type: string
      type: object
    tenantUsage_200_response:
      oneOf:
      - $ref: '#/components/schemas/Usage_3'
      - $ref: '#/components/schemas/Usage_1'
    tenantUsage_1_200_response:
      oneOf:
      - $ref: '#/components/schemas/Usage_4'
      - $ref: '#/components/schemas/Usage_2'
    The_labels_to_pass_to_the_execution_created_:
      oneOf:
      - $ref: '#/components/schemas/List_Object_'
      - $ref: '#/components/schemas/Map_Object.Object_'
      title: The labels to pass to the execution created.
      type: object
    DailyExecutionStatistics_executionCounts:
      example:
        SUCCESS: 7
        RUNNING: 1
        RETRYING: 1
        WARNING: 9
        PAUSED: 5
        CANCELLED: 4
        CREATED: 6
        KILLING: 2
        FAILED: 3
        RETRIED: 1
        QUEUED: 7
        SKIPPED: 1
        RESTARTED: 5
        KILLED: 2
      properties:
        CREATED:
          format: int64
          type: integer
        RUNNING:
          format: int64
          type: integer
        PAUSED:
          format: int64
          type: integer
        RESTARTED:
          format: int64
          type: integer
        KILLING:
          format: int64
          type: integer
        SUCCESS:
          format: int64
          type: integer
        WARNING:
          format: int64
          type: integer
        FAILED:
          format: int64
          type: integer
        KILLED:
          format: int64
          type: integer
        CANCELLED:
          format: int64
          type: integer
        QUEUED:
          format: int64
          type: integer
        RETRYING:
          format: int64
          type: integer
        RETRIED:
          format: int64
          type: integer
        SKIPPED:
          format: int64
          type: integer
    Flow_allOf_labels:
      type: object
    LogStatistics_counts:
      example:
        TRACE: 5
        ERROR: 0
        INFO: 1
        DEBUG: 5
        WARN: 6
      properties:
        ERROR:
          format: int64
          type: integer
        WARN:
          format: int64
          type: integer
        INFO:
          format: int64
          type: integer
        DEBUG:
          format: int64
          type: integer
        TRACE:
          format: int64
          type: integer
    Role_permissions:
      example:
        NAMESPACE:
          last: null
          first: null
          empty: true
        APPEXECUTION:
          last: null
          first: null
          empty: true
        APP:
          last: null
          first: null
          empty: true
        BLUEPRINT:
          last: null
          first: null
          empty: true
        EXECUTION:
          last: null
          first: null
          empty: true
        APITOKEN:
          last: null
          first: null
          empty: true
        USER:
          last: null
          first: null
          empty: true
        TENANT:
          last: null
          first: null
          empty: true
        FLOW:
          last: null
          first: null
          empty: true
        ROLE:
          last: null
          first: null
          empty: true
        GROUP:
          last: null
          first: null
          empty: true
        DASHBOARD:
          last: null
          first: null
          empty: true
        ME:
          last: null
          first: null
          empty: true
        IMPERSONATE:
          last: null
          first: null
          empty: true
        TEMPLATE:
          last: null
          first: null
          empty: true
        AUDITLOG:
          last: null
          first: null
          empty: true
        SETTING:
          last: null
          first: null
          empty: true
        INFRASTRUCTURE:
          last: null
          first: null
          empty: true
        KVSTORE:
          last: null
          first: null
          empty: true
        BINDING:
          last: null
          first: null
          empty: true
        SECRET:
          last: null
          first: null
          empty: true
      properties:
        FLOW:
          $ref: '#/components/schemas/List_Action_'
        BLUEPRINT:
          $ref: '#/components/schemas/List_Action_'
        TEMPLATE:
          $ref: '#/components/schemas/List_Action_'
        NAMESPACE:
          $ref: '#/components/schemas/List_Action_'
        EXECUTION:
          $ref: '#/components/schemas/List_Action_'
        USER:
          $ref: '#/components/schemas/List_Action_'
        GROUP:
          $ref: '#/components/schemas/List_Action_'
        ROLE:
          $ref: '#/components/schemas/List_Action_'
        BINDING:
          $ref: '#/components/schemas/List_Action_'
        AUDITLOG:
          $ref: '#/components/schemas/List_Action_'
        SECRET:
          $ref: '#/components/schemas/List_Action_'
        KVSTORE:
          $ref: '#/components/schemas/List_Action_'
        IMPERSONATE:
          $ref: '#/components/schemas/List_Action_'
        SETTING:
          $ref: '#/components/schemas/List_Action_'
        INFRASTRUCTURE:
          $ref: '#/components/schemas/List_Action_'
        APP:
          $ref: '#/components/schemas/List_Action_'
        APPEXECUTION:
          $ref: '#/components/schemas/List_Action_'
        ME:
          $ref: '#/components/schemas/List_Action_'
        APITOKEN:
          $ref: '#/components/schemas/List_Action_'
        DASHBOARD:
          $ref: '#/components/schemas/List_Action_'
        TENANT:
          $ref: '#/components/schemas/List_Action_'
    SLA_labels:
      oneOf:
      - $ref: '#/components/schemas/List_Object_'
      - $ref: '#/components/schemas/Map_Object.Object_'
      type: object

